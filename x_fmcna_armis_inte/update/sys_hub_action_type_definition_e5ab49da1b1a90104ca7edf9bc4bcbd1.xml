<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>main_processallattributeuploads_v21</internal_name>
        <label_cache>[{"name":"{{action.max_seconds}}","label":"action➛max_seconds","type":"action","ref":""},{"name":"{{action.record_age_hours}}","label":"action➛record_age_hours","type":"action","ref":""},{"name":"{{step[7fbff9ef-a229-40fe-9adc-c00495a0f3e9].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[7fbff9ef-a229-40fe-9adc-c00495a0f3e9].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <latest_snapshot>77450c881be210104ca7edf9bc4bcb67</latest_snapshot>
        <master_snapshot>958d41921b5a90104ca7edf9bc4bcb0f</master_snapshot>
        <name>MAIN_QueueAllDevicePropertiesEtc (v2.2)</name>
        <natlang/>
        <outputs/>
        <state>draft</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:47:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>e5ab49da1b1a90104ca7edf9bc4bcbd1</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>MAIN_QueueAllDevicePropertiesEtc (v2.2)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_e5ab49da1b1a90104ca7edf9bc4bcbd1</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-09-10 14:32:10</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="delete_multiple" query="document_key=e5ab49da1b1a90104ca7edf9bc4bcbd1"/>
    <sys_hub_step_instance action="delete_multiple" query="action=e5ab49da1b1a90104ca7edf9bc4bcbd1^sys_idNOT IN598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="MAIN_QueueAllDevicePropertiesEtc (v2.2)">e5ab49da1b1a90104ca7edf9bc4bcbd1</action>
        <cid>7fbff9ef-a229-40fe-9adc-c00495a0f3e9</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>598dc9521b5a90104ca7edf9bc4bcb15</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-09-10 14:32:10</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>598dc9521b5a90104ca7edf9bc4bcb15</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>118d01921b5a90104ca7edf9bc4bcbf1</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-09-10 14:32:10</sys_updated_on>
        <value>/*

This script iterates through all devices that have a link and haven't pushed all properties up to Armis yet, and pushes those properties up to Armis.

*/

//GENERAL FUNCTION LIBRARY v0.10 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isIPv6(e){return!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isIPv4(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)}function isValidIPAddress(e){return isIPv4(e)||isIPV6(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}

//'TABLES AND REST' FUNCTION LIBRARY v0.15 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",(""+e.payload).substring(0,1999)],["response_code",e.response_code],["response_body",(""+e.response_body).substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};null!=e.key&amp;&amp;""!=e.key||(e.key=e.name);var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["property_name",e.name]],t.update_pairs=[["property_value",e.value],["property_key",e.key],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.unique_pairs=[["armis_mac",e.mac],["attribute",e.attribute]],t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.armis_id],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["application_name",e.name]],t.update_pairs=[["execution_id",e.execution_id],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function executeStandardREST(e){try{var t=new GlideDateTime,i=new sn_ws.RESTMessageV2("Armis API",e.endpoint);i.setRequestHeader("Authorization",getCurrentToken()),i.setRequestHeader("accept","application/json"),i.setRequestHeader("content-type","application/json"),null==e.query_params&amp;&amp;(e.query_params=[]);for(var a=0;a&lt;e.query_params.length;a++)i.setQueryParameter(e.query_params[a][0],e.query_params[a][1]);i.setRequestBody(e.payload);var r,n=now(),s={};return 1==e.async?r=i.executeAsync():(r=i.execute(),s.response_code=r.getStatusCode(),s.response_body=r.getBody()),s.api_time=now()-n,writeToAPILog({id:e.id,endpoint:e.endpoint,payload:e.payload,response_code:s.response_code,response_body:s.response_body,start_time:t,time_delta_ms:s.api_time}),s}catch(e){return(s={response_code:"xx"}).response_body="Failed to build query. "+e,s.api_time=0,s}}function queueAttachmentREST(e){var t=new GlideRecord("sys_attachment"),i=(new GlideSysAttachment).write(t,e.id+".csv","text/plain",e.payload),a=new GlideRecord("x_fmcna_armis_inte_armis_attachment_upload");a.initialize(),a.attachment=i,a.execution_id=e.id,a.status="PENDING",a.type=e.type,a.content=e.payload,a.insert()}function getBestMAC(e){if(isValidMACAddress(e.mac_address)&amp;&amp;!e.mac_address.endsWith("00:00:01"))return e.mac_address;var t=new GlideRecord("cmdb_ci_network_adapter");t.addQuery("cmdb_ci",e.sys_id),t.query();for(var i=null,a=-1e3;t.next();)if(isValidMACAddress(t.mac_address)&amp;&amp;!t.mac_address.endsWith("00:00:01")){var r=0;(""+t.ip_address).startsWith("10.")&amp;&amp;(r+=1e3),(""+t.name).startsWith("Local Area")&amp;&amp;(r+=900);var n=new GlideAggregate("cmdb_ci_network_adapter");n.addAggregate("COUNT"),n.addQuery("mac_address",t.mac_address),n.query(),n.next()&amp;&amp;(r-=n.getAggregate("COUNT")),r&gt;a&amp;&amp;r&gt;0&amp;&amp;(i=""+t.mac_address,a=r)}return i}function queueInitialARPandCSV(e,t){var i=getBestMAC(e),a=e.ip_address;isValidMACAddress(i)&amp;&amp;isValidIPAddress(a)&amp;&amp;(queueARP({execution_id:t,mac:i,ip:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"NAME",value:""+e.name}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"IP",value:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"TAG",value:getConfigValue("armis_import_universal_tag")}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"LAST_SEEN",value:(new GlideDateTime).getDisplayValue().replace(" ","T")}),null!=e.model_id&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"MODEL",value:e.model_id.getDisplayValue()}),null!=e.os&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS",value:e.os.getDisplayValue()}),null!=e.os_version&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS_VERSION",value:e.os_version}),null!=e.users&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"USER",value:e.users}))}function getPendingRecordsEndSysID(e,t,i){null==i&amp;&amp;(i={}),null==i.force_field&amp;&amp;(i.force_field="status"),null==i.force_pending&amp;&amp;(i.force_pending="PENDING");var a=new GlideRecord(t);for(a.addQuery(i.force_field,i.force_pending),a.setLimit(e),a.orderBy("sys_id"),a.query();a.next();)if(0==a.hasNext())return a.getValue("sys_id");return null}function getNumPendingRecords(e,t,i,a){null==a&amp;&amp;(a={}),null==a.force_field&amp;&amp;(a.force_field="status"),null==a.force_pending&amp;&amp;(a.force_pending="PENDING");var r=new GlideRecord(t);return r.addQuery(a.force_field,a.force_pending),r.setLimit(e),r.orderBy("sys_id"),r.addQuery("sys_id","&lt;=",i),r.query(),r}



(function execute(inputs, outputs) {

  var debug = ['BEGIN QueueAllDevicePropertiesEtc']
  var start_time = now()
  var lap = now()
  var api_total = 0
  var heavy_total = 0
  var execution_id = generateID()
  var total_properties = 0
  var total_applications = 0
  var devices_count = 0
  var error_message = ''
  var this_now = now()
  
  
  try
  {
    
    //Get the list of all fields we will need to pull, and what to do for each
    var p = new GlideRecord('x_fmcna_armis_inte_armis_snow_attribute_map')
    p.query()
    
    var field_dictionary = []
    while(p.next())
    {
      var entry =  {}
      entry.field_name = p.getValue('snow_field')
      entry.upload_type = p.getValue('upload_type')
      entry.armis_attribute_description = p.getValue('armis_attribute_description')
      entry.armis_property_key = p.getValue('armis_property_key')
      entry.format_as_utc = p.getValue('format_as_utc')
      entry.is_mapped_upload = p.getValue('is_mapped_upload')
      field_dictionary.push(entry)
    }
    debug.push(JSON.stringify(field_dictionary));return
    
    debug.push("Loaded property dictionary."+ lapReport(lap));lap=now()
    

    //Clear the COMPLETE entries off the Properties and Applications tables. (This is truly necessary, these tables get HUGE very quickly.)
    var tables_to_clear = [
      ['x_fmcna_armis_inte_armis_op_property_upload','properties'],
      ['x_fmcna_armis_inte_armis_op_application_upload','applications'],
      ['x_fmcna_armis_inte_armis_op_key_attribute','key attributes'],
      ['x_fmcna_armis_inte_armis_op_arp_table','arp entries']]

    for(var i=0;i&lt;tables_to_clear.length;i++)
    {
      var table_name = tables_to_clear[i][0]
      var table_display = tables_to_clear[i][1]
      var clear = new GlideRecord(table_name)
      clear.addQuery('status','COMPLETE') 
      clear.query()
      debug.push("Queried " + clear.getRowCount() + " completed " + table_display + ". " + lapReport(lap));lap=now()
      clear.deleteMultiple()
      debug.push("Cleared completed " + table_display + ". " + lapReport(lap));lap=now()
    } 

    //Get all devices that haven't been pushed

    var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
    q.addQuery('has_pushed_all_properties_to_armis',false)
    q.addNotNullQuery('linked_snow_computer')
    q.query()
    debug.push('Found ' + q.getRowCount() + ' records that need to be pushed. ' + lapReport(lap));lap=now()

    //LOOP!
    var max_seconds = parseInt(inputs.max_seconds)
    if(isNaN(max_seconds)) { max_seconds = 240 }
    var end_loop_early = false
    while(q.next() &amp;&amp; end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_seconds*1000)
    {
      var snow_id = q.linked_snow_computer
      var snow_device = new GlideRecord('cmdb_ci_computer')
      snow_device.addQuery('sys_id',snow_id)
      snow_device.query()
      if(!snow_device.next()) {
        debug.push("Bad record--computer does not exist. Removing link. " + lapReport(lap));lap=now()
        q.setValue('novel_link_attempted',false)
        q.setValue('linked_snow_computer',null)
        q.update()
        continue
      }

      devices_count++
      debug.push("Processing Armis device " + q.name + " (" + q.sys_id + "), linked to SNOW device " + snow_device.name + " " + lapReport(lap));lap=now()

      //Push ARP and key attributes
      queueInitialARPandCSV(snow_device,execution_id)
      debug.push("-Queued ARP and CSV " + lapReport(lap));lap=now()

      //Push properties
      var local_property_count = 0
      for(var i=0;i&lt;field_dictionary.keys.length;i++)
      {
        var field_name = property_dictionary.keys[i]
        var field_name_display_value = property_dictionary[field_name]["armis_attribute_description"]
		outputs.debug = field_name + field_name_display_value
        return
        //Does this actually have a value?
        if(snow_device.getValue(field_name) != null)
        {
          var field_value = snow_device.getDisplayValue(field_name)

          //If we have an non-empty value, queue the property!
          if(field_value != '')
          {
            if(local_property_count == 0) { debug.push("--(PROP) " + field_name_display_value + ": " + field_value + " "  + lapReport(lap));lap=now() }
            total_properties++
            local_property_count++
            queueProperty({armis_id: q.armis_device_id, execution_id: execution_id, name: field_name_display_value, value: field_value})
          }
        }
      }
      if(local_property_count &gt; 1) { debug.push("--(queued " + (local_property_count-1) + " more properties.) " + lapReport(lap));lap=now() }

      //Push applications
      //First, get all software installs that are associated with our SNOW computer
      var s = new GlideRecord('cmdb_software_instance')
      s.addQuery('installed_on',snow_device.sys_id)
      s.query()
      
      debug.push("-SOFTWARE: Found " + s.getRowCount() + " installs. " + lapReport(lap));lap=now()
      var local_application_count = 0
      while(s.next())
      {
        var software = s.software
        if (software != null)
        {
          total_applications++
          if(local_application_count == 0) { debug.push("--(APP) " + ('' + software.name) + " (" + ('' + software.version) + ") " + lapReport(lap));lap=now() }
          local_application_count++
          queueApplication({execution_id: execution_id, armis_id: q.armis_device_id, name: '' + software.name, version: '' + software.version})
        }
      }
      if(local_application_count &gt; 1) { debug.push("--(queued " + (local_application_count-1) + " more applications.) "  + lapReport(lap));lap=now() }
      
      //And finally, mark this as complete.
      q.setValue('has_pushed_all_properties_to_armis',true)
      q.update()
      debug.push("-Marked complete, moving to next. "  + lapReport(lap));lap=now()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }
  
  var report = error_message + devices_count + '/' + q.getRowCount() + ' devices checked, ' + total_properties + ' properties and ' + total_applications + ' applications queued for upload.'
  var time_diff = now() - start_time
  debug = debug.join('\n')
  outputs.debug = debug
  if(q.getRowCount() &gt; 0) { writeToActionLog({id: execution_id, action_type: 'MAIN_QueueAllDevicePropertiesEtc', total_time: time_diff, api_time: 0, heavy_processing_time: time_diff, report: report, debug_string: debug}) }
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>598dc9521b5a90104ca7edf9bc4bcb15</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>5d8d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>198d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_seconds</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_id>b7f71dd21b9a90104ca7edf9bc4bcbd6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_598dc9521b5a90104ca7edf9bc4bcb15</table>
        <value>{{action.max_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>d98d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=598dc9521b5a90104ca7edf9bc4bcb15^sys_idNOT INfff71dd21b9a90104ca7edf9bc4bcbcb"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">598dc9521b5a90104ca7edf9bc4bcb15</model>
        <model_id>598dc9521b5a90104ca7edf9bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_598dc9521b5a90104ca7edf9bc4bcb15</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>fff71dd21b9a90104ca7edf9bc4bcbcb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=598dc9521b5a90104ca7edf9bc4bcb15^sys_idNOT INceb1215a1bda90104ca7edf9bc4bcbd1"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=4dafb26d-66df-4723-9954-aad8f6c57655</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">598dc9521b5a90104ca7edf9bc4bcb15</model>
        <model_id>598dc9521b5a90104ca7edf9bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_598dc9521b5a90104ca7edf9bc4bcb15</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:24:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ceb1215a1bda90104ca7edf9bc4bcbd1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:24:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=e5ab49da1b1a90104ca7edf9bc4bcbd1^sys_idNOT INb3f75d521b9a90104ca7edf9bc4bcbcc"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=1df5be3d-9fc2-43a3-8246-2150e28c9b63</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_seconds</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="MAIN_QueueAllDevicePropertiesEtc (v2.2)">e5ab49da1b1a90104ca7edf9bc4bcbd1</model>
        <model_id>e5ab49da1b1a90104ca7edf9bc4bcbd1</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_e5ab49da1b1a90104ca7edf9bc4bcbd1</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b3f75d521b9a90104ca7edf9bc4bcbcc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_step_instance action="delete_multiple" query="action=e5ab49da1b1a90104ca7edf9bc4bcbd1^sys_idNOT IN598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="MAIN_QueueAllDevicePropertiesEtc (v2.2)">e5ab49da1b1a90104ca7edf9bc4bcbd1</action>
        <cid>7fbff9ef-a229-40fe-9adc-c00495a0f3e9</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>598dc9521b5a90104ca7edf9bc4bcb15</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-09-10 14:32:10</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>598dc9521b5a90104ca7edf9bc4bcb15</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>118d01921b5a90104ca7edf9bc4bcbf1</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-09-10 14:32:10</sys_updated_on>
        <value>/*

This script iterates through all devices that have a link and haven't pushed all properties up to Armis yet, and pushes those properties up to Armis.

*/

//GENERAL FUNCTION LIBRARY v0.10 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isIPv6(e){return!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isIPv4(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)}function isValidIPAddress(e){return isIPv4(e)||isIPV6(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}

//'TABLES AND REST' FUNCTION LIBRARY v0.15 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",(""+e.payload).substring(0,1999)],["response_code",e.response_code],["response_body",(""+e.response_body).substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};null!=e.key&amp;&amp;""!=e.key||(e.key=e.name);var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["property_name",e.name]],t.update_pairs=[["property_value",e.value],["property_key",e.key],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.unique_pairs=[["armis_mac",e.mac],["attribute",e.attribute]],t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.armis_id],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["application_name",e.name]],t.update_pairs=[["execution_id",e.execution_id],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function executeStandardREST(e){try{var t=new GlideDateTime,i=new sn_ws.RESTMessageV2("Armis API",e.endpoint);i.setRequestHeader("Authorization",getCurrentToken()),i.setRequestHeader("accept","application/json"),i.setRequestHeader("content-type","application/json"),null==e.query_params&amp;&amp;(e.query_params=[]);for(var a=0;a&lt;e.query_params.length;a++)i.setQueryParameter(e.query_params[a][0],e.query_params[a][1]);i.setRequestBody(e.payload);var r,n=now(),s={};return 1==e.async?r=i.executeAsync():(r=i.execute(),s.response_code=r.getStatusCode(),s.response_body=r.getBody()),s.api_time=now()-n,writeToAPILog({id:e.id,endpoint:e.endpoint,payload:e.payload,response_code:s.response_code,response_body:s.response_body,start_time:t,time_delta_ms:s.api_time}),s}catch(e){return(s={response_code:"xx"}).response_body="Failed to build query. "+e,s.api_time=0,s}}function queueAttachmentREST(e){var t=new GlideRecord("sys_attachment"),i=(new GlideSysAttachment).write(t,e.id+".csv","text/plain",e.payload),a=new GlideRecord("x_fmcna_armis_inte_armis_attachment_upload");a.initialize(),a.attachment=i,a.execution_id=e.id,a.status="PENDING",a.type=e.type,a.content=e.payload,a.insert()}function getBestMAC(e){if(isValidMACAddress(e.mac_address)&amp;&amp;!e.mac_address.endsWith("00:00:01"))return e.mac_address;var t=new GlideRecord("cmdb_ci_network_adapter");t.addQuery("cmdb_ci",e.sys_id),t.query();for(var i=null,a=-1e3;t.next();)if(isValidMACAddress(t.mac_address)&amp;&amp;!t.mac_address.endsWith("00:00:01")){var r=0;(""+t.ip_address).startsWith("10.")&amp;&amp;(r+=1e3),(""+t.name).startsWith("Local Area")&amp;&amp;(r+=900);var n=new GlideAggregate("cmdb_ci_network_adapter");n.addAggregate("COUNT"),n.addQuery("mac_address",t.mac_address),n.query(),n.next()&amp;&amp;(r-=n.getAggregate("COUNT")),r&gt;a&amp;&amp;r&gt;0&amp;&amp;(i=""+t.mac_address,a=r)}return i}function queueInitialARPandCSV(e,t){var i=getBestMAC(e),a=e.ip_address;isValidMACAddress(i)&amp;&amp;isValidIPAddress(a)&amp;&amp;(queueARP({execution_id:t,mac:i,ip:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"NAME",value:""+e.name}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"IP",value:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"TAG",value:getConfigValue("armis_import_universal_tag")}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"LAST_SEEN",value:(new GlideDateTime).getDisplayValue().replace(" ","T")}),null!=e.model_id&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"MODEL",value:e.model_id.getDisplayValue()}),null!=e.os&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS",value:e.os.getDisplayValue()}),null!=e.os_version&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS_VERSION",value:e.os_version}),null!=e.users&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"USER",value:e.users}))}function getPendingRecordsEndSysID(e,t,i){null==i&amp;&amp;(i={}),null==i.force_field&amp;&amp;(i.force_field="status"),null==i.force_pending&amp;&amp;(i.force_pending="PENDING");var a=new GlideRecord(t);for(a.addQuery(i.force_field,i.force_pending),a.setLimit(e),a.orderBy("sys_id"),a.query();a.next();)if(0==a.hasNext())return a.getValue("sys_id");return null}function getNumPendingRecords(e,t,i,a){null==a&amp;&amp;(a={}),null==a.force_field&amp;&amp;(a.force_field="status"),null==a.force_pending&amp;&amp;(a.force_pending="PENDING");var r=new GlideRecord(t);return r.addQuery(a.force_field,a.force_pending),r.setLimit(e),r.orderBy("sys_id"),r.addQuery("sys_id","&lt;=",i),r.query(),r}



(function execute(inputs, outputs) {

  var debug = ['BEGIN QueueAllDevicePropertiesEtc']
  var start_time = now()
  var lap = now()
  var api_total = 0
  var heavy_total = 0
  var execution_id = generateID()
  var total_properties = 0
  var total_applications = 0
  var devices_count = 0
  var error_message = ''
  var this_now = now()
  
  
  try
  {
    
    //Get the list of all fields we will need to pull, and what to do for each
    var p = new GlideRecord('x_fmcna_armis_inte_armis_snow_attribute_map')
    p.query()
    
    var field_dictionary = []
    while(p.next())
    {
      var entry =  {}
      entry.field_name = p.getValue('snow_field')
      entry.upload_type = p.getValue('upload_type')
      entry.armis_attribute_description = p.getValue('armis_attribute_description')
      entry.armis_property_key = p.getValue('armis_property_key')
      entry.format_as_utc = p.getValue('format_as_utc')
      entry.is_mapped_upload = p.getValue('is_mapped_upload')
      field_dictionary.push(entry)
    }
    debug.push(JSON.stringify(field_dictionary));return
    
    debug.push("Loaded property dictionary."+ lapReport(lap));lap=now()
    

    //Clear the COMPLETE entries off the Properties and Applications tables. (This is truly necessary, these tables get HUGE very quickly.)
    var tables_to_clear = [
      ['x_fmcna_armis_inte_armis_op_property_upload','properties'],
      ['x_fmcna_armis_inte_armis_op_application_upload','applications'],
      ['x_fmcna_armis_inte_armis_op_key_attribute','key attributes'],
      ['x_fmcna_armis_inte_armis_op_arp_table','arp entries']]

    for(var i=0;i&lt;tables_to_clear.length;i++)
    {
      var table_name = tables_to_clear[i][0]
      var table_display = tables_to_clear[i][1]
      var clear = new GlideRecord(table_name)
      clear.addQuery('status','COMPLETE') 
      clear.query()
      debug.push("Queried " + clear.getRowCount() + " completed " + table_display + ". " + lapReport(lap));lap=now()
      clear.deleteMultiple()
      debug.push("Cleared completed " + table_display + ". " + lapReport(lap));lap=now()
    } 

    //Get all devices that haven't been pushed

    var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
    q.addQuery('has_pushed_all_properties_to_armis',false)
    q.addNotNullQuery('linked_snow_computer')
    q.query()
    debug.push('Found ' + q.getRowCount() + ' records that need to be pushed. ' + lapReport(lap));lap=now()

    //LOOP!
    var max_seconds = parseInt(inputs.max_seconds)
    if(isNaN(max_seconds)) { max_seconds = 240 }
    var end_loop_early = false
    while(q.next() &amp;&amp; end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_seconds*1000)
    {
      var snow_id = q.linked_snow_computer
      var snow_device = new GlideRecord('cmdb_ci_computer')
      snow_device.addQuery('sys_id',snow_id)
      snow_device.query()
      if(!snow_device.next()) {
        debug.push("Bad record--computer does not exist. Removing link. " + lapReport(lap));lap=now()
        q.setValue('novel_link_attempted',false)
        q.setValue('linked_snow_computer',null)
        q.update()
        continue
      }

      devices_count++
      debug.push("Processing Armis device " + q.name + " (" + q.sys_id + "), linked to SNOW device " + snow_device.name + " " + lapReport(lap));lap=now()

      //Push ARP and key attributes
      queueInitialARPandCSV(snow_device,execution_id)
      debug.push("-Queued ARP and CSV " + lapReport(lap));lap=now()

      //Push properties
      var local_property_count = 0
      for(var i=0;i&lt;field_dictionary.keys.length;i++)
      {
        var field_name = property_dictionary.keys[i]
        var field_name_display_value = property_dictionary[field_name]["armis_attribute_description"]
		outputs.debug = field_name + field_name_display_value
        return
        //Does this actually have a value?
        if(snow_device.getValue(field_name) != null)
        {
          var field_value = snow_device.getDisplayValue(field_name)

          //If we have an non-empty value, queue the property!
          if(field_value != '')
          {
            if(local_property_count == 0) { debug.push("--(PROP) " + field_name_display_value + ": " + field_value + " "  + lapReport(lap));lap=now() }
            total_properties++
            local_property_count++
            queueProperty({armis_id: q.armis_device_id, execution_id: execution_id, name: field_name_display_value, value: field_value})
          }
        }
      }
      if(local_property_count &gt; 1) { debug.push("--(queued " + (local_property_count-1) + " more properties.) " + lapReport(lap));lap=now() }

      //Push applications
      //First, get all software installs that are associated with our SNOW computer
      var s = new GlideRecord('cmdb_software_instance')
      s.addQuery('installed_on',snow_device.sys_id)
      s.query()
      
      debug.push("-SOFTWARE: Found " + s.getRowCount() + " installs. " + lapReport(lap));lap=now()
      var local_application_count = 0
      while(s.next())
      {
        var software = s.software
        if (software != null)
        {
          total_applications++
          if(local_application_count == 0) { debug.push("--(APP) " + ('' + software.name) + " (" + ('' + software.version) + ") " + lapReport(lap));lap=now() }
          local_application_count++
          queueApplication({execution_id: execution_id, armis_id: q.armis_device_id, name: '' + software.name, version: '' + software.version})
        }
      }
      if(local_application_count &gt; 1) { debug.push("--(queued " + (local_application_count-1) + " more applications.) "  + lapReport(lap));lap=now() }
      
      //And finally, mark this as complete.
      q.setValue('has_pushed_all_properties_to_armis',true)
      q.update()
      debug.push("-Marked complete, moving to next. "  + lapReport(lap));lap=now()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }
  
  var report = error_message + devices_count + '/' + q.getRowCount() + ' devices checked, ' + total_properties + ' properties and ' + total_applications + ' applications queued for upload.'
  var time_diff = now() - start_time
  debug = debug.join('\n')
  outputs.debug = debug
  if(q.getRowCount() &gt; 0) { writeToActionLog({id: execution_id, action_type: 'MAIN_QueueAllDevicePropertiesEtc', total_time: time_diff, api_time: 0, heavy_processing_time: time_diff, report: report, debug_string: debug}) }
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>598dc9521b5a90104ca7edf9bc4bcb15</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>5d8d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=598dc9521b5a90104ca7edf9bc4bcb15"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>198d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_seconds</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_id>b7f71dd21b9a90104ca7edf9bc4bcbd6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_598dc9521b5a90104ca7edf9bc4bcb15</table>
        <value>{{action.max_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>598dc9521b5a90104ca7edf9bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>d98d01921b5a90104ca7edf9bc4bcbf0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=598dc9521b5a90104ca7edf9bc4bcb15^sys_idNOT INfff71dd21b9a90104ca7edf9bc4bcbcb"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">598dc9521b5a90104ca7edf9bc4bcb15</model>
        <model_id>598dc9521b5a90104ca7edf9bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_598dc9521b5a90104ca7edf9bc4bcb15</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>fff71dd21b9a90104ca7edf9bc4bcbcb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=598dc9521b5a90104ca7edf9bc4bcb15^sys_idNOT INceb1215a1bda90104ca7edf9bc4bcbd1"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=4dafb26d-66df-4723-9954-aad8f6c57655</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">598dc9521b5a90104ca7edf9bc4bcb15</model>
        <model_id>598dc9521b5a90104ca7edf9bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_598dc9521b5a90104ca7edf9bc4bcb15</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:24:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ceb1215a1bda90104ca7edf9bc4bcbd1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:24:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_e5ab49da1b1a90104ca7edf9bc4bcbd1^sys_idNOT IN3ff71dd21b9a90104ca7edf9bc4bcbc4"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_seconds</element>
        <help/>
        <hint/>
        <label>max_seconds</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_e5ab49da1b1a90104ca7edf9bc4bcbd1</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 09:41:40</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3ff71dd21b9a90104ca7edf9bc4bcbc4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 09:41:40</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_hub_action_plan action="delete_multiple" query="action_id=e5ab49da1b1a90104ca7edf9bc4bcbd1^sys_idNOT IN6d8d41921b5a90104ca7edf9bc4bcb38"/>
    <sys_hub_action_plan action="INSERT_OR_UPDATE">
        <action_id display_value="MAIN_QueueAllDevicePropertiesEtc (v2.2)">e5ab49da1b1a90104ca7edf9bc4bcbd1</action_id>
        <plan>{"persistor":{"@class":".ChunkingPlanPersistor","table":"sys_hub_action_plan","id":"6d8d41921b5a90104ca7edf9bc4bcb38","name":"plan"}}</plan>
        <snapshot>77450c881be210104ca7edf9bc4bcb67</snapshot>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:55</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>6d8d41921b5a90104ca7edf9bc4bcb38</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_overrides/>
        <sys_scope/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:09:49</sys_updated_on>
    </sys_hub_action_plan>
    <sys_hub_action_type_snapshot action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <internal_name>main_processallattributeuploads_v21</internal_name>
        <label_cache>[{"name":"{{action.max_seconds}}","label":"action➛max_seconds","type":"action","ref":""},{"name":"{{action.record_age_hours}}","label":"action➛record_age_hours","type":"action","ref":""},{"name":"{{step[7fbff9ef-a229-40fe-9adc-c00495a0f3e9].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[7fbff9ef-a229-40fe-9adc-c00495a0f3e9].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <master>true</master>
        <name>MAIN_QueueAllDevicePropertiesEtc (v2.1)</name>
        <natlang/>
        <outputs/>
        <parent_action display_value="MAIN_QueueAllDevicePropertiesEtc (v2.2)">e5ab49da1b1a90104ca7edf9bc4bcbd1</parent_action>
        <sys_class_name>sys_hub_action_type_snapshot</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>958d41921b5a90104ca7edf9bc4bcb0f</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name/>
        <sys_overrides/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 15:19:29</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_snapshot>
    <sys_variable_value action="delete_multiple" query="document_key=958d41921b5a90104ca7edf9bc4bcb0f"/>
    <sys_hub_step_instance action="delete_multiple" query="action=958d41921b5a90104ca7edf9bc4bcb0f^sys_idNOT INdd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="MAIN_QueueAllDevicePropertiesEtc (v2.1)">958d41921b5a90104ca7edf9bc4bcb0f</action>
        <cid>7fbff9ef-a229-40fe-9adc-c00495a0f3e9</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>dd8d41921b5a90104ca7edf9bc4bcb10</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:09:47</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=dd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>dd8d41921b5a90104ca7edf9bc4bcb10</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>998d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:09:47</sys_updated_on>
        <value>/*

This script iterates through all devices that have a link and haven't pushed all properties up to Armis yet, and pushes those properties up to Armis.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}

//'TABLES AND REST' FUNCTION LIBRARY v0.12 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",(""+e.payload).substring(0,1999)],["response_code",e.response_code],["response_body",(""+e.response_body).substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["property_name",e.name]],t.update_pairs=[["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.unique_pairs=[["armis_mac",e.mac],["attribute",e.attribute]],t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.armis_id],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["application_name",e.name]],t.update_pairs=[["execution_id",e.execution_id],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function executeStandardREST(e){try{var t=new GlideDateTime,i=new sn_ws.RESTMessageV2("Armis API",e.endpoint);i.setRequestHeader("Authorization",getCurrentToken()),i.setRequestHeader("accept","application/json"),i.setRequestHeader("content-type","application/json"),null==e.query_params&amp;&amp;(e.query_params=[]);for(var a=0;a&lt;e.query_params.length;a++)i.setQueryParameter(e.query_params[a][0],e.query_params[a][1]);i.setRequestBody(e.payload);var r,n=now(),u={};return 1==e.async?r=i.executeAsync():(r=i.execute(),u.response_code=r.getStatusCode(),u.response_body=r.getBody()),u.api_time=now()-n,writeToAPILog({id:e.id,endpoint:e.endpoint,payload:e.payload,response_code:u.response_code,response_body:u.response_body,start_time:t,time_delta_ms:u.api_time}),u}catch(e){return(u={response_code:"xx"}).response_body="Failed to build query. "+e,u.api_time=0,u}}function queueAttachmentREST(e){var t=new GlideRecord("sys_attachment"),i=(new GlideSysAttachment).write(t,e.id+".csv","text/plain",e.payload),a=new GlideRecord("x_fmcna_armis_inte_armis_attachment_upload");a.initialize(),a.attachment=i,a.execution_id=e.id,a.status="PENDING",a.type=e.type,a.content=e.payload,a.insert()}function queueInitialARPandCSV(e,t){var i=e.mac_address,a=e.ip_address;isValidMACAddress(i)&amp;&amp;isValidIPAddress(a)&amp;&amp;(queueARP({execution_id:t,mac:i,ip:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"NAME",value:""+e.name}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"IP",value:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"TAG",value:getConfigValue("armis_import_universal_tag")}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"LAST_SEEN",value:(new GlideDateTime).getDisplayValue().replace(" ","T")}),null!=e.model_id&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"MODEL",value:e.model_id.getDisplayValue()}),null!=e.os&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS",value:e.os.getDisplayValue()}),null!=e.os_version&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS_VERSION",value:e.os_version}),null!=e.users&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"USER",value:e.users}))}function getPendingRecordsEndSysID(e,t,i){null==i&amp;&amp;(i={}),null==i.force_field&amp;&amp;(i.force_field="status"),null==i.force_pending&amp;&amp;(i.force_pending="PENDING");var a=new GlideRecord(t);for(a.addQuery(i.force_field,i.force_pending),a.setLimit(e),a.orderBy("sys_id"),a.query();a.next();)if(0==a.hasNext())return a.getValue("sys_id");return null}function getNumPendingRecords(e,t,i,a){null==a&amp;&amp;(a={}),null==a.force_field&amp;&amp;(a.force_field="status"),null==a.force_pending&amp;&amp;(a.force_pending="PENDING");var r=new GlideRecord(t);return r.addQuery(a.force_field,a.force_pending),r.setLimit(e),r.orderBy("sys_id"),r.addQuery("sys_id","&lt;=",i),r.query(),r}





(function execute(inputs, outputs) {

  var debug = ['BEGIN QueueDevicesThatneedUploads']
  var start_time = now()
  var lap = now()
  var api_total = 0
  var heavy_total = 0
  var execution_id = generateID()
  var total_properties = 0
  var total_applications = 0
  var devices_count = 0
  var error_message = ''
  var this_now = now()
  
  
  try
  {
    
    //Combine property references (did multiple config fields for extensibility)
    var property_reference = getConfigValue('snow_property_reference_1') + getConfigValue('snow_property_reference_2') + getConfigValue('snow_property_reference_3')
    property_reference = property_reference.split(',')

    //Split propertes. We will end up with a dictionary of the form { field_name: 'display value'} that we will use to govern what gets sent to Armis.
    var property_dictionary = []
    for(var i=0;i&lt;property_reference.length;i++) { var p = property_reference[i].split(':'); property_dictionary.push([p[0],p[1]]) }

    //Clear the COMPLETE entries off the Properties and Applications tables. (This is truly necessary, these tables get HUGE very quickly.)
    var tables_to_clear = [
      ['x_fmcna_armis_inte_armis_op_property_upload','properties'],
      ['x_fmcna_armis_inte_armis_op_application_upload','applications'],
      ['x_fmcna_armis_inte_armis_op_key_attribute','key attributes'],
      ['x_fmcna_armis_inte_armis_op_arp_table','arp entries']]

    for(var i=0;i&lt;tables_to_clear.length;i++)
    {
      var table_name = tables_to_clear[i][0]
      var table_display = tables_to_clear[i][1]
      var clear = new GlideRecord(table_name)
      clear.addQuery('status','COMPLETE') 
      clear.query()
      debug.push("Queried " + clear.getRowCount() + " completed " + table_display + ". " + lapReport(lap));lap=now()
      clear.deleteMultiple()
      debug.push("Cleared completed " + table_display + ". " + lapReport(lap));lap=now()
    } 

    //Get all devices that haven't been pushed

    var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
    q.addQuery('has_pushed_all_properties_to_armis',false)
    q.addNotNullQuery('linked_snow_computer')
    q.query()
    debug.push('Found ' + q.getRowCount() + ' records that need to be pushed. ' + lapReport(lap));lap=now()

    //LOOP!
    var max_seconds = parseInt(inputs.max_seconds)
    if(isNaN(max_seconds)) { max_seconds = 240 }
    var end_loop_early = false
    while(q.next() &amp;&amp; end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_seconds*1000)
    {
      var snow_id = q.linked_snow_computer
      var snow_device = new GlideRecord('cmdb_ci_computer')
      snow_device.addQuery('sys_id',snow_id)
      snow_device.query()
      if(!snow_device.next()) {
        debug.push("Bad record--computer does not exist. Removing link. " + lapReport(lap));lap=now()
        q.setValue('novel_link_attempted',false)
        q.setValue('linked_snow_computer',null)
        q.update()
        continue
      }

      devices_count++
      debug.push("Processing Armis device " + q.name + " (" + q.sys_id + "), linked to SNOW device " + snow_device.name + " " + lapReport(lap));lap=now()

      //Push ARP and key attributes
      queueInitialARPandCSV(snow_device,execution_id)
      debug.push("-Queued ARP and CSV " + lapReport(lap));lap=now()

      //Push properties
      var local_property_count = 0
      for(var i=0;i&lt;property_dictionary.length;i++)
      {
        var field_name = property_dictionary[i][0]
        var field_name_display_value = property_dictionary[i][1]

        //Does this actually have a value?
        if(snow_device.getValue(field_name) != null)
        {
          var field_value = snow_device.getDisplayValue(field_name)

          //If we have an non-empty value, queue the property!
          if(field_value != '')
          {
            if(local_property_count == 0) { debug.push("--(PROP) " + field_name_display_value + ": " + field_value + " "  + lapReport(lap));lap=now() }
            total_properties++
            local_property_count++
            queueProperty({armis_id: q.armis_device_id, execution_id: execution_id, name: field_name_display_value, value: field_value})
          }
        }
      }
      if(local_property_count &gt; 1) { debug.push("--(queued " + (local_property_count-1) + " more properties.) " + lapReport(lap));lap=now() }

      //Push applications
      //First, get all software installs that are associated with our SNOW computer
      var s = new GlideRecord('cmdb_software_instance')
      s.addQuery('installed_on',snow_device.sys_id)
      s.query()
      
      debug.push("-SOFTWARE: Found " + s.getRowCount() + " installs. " + lapReport(lap));lap=now()
      var local_application_count = 0
      while(s.next())
      {
        var software = s.software
        if (software != null)
        {
          total_applications++
          if(local_application_count == 0) { debug.push("--(APP) " + ('' + software.name) + " (" + ('' + software.version) + ") " + lapReport(lap));lap=now() }
          local_application_count++
          queueApplication({execution_id: execution_id, armis_id: q.armis_device_id, name: '' + software.name, version: '' + software.version})
        }
      }
      if(local_application_count &gt; 1) { debug.push("--(queued " + (local_application_count-1) + " more applications.) "  + lapReport(lap));lap=now() }
      
      //And finally, mark this as complete.
      q.setValue('has_pushed_all_properties_to_armis',true)
      q.update()
      debug.push("-Marked complete, moving to next. "  + lapReport(lap));lap=now()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }
  
  var report = error_message + devices_count + '/' + q.getRowCount() + ' devices checked, ' + total_properties + ' properties and ' + total_applications + ' applications queued for upload.'
  var time_diff = now() - start_time
  debug = debug.join('\n')
  outputs.debug = debug
  if(q.getRowCount() &gt; 0) { writeToActionLog({id: execution_id, action_type: 'MAIN_QueueAllDevicePropertiesEtc', total_time: time_diff, api_time: 0, heavy_processing_time: time_diff, report: report, debug_string: debug}) }
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>dd8d41921b5a90104ca7edf9bc4bcb10</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>d58d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=dd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>918d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_seconds</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_id>c4b4e15e1bda90104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_dd8d41921b5a90104ca7edf9bc4bcb10</table>
        <value>{{action.max_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>558d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=dd8d41921b5a90104ca7edf9bc4bcb10^sys_idNOT IN00b4e15e1bda90104ca7edf9bc4bcbb3"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">dd8d41921b5a90104ca7edf9bc4bcb10</model>
        <model_id>dd8d41921b5a90104ca7edf9bc4bcb10</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_dd8d41921b5a90104ca7edf9bc4bcb10</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>00b4e15e1bda90104ca7edf9bc4bcbb3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=dd8d41921b5a90104ca7edf9bc4bcb10^sys_idNOT INccb4e15e1bda90104ca7edf9bc4bcbb9"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=4dafb26d-66df-4723-9954-aad8f6c57655</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">dd8d41921b5a90104ca7edf9bc4bcb10</model>
        <model_id>dd8d41921b5a90104ca7edf9bc4bcb10</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_dd8d41921b5a90104ca7edf9bc4bcb10</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ccb4e15e1bda90104ca7edf9bc4bcbb9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=958d41921b5a90104ca7edf9bc4bcb0f^sys_idNOT INffa4e15e1bda90104ca7edf9bc4bcb8f"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=1df5be3d-9fc2-43a3-8246-2150e28c9b63</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_seconds</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="MAIN_QueueAllDevicePropertiesEtc (v2.1)">958d41921b5a90104ca7edf9bc4bcb0f</model>
        <model_id>958d41921b5a90104ca7edf9bc4bcb0f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_958d41921b5a90104ca7edf9bc4bcb0f</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:06</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ffa4e15e1bda90104ca7edf9bc4bcb8f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:06</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_step_instance action="delete_multiple" query="action=958d41921b5a90104ca7edf9bc4bcb0f^sys_idNOT INdd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="MAIN_QueueAllDevicePropertiesEtc (v2.1)">958d41921b5a90104ca7edf9bc4bcb0f</action>
        <cid>7fbff9ef-a229-40fe-9adc-c00495a0f3e9</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>dd8d41921b5a90104ca7edf9bc4bcb10</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:09:47</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=dd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>dd8d41921b5a90104ca7edf9bc4bcb10</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>998d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:09:47</sys_updated_on>
        <value>/*

This script iterates through all devices that have a link and haven't pushed all properties up to Armis yet, and pushes those properties up to Armis.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}

//'TABLES AND REST' FUNCTION LIBRARY v0.12 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",(""+e.payload).substring(0,1999)],["response_code",e.response_code],["response_body",(""+e.response_body).substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["property_name",e.name]],t.update_pairs=[["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.unique_pairs=[["armis_mac",e.mac],["attribute",e.attribute]],t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.armis_id],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.unique_pairs=[["armis_device_id",e.armis_id],["application_name",e.name]],t.update_pairs=[["execution_id",e.execution_id],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function executeStandardREST(e){try{var t=new GlideDateTime,i=new sn_ws.RESTMessageV2("Armis API",e.endpoint);i.setRequestHeader("Authorization",getCurrentToken()),i.setRequestHeader("accept","application/json"),i.setRequestHeader("content-type","application/json"),null==e.query_params&amp;&amp;(e.query_params=[]);for(var a=0;a&lt;e.query_params.length;a++)i.setQueryParameter(e.query_params[a][0],e.query_params[a][1]);i.setRequestBody(e.payload);var r,n=now(),u={};return 1==e.async?r=i.executeAsync():(r=i.execute(),u.response_code=r.getStatusCode(),u.response_body=r.getBody()),u.api_time=now()-n,writeToAPILog({id:e.id,endpoint:e.endpoint,payload:e.payload,response_code:u.response_code,response_body:u.response_body,start_time:t,time_delta_ms:u.api_time}),u}catch(e){return(u={response_code:"xx"}).response_body="Failed to build query. "+e,u.api_time=0,u}}function queueAttachmentREST(e){var t=new GlideRecord("sys_attachment"),i=(new GlideSysAttachment).write(t,e.id+".csv","text/plain",e.payload),a=new GlideRecord("x_fmcna_armis_inte_armis_attachment_upload");a.initialize(),a.attachment=i,a.execution_id=e.id,a.status="PENDING",a.type=e.type,a.content=e.payload,a.insert()}function queueInitialARPandCSV(e,t){var i=e.mac_address,a=e.ip_address;isValidMACAddress(i)&amp;&amp;isValidIPAddress(a)&amp;&amp;(queueARP({execution_id:t,mac:i,ip:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"NAME",value:""+e.name}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"IP",value:a}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"TAG",value:getConfigValue("armis_import_universal_tag")}),queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"LAST_SEEN",value:(new GlideDateTime).getDisplayValue().replace(" ","T")}),null!=e.model_id&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"MODEL",value:e.model_id.getDisplayValue()}),null!=e.os&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS",value:e.os.getDisplayValue()}),null!=e.os_version&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"OS_VERSION",value:e.os_version}),null!=e.users&amp;&amp;queueKeyAttribute({execution_id:t,armis_id:"",mac:i,attribute:"USER",value:e.users}))}function getPendingRecordsEndSysID(e,t,i){null==i&amp;&amp;(i={}),null==i.force_field&amp;&amp;(i.force_field="status"),null==i.force_pending&amp;&amp;(i.force_pending="PENDING");var a=new GlideRecord(t);for(a.addQuery(i.force_field,i.force_pending),a.setLimit(e),a.orderBy("sys_id"),a.query();a.next();)if(0==a.hasNext())return a.getValue("sys_id");return null}function getNumPendingRecords(e,t,i,a){null==a&amp;&amp;(a={}),null==a.force_field&amp;&amp;(a.force_field="status"),null==a.force_pending&amp;&amp;(a.force_pending="PENDING");var r=new GlideRecord(t);return r.addQuery(a.force_field,a.force_pending),r.setLimit(e),r.orderBy("sys_id"),r.addQuery("sys_id","&lt;=",i),r.query(),r}





(function execute(inputs, outputs) {

  var debug = ['BEGIN QueueDevicesThatneedUploads']
  var start_time = now()
  var lap = now()
  var api_total = 0
  var heavy_total = 0
  var execution_id = generateID()
  var total_properties = 0
  var total_applications = 0
  var devices_count = 0
  var error_message = ''
  var this_now = now()
  
  
  try
  {
    
    //Combine property references (did multiple config fields for extensibility)
    var property_reference = getConfigValue('snow_property_reference_1') + getConfigValue('snow_property_reference_2') + getConfigValue('snow_property_reference_3')
    property_reference = property_reference.split(',')

    //Split propertes. We will end up with a dictionary of the form { field_name: 'display value'} that we will use to govern what gets sent to Armis.
    var property_dictionary = []
    for(var i=0;i&lt;property_reference.length;i++) { var p = property_reference[i].split(':'); property_dictionary.push([p[0],p[1]]) }

    //Clear the COMPLETE entries off the Properties and Applications tables. (This is truly necessary, these tables get HUGE very quickly.)
    var tables_to_clear = [
      ['x_fmcna_armis_inte_armis_op_property_upload','properties'],
      ['x_fmcna_armis_inte_armis_op_application_upload','applications'],
      ['x_fmcna_armis_inte_armis_op_key_attribute','key attributes'],
      ['x_fmcna_armis_inte_armis_op_arp_table','arp entries']]

    for(var i=0;i&lt;tables_to_clear.length;i++)
    {
      var table_name = tables_to_clear[i][0]
      var table_display = tables_to_clear[i][1]
      var clear = new GlideRecord(table_name)
      clear.addQuery('status','COMPLETE') 
      clear.query()
      debug.push("Queried " + clear.getRowCount() + " completed " + table_display + ". " + lapReport(lap));lap=now()
      clear.deleteMultiple()
      debug.push("Cleared completed " + table_display + ". " + lapReport(lap));lap=now()
    } 

    //Get all devices that haven't been pushed

    var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
    q.addQuery('has_pushed_all_properties_to_armis',false)
    q.addNotNullQuery('linked_snow_computer')
    q.query()
    debug.push('Found ' + q.getRowCount() + ' records that need to be pushed. ' + lapReport(lap));lap=now()

    //LOOP!
    var max_seconds = parseInt(inputs.max_seconds)
    if(isNaN(max_seconds)) { max_seconds = 240 }
    var end_loop_early = false
    while(q.next() &amp;&amp; end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_seconds*1000)
    {
      var snow_id = q.linked_snow_computer
      var snow_device = new GlideRecord('cmdb_ci_computer')
      snow_device.addQuery('sys_id',snow_id)
      snow_device.query()
      if(!snow_device.next()) {
        debug.push("Bad record--computer does not exist. Removing link. " + lapReport(lap));lap=now()
        q.setValue('novel_link_attempted',false)
        q.setValue('linked_snow_computer',null)
        q.update()
        continue
      }

      devices_count++
      debug.push("Processing Armis device " + q.name + " (" + q.sys_id + "), linked to SNOW device " + snow_device.name + " " + lapReport(lap));lap=now()

      //Push ARP and key attributes
      queueInitialARPandCSV(snow_device,execution_id)
      debug.push("-Queued ARP and CSV " + lapReport(lap));lap=now()

      //Push properties
      var local_property_count = 0
      for(var i=0;i&lt;property_dictionary.length;i++)
      {
        var field_name = property_dictionary[i][0]
        var field_name_display_value = property_dictionary[i][1]

        //Does this actually have a value?
        if(snow_device.getValue(field_name) != null)
        {
          var field_value = snow_device.getDisplayValue(field_name)

          //If we have an non-empty value, queue the property!
          if(field_value != '')
          {
            if(local_property_count == 0) { debug.push("--(PROP) " + field_name_display_value + ": " + field_value + " "  + lapReport(lap));lap=now() }
            total_properties++
            local_property_count++
            queueProperty({armis_id: q.armis_device_id, execution_id: execution_id, name: field_name_display_value, value: field_value})
          }
        }
      }
      if(local_property_count &gt; 1) { debug.push("--(queued " + (local_property_count-1) + " more properties.) " + lapReport(lap));lap=now() }

      //Push applications
      //First, get all software installs that are associated with our SNOW computer
      var s = new GlideRecord('cmdb_software_instance')
      s.addQuery('installed_on',snow_device.sys_id)
      s.query()
      
      debug.push("-SOFTWARE: Found " + s.getRowCount() + " installs. " + lapReport(lap));lap=now()
      var local_application_count = 0
      while(s.next())
      {
        var software = s.software
        if (software != null)
        {
          total_applications++
          if(local_application_count == 0) { debug.push("--(APP) " + ('' + software.name) + " (" + ('' + software.version) + ") " + lapReport(lap));lap=now() }
          local_application_count++
          queueApplication({execution_id: execution_id, armis_id: q.armis_device_id, name: '' + software.name, version: '' + software.version})
        }
      }
      if(local_application_count &gt; 1) { debug.push("--(queued " + (local_application_count-1) + " more applications.) "  + lapReport(lap));lap=now() }
      
      //And finally, mark this as complete.
      q.setValue('has_pushed_all_properties_to_armis',true)
      q.update()
      debug.push("-Marked complete, moving to next. "  + lapReport(lap));lap=now()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }
  
  var report = error_message + devices_count + '/' + q.getRowCount() + ' devices checked, ' + total_properties + ' properties and ' + total_applications + ' applications queued for upload.'
  var time_diff = now() - start_time
  debug = debug.join('\n')
  outputs.debug = debug
  if(q.getRowCount() &gt; 0) { writeToActionLog({id: execution_id, action_type: 'MAIN_QueueAllDevicePropertiesEtc', total_time: time_diff, api_time: 0, heavy_processing_time: time_diff, report: report, debug_string: debug}) }
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>dd8d41921b5a90104ca7edf9bc4bcb10</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>d58d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=dd8d41921b5a90104ca7edf9bc4bcb10"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>918d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_seconds</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_id>c4b4e15e1bda90104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_dd8d41921b5a90104ca7edf9bc4bcb10</table>
        <value>{{action.max_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>dd8d41921b5a90104ca7edf9bc4bcb10</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 08:55:54</sys_created_on>
        <sys_id>558d41921b5a90104ca7edf9bc4bcb16</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 08:55:54</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=dd8d41921b5a90104ca7edf9bc4bcb10^sys_idNOT IN00b4e15e1bda90104ca7edf9bc4bcbb3"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">dd8d41921b5a90104ca7edf9bc4bcb10</model>
        <model_id>dd8d41921b5a90104ca7edf9bc4bcb10</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_dd8d41921b5a90104ca7edf9bc4bcb10</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>00b4e15e1bda90104ca7edf9bc4bcbb3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=dd8d41921b5a90104ca7edf9bc4bcb10^sys_idNOT INccb4e15e1bda90104ca7edf9bc4bcbb9"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=4dafb26d-66df-4723-9954-aad8f6c57655</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">dd8d41921b5a90104ca7edf9bc4bcb10</model>
        <model_id>dd8d41921b5a90104ca7edf9bc4bcb10</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_dd8d41921b5a90104ca7edf9bc4bcb10</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ccb4e15e1bda90104ca7edf9bc4bcbb9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_958d41921b5a90104ca7edf9bc4bcb0f^sys_idNOT IN80b4e15e1bda90104ca7edf9bc4bcb95"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_seconds</element>
        <help/>
        <hint/>
        <label>max_seconds</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_958d41921b5a90104ca7edf9bc4bcb0f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-31 10:37:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>80b4e15e1bda90104ca7edf9bc4bcb95</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 10:37:07</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
</record_update>
