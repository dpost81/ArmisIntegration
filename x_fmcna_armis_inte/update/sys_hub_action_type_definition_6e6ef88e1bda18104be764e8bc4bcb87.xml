<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>link_armistosnowlink</internal_name>
        <label_cache>[{"name":"{{action.max_processing_seconds}}","label":"action➛max_processing_seconds","type":"action","ref":""},{"name":"{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <latest_snapshot>1c966e7bdb0350107c88804305961984</latest_snapshot>
        <master_snapshot>2035bac21b1a58104be764e8bc4bcb09</master_snapshot>
        <name>LINK_AttemptAllArmisLinks (v2.1)</name>
        <natlang/>
        <outputs/>
        <outputs/>
        <state>published</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 13:11:25</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>6e6ef88e1bda18104be764e8bc4bcb87</sys_id>
        <sys_mod_count>102</sys_mod_count>
        <sys_name>LINK_AttemptAllArmisLinks (v2.1)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_6e6ef88e1bda18104be764e8bc4bcb87</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:09</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="delete_multiple" query="document_key=6e6ef88e1bda18104be764e8bc4bcb87"/>
    <sys_element_mapping action="delete_multiple" query="id=6e6ef88e1bda18104be764e8bc4bcb87"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>debug</field>
        <id>6e6ef88e1bda18104be764e8bc4bcb87</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>8dd91d0e1b9e18104be764e8bc4bcb7b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_hub_action_output_6e6ef88e1bda18104be764e8bc4bcb87</table>
        <value>{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].debug}}</value>
    </sys_element_mapping>
    <sys_hub_step_instance action="delete_multiple" query="action=6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT INf8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</action>
        <cid>6d4610d2-7aa0-423e-b15e-9c339aa0dd4c</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f8d91d0e1b9e18104be764e8bc4bcb59</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:06</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=f8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f8d91d0e1b9e18104be764e8bc4bcb59</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>05d91d0e1b9e18104be764e8bc4bcb6f</sys_id>
        <sys_mod_count>42</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:06</sys_updated_on>
        <value>/* This script attempts to link:

1. Any Armis Device Table devices that have not yet attempted to link to a SNOW device
2. Populate the "Armis Link Reference" table with any SNOW computers that are not already on it.
3. Use this table to attempt a link on SNOW devices that have not yet attempted to link to an Armis device.

Once an Armis device attempts to link, the column "Novel Link Attempted" will be set to true. Once a SNOW computer attempts to link, it gets tagged with "Attempted Armis Link"

*/


//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


//From the TABLE function library

function getPendingRecordsEndSysID(n,table,other_params)
{
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  while(q.next()) { if(q.hasNext() == false) { return q.getValue('sys_id') } } 
  return null
}

function getNumPendingRecords(n,table,end_sys_id,other_params)
{  
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}


// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//Gets all the MACs associated with a given SNOW computer. (The MAC field itself + all MACs on network adapters associated with the computer.)
function getMACs(snow_computer_query)
{
  var macs = []
  
  var smac = snow_computer_query.mac_address
  if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
  if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }
  
  var na = new GlideRecord('cmdb_ci_network_adapter')
  na.addQuery('cmdb_ci',snow_computer_query.sys_id)
  na.query()
  
  while(na.next()) {
    var smac = na.mac_address
    if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
    if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }  
  }
  
  return macs
}

//A golden match is one where a SNOW device is found that fits the following conditions:
// 1. Name matches
// 2. Model matches
// 3. At least one MAC associated with the SNOW computer is the Armis device's MAC.
function attemptGoldenMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  //If the name is '', we can't golden match.
  if(armis_computer_query.name == '') { ret.debug = "Name is empty, unable to attempt golden match.";return ret }
  var debug = []
  debug.push("Attempting golden link for link Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  
  //Model is tricky, so need to sanitize
  var armis_model = ''
  if( armis_computer_query.model != 'Unknown') { armis_model = armis_computer_query.model }
  
  //Golden match: Check for exact matches on the name and model.
  var snow_device = new GlideRecord('cmdb_ci_computer')
  snow_device.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
  snow_device.addQuery('name','=',armis_computer_query.name)
  snow_device.query()
  debug.push("--Matches found for name only: " + snow_device.getRowCount() + " "  +lapReport(lap));lap=now()
  
  while(snow_device.next())
  {
    debug.push("--Evaluating SNOW device: " + snow_device.name)
    var snow_model = ''
    if( snow_device.model_id != null ) { if( snow_device.model_id.name != null) { snow_model = snow_device.model_id.name } }
    
    //Golden match condition: model matches
    debug.push("--Comparing models: '" + snow_model + "' == '" + armis_model + "' " +lapReport(lap));lap=now()
    if(snow_model == armis_model)
    {
      //Golden match condition: at least one MAC matches.
      var macs = getMACs(snow_device)
      debug.push("--Evaluating MACs vs Armis MAC " + ('' + armis_computer_query.mac_address).toUpperCase() + " : [" + macs + "] " +lapReport(lap));lap=now()
      if(includes(macs,('' + armis_computer_query.mac_address).toUpperCase()))
      {
        debug.push("--Golden match found. " +lapReport(lap));lap=now()
        ret.matched_device_sys_id = '' + snow_device.sys_id
        ret.match = true
        break
      }
      else { debug.push("--Failed to find MAC in array. "  +lapReport(lap));lap=now() }
    }
    else { debug.push("--Failed model match. " +lapReport(lap));lap=now() }
  }
  
  ret.debug = debug.join('\n')
  return ret
}

//A MAC match occurs when:
// 1. The Armis device's MAC is not disqualified due to being a virtual MAC (it does not appear more than X times in the CMDB)
// 2. The Armis device's MAC appears on at least one computer as an associated MAC
//The match is whichever computer where the MAC appears most frequently.
function attemptMACMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  var debug = []
  debug.push("Attempting MAC link for Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  var vmac_threshold = parseInt(getConfigValue('vmac_threshold'))
  debug.push("--VMAC Threshold: " + vmac_threshold + " "  +lapReport(lap));lap=now()
  
  //Count number of time MAC occurs.
  var tables = ['cmdb_ci_network_adapter','cmdb_ci_computer']
  var mac_count = 0
  for (var j=0;j&lt;tables.length;j++)
  {
    var q = new GlideAggregate(tables[j])
    q.addAggregate('COUNT')
    q.addQuery('mac_address','=',('' + armis_computer_query.mac_address).toUpperCase())
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    if(q.next()) { mac_count += parseInt(q.getAggregate('COUNT')) }
  }
  debug.push("--Occurrences of MAC '" + armis_computer_query.mac_address + "': " + mac_count+ " "  +lapReport(lap));lap=now()
  
  //Only continue if we are under the vmac threshold.
  if (mac_count &lt; vmac_threshold)
  {
    //Start counting the computers by occurrence of the MAC.
    var counts = {}
    var debug_lookup = {}
    var top_count = 0
    var top_sys_id = ''
    var q = new GlideRecord('cmdb_ci_computer')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(counts[q.sys_id] == null) { counts[q.sys_id] = 0; debug_lookup[q.sys_id] = q.name }
      counts[q.sys_id]++
      if (counts[q.sys_id] &gt; top_count) { top_count = counts[q.sys_id]; top_sys_id = q.sys_id }
    }
    
    //Count network adapters by occurrence of the MAC.
    q = new GlideRecord('cmdb_ci_network_adapter')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(q.cmdb_ci == null) { continue } //If for some reason there's no attached CI, skip this entry.
      if(counts[q.cmdb_ci.sys_id] == null) { counts[q.cmdb_ci.sys_id] = 0; debug_lookup[q.cmdb_ci.sys_id] = q.cmdb_ci.name }
      counts[q.cmdb_ci.sys_id]++
      if (counts[q.cmdb_ci.sys_id] &gt; top_count) { top_count = counts[q.cmdb_ci.sys_id]; top_sys_id = q.cmdb_ci.sys_id }
    }
    debug.push("--Counts: " + JSON.stringify(counts) + " "  +lapReport(lap));lap=now()
    debug.push("--Top count: " + top_sys_id + " (" + debug_lookup[top_sys_id] + ")")
    
    if (top_sys_id != '')
    {
      debug.push("--MAC Match found.")
      ret.match = true
      ret.matched_device_sys_id = '' + top_sys_id
    }
  }
  
  ret.debug = debug.join("\n")
  return ret
}

// **********************
// *** IMPLEMENTATION ***
// **********************

(function execute(inputs, outputs) {

  
  var start_time = now()
  var report_string = ''
  var api_total = 0
  var heavy_total = 0
  var debug = ['BEGIN LINK_AttemptAllArmisLinks']
  var error_message = ''
  var lap = now()
  var execution_id = generateID()
  
  var armis_attempts_count = 0
  var armis_successes_count = 0
  
  //Loop until out of records or out of time.
  var end_loop_early = false
  var loop_counter = 0
  var max_processing_seconds = parseInt(inputs.max_processing_seconds)
  if(isNaN(max_processing_seconds)) { max_processing_seconds = 240 }
  
  try {

    while(end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_processing_seconds*1000)
    {
      loop_counter++
      debug.push("LOOP " + loop_counter + " "  +lapReport(lap));lap=now()
      //Pull 100 records.
      var n = 100
      var table = 'x_fmcna_armis_inte_armis_device_table'
      var other_params = {force_field: 'novel_link_attempted',force_pending: false}

      //See documentation for how this works.
      var end_sys_id = getPendingRecordsEndSysID(n,table,other_params)
      debug.push("End sys_id (for record pull): " + end_sys_id + " "  +lapReport(lap));lap=now()
      if (end_sys_id == null)
      {
        //No more records, this process is done.
        debug.push("No records remaining to attempt match. Ending routine. " +lapReport(lap));lap=now()
        break
      }

      var rec1 = getNumPendingRecords(n,table,end_sys_id,other_params)
      var rec2 = getNumPendingRecords(n,table,end_sys_id,other_params)

      while(rec1.next())
      {

        armis_attempts_count++
        var result = attemptGoldenMatch(rec1)
        var link_strength = 'GOLDEN'
        lap=now()
        debug.push(result.debug)

        if (result.match == false)
        {
          result = attemptMACMatch(rec1)
          link_strength = 'MAC ONLY'
          lap=now()
          debug.push(result.debug)
        }

        //By now we have exhausted all opportunities for matching.
        //If we have a match, store it, otherwise we're done.
        if(result.match == true)
        {
          armis_successes_count++
          rec1.setValue('linked_snow_computer',result.matched_device_sys_id)
          rec1.setValue('link_strength',link_strength)
          if (rec1.linked_snow_computer != result.matched_device_sys_id) { rec1.has_pushed_all_properties_to_armis = false }
          rec1.update()
          debug.push("Assigned matching SNOW computer.  "+lapReport(lap) + "\n");lap=now()
        }
        else { debug.push("No match found. "  +lapReport(lap)+"\n");lap=now() }
      }

      //All updates have been completed, set attempted flags.
      rec2.setValue('novel_link_attempted',true)
      rec2.updateMultiple()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }    
  
  outputs.debug = debug.join('\n')
  var report_string = error_message + "Attempted " + armis_attempts_count + " armis-to-snow links, " + armis_successes_count + " successful."
  if(armis_attempts_count &gt; 0) { writeToActionLog({id: execution_id, action_type: 'LINK_AttemptAllArmisLinks', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: report_string, debug_string: outputs.debug}) }
  
  outputs.debug = debug.join('\n')
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f8d91d0e1b9e18104be764e8bc4bcb59</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>41d91d0e1b9e18104be764e8bc4bcb6f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=f8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>0dd91d0e1b9e18104be764e8bc4bcb6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_processing_seconds</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 19:33:33</sys_created_on>
        <sys_id>cce51e421b5658104be764e8bc4bcbf3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 19:33:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>parameter</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>81d91d0e1b9e18104be764e8bc4bcb70</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>cdd91d0e1b9e18104be764e8bc4bcb6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=f8d91d0e1b9e18104be764e8bc4bcb59^sys_idNOT INbbd51e421b5658104be764e8bc4bcbdb"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f8d91d0e1b9e18104be764e8bc4bcb59</model>
        <model_id>f8d91d0e1b9e18104be764e8bc4bcb59</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 19:33:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>bbd51e421b5658104be764e8bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 19:33:32</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=f8d91d0e1b9e18104be764e8bc4bcb59^sys_idNOT IN49d91d0e1b9e18104be764e8bc4bcb64"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=91766569-3b03-4ab7-8f9a-eea8717b5dfa</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f8d91d0e1b9e18104be764e8bc4bcb59</model>
        <model_id>f8d91d0e1b9e18104be764e8bc4bcb59</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_f8d91d0e1b9e18104be764e8bc4bcb59</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>49d91d0e1b9e18104be764e8bc4bcb64</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT IN30d999ca1b9e18104be764e8bc4bcbc7"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=e0d81bd2-e4cc-4a80-b7d0-1c6ec44284f1</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>10</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_processing_seconds</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</model>
        <model_id>6e6ef88e1bda18104be764e8bc4bcb87</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_6e6ef88e1bda18104be764e8bc4bcb87</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>30d999ca1b9e18104be764e8bc4bcbc7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 19:33:32</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_output action="delete_multiple" query="model=6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT IN4dd91d0e1b9e18104be764e8bc4bcb72"/>
    <sys_hub_action_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,pwd2droppable=true,uiType=string,uiTypeLabel=String,uiUniqueId=d52aeed6-1b50-46a1-ba1f-85305015187a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_prototype/>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_link/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>false</mandatory>
        <max_length>8000</max_length>
        <model display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</model>
        <model_id>6e6ef88e1bda18104be764e8bc4bcb87</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_output_6e6ef88e1bda18104be764e8bc4bcb87</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>4dd91d0e1b9e18104be764e8bc4bcb72</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_output>
    <sys_hub_step_instance action="delete_multiple" query="action=6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT INf8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</action>
        <cid>6d4610d2-7aa0-423e-b15e-9c339aa0dd4c</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f8d91d0e1b9e18104be764e8bc4bcb59</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:06</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=f8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f8d91d0e1b9e18104be764e8bc4bcb59</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>05d91d0e1b9e18104be764e8bc4bcb6f</sys_id>
        <sys_mod_count>42</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:06</sys_updated_on>
        <value>/* This script attempts to link:

1. Any Armis Device Table devices that have not yet attempted to link to a SNOW device
2. Populate the "Armis Link Reference" table with any SNOW computers that are not already on it.
3. Use this table to attempt a link on SNOW devices that have not yet attempted to link to an Armis device.

Once an Armis device attempts to link, the column "Novel Link Attempted" will be set to true. Once a SNOW computer attempts to link, it gets tagged with "Attempted Armis Link"

*/


//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


//From the TABLE function library

function getPendingRecordsEndSysID(n,table,other_params)
{
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  while(q.next()) { if(q.hasNext() == false) { return q.getValue('sys_id') } } 
  return null
}

function getNumPendingRecords(n,table,end_sys_id,other_params)
{  
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}


// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//Gets all the MACs associated with a given SNOW computer. (The MAC field itself + all MACs on network adapters associated with the computer.)
function getMACs(snow_computer_query)
{
  var macs = []
  
  var smac = snow_computer_query.mac_address
  if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
  if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }
  
  var na = new GlideRecord('cmdb_ci_network_adapter')
  na.addQuery('cmdb_ci',snow_computer_query.sys_id)
  na.query()
  
  while(na.next()) {
    var smac = na.mac_address
    if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
    if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }  
  }
  
  return macs
}

//A golden match is one where a SNOW device is found that fits the following conditions:
// 1. Name matches
// 2. Model matches
// 3. At least one MAC associated with the SNOW computer is the Armis device's MAC.
function attemptGoldenMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  //If the name is '', we can't golden match.
  if(armis_computer_query.name == '') { ret.debug = "Name is empty, unable to attempt golden match.";return ret }
  var debug = []
  debug.push("Attempting golden link for link Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  
  //Model is tricky, so need to sanitize
  var armis_model = ''
  if( armis_computer_query.model != 'Unknown') { armis_model = armis_computer_query.model }
  
  //Golden match: Check for exact matches on the name and model.
  var snow_device = new GlideRecord('cmdb_ci_computer')
  snow_device.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
  snow_device.addQuery('name','=',armis_computer_query.name)
  snow_device.query()
  debug.push("--Matches found for name only: " + snow_device.getRowCount() + " "  +lapReport(lap));lap=now()
  
  while(snow_device.next())
  {
    debug.push("--Evaluating SNOW device: " + snow_device.name)
    var snow_model = ''
    if( snow_device.model_id != null ) { if( snow_device.model_id.name != null) { snow_model = snow_device.model_id.name } }
    
    //Golden match condition: model matches
    debug.push("--Comparing models: '" + snow_model + "' == '" + armis_model + "' " +lapReport(lap));lap=now()
    if(snow_model == armis_model)
    {
      //Golden match condition: at least one MAC matches.
      var macs = getMACs(snow_device)
      debug.push("--Evaluating MACs vs Armis MAC " + ('' + armis_computer_query.mac_address).toUpperCase() + " : [" + macs + "] " +lapReport(lap));lap=now()
      if(includes(macs,('' + armis_computer_query.mac_address).toUpperCase()))
      {
        debug.push("--Golden match found. " +lapReport(lap));lap=now()
        ret.matched_device_sys_id = '' + snow_device.sys_id
        ret.match = true
        break
      }
      else { debug.push("--Failed to find MAC in array. "  +lapReport(lap));lap=now() }
    }
    else { debug.push("--Failed model match. " +lapReport(lap));lap=now() }
  }
  
  ret.debug = debug.join('\n')
  return ret
}

//A MAC match occurs when:
// 1. The Armis device's MAC is not disqualified due to being a virtual MAC (it does not appear more than X times in the CMDB)
// 2. The Armis device's MAC appears on at least one computer as an associated MAC
//The match is whichever computer where the MAC appears most frequently.
function attemptMACMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  var debug = []
  debug.push("Attempting MAC link for Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  var vmac_threshold = parseInt(getConfigValue('vmac_threshold'))
  debug.push("--VMAC Threshold: " + vmac_threshold + " "  +lapReport(lap));lap=now()
  
  //Count number of time MAC occurs.
  var tables = ['cmdb_ci_network_adapter','cmdb_ci_computer']
  var mac_count = 0
  for (var j=0;j&lt;tables.length;j++)
  {
    var q = new GlideAggregate(tables[j])
    q.addAggregate('COUNT')
    q.addQuery('mac_address','=',('' + armis_computer_query.mac_address).toUpperCase())
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    if(q.next()) { mac_count += parseInt(q.getAggregate('COUNT')) }
  }
  debug.push("--Occurrences of MAC '" + armis_computer_query.mac_address + "': " + mac_count+ " "  +lapReport(lap));lap=now()
  
  //Only continue if we are under the vmac threshold.
  if (mac_count &lt; vmac_threshold)
  {
    //Start counting the computers by occurrence of the MAC.
    var counts = {}
    var debug_lookup = {}
    var top_count = 0
    var top_sys_id = ''
    var q = new GlideRecord('cmdb_ci_computer')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(counts[q.sys_id] == null) { counts[q.sys_id] = 0; debug_lookup[q.sys_id] = q.name }
      counts[q.sys_id]++
      if (counts[q.sys_id] &gt; top_count) { top_count = counts[q.sys_id]; top_sys_id = q.sys_id }
    }
    
    //Count network adapters by occurrence of the MAC.
    q = new GlideRecord('cmdb_ci_network_adapter')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(q.cmdb_ci == null) { continue } //If for some reason there's no attached CI, skip this entry.
      if(counts[q.cmdb_ci.sys_id] == null) { counts[q.cmdb_ci.sys_id] = 0; debug_lookup[q.cmdb_ci.sys_id] = q.cmdb_ci.name }
      counts[q.cmdb_ci.sys_id]++
      if (counts[q.cmdb_ci.sys_id] &gt; top_count) { top_count = counts[q.cmdb_ci.sys_id]; top_sys_id = q.cmdb_ci.sys_id }
    }
    debug.push("--Counts: " + JSON.stringify(counts) + " "  +lapReport(lap));lap=now()
    debug.push("--Top count: " + top_sys_id + " (" + debug_lookup[top_sys_id] + ")")
    
    if (top_sys_id != '')
    {
      debug.push("--MAC Match found.")
      ret.match = true
      ret.matched_device_sys_id = '' + top_sys_id
    }
  }
  
  ret.debug = debug.join("\n")
  return ret
}

// **********************
// *** IMPLEMENTATION ***
// **********************

(function execute(inputs, outputs) {

  
  var start_time = now()
  var report_string = ''
  var api_total = 0
  var heavy_total = 0
  var debug = ['BEGIN LINK_AttemptAllArmisLinks']
  var error_message = ''
  var lap = now()
  var execution_id = generateID()
  
  var armis_attempts_count = 0
  var armis_successes_count = 0
  
  //Loop until out of records or out of time.
  var end_loop_early = false
  var loop_counter = 0
  var max_processing_seconds = parseInt(inputs.max_processing_seconds)
  if(isNaN(max_processing_seconds)) { max_processing_seconds = 240 }
  
  try {

    while(end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_processing_seconds*1000)
    {
      loop_counter++
      debug.push("LOOP " + loop_counter + " "  +lapReport(lap));lap=now()
      //Pull 100 records.
      var n = 100
      var table = 'x_fmcna_armis_inte_armis_device_table'
      var other_params = {force_field: 'novel_link_attempted',force_pending: false}

      //See documentation for how this works.
      var end_sys_id = getPendingRecordsEndSysID(n,table,other_params)
      debug.push("End sys_id (for record pull): " + end_sys_id + " "  +lapReport(lap));lap=now()
      if (end_sys_id == null)
      {
        //No more records, this process is done.
        debug.push("No records remaining to attempt match. Ending routine. " +lapReport(lap));lap=now()
        break
      }

      var rec1 = getNumPendingRecords(n,table,end_sys_id,other_params)
      var rec2 = getNumPendingRecords(n,table,end_sys_id,other_params)

      while(rec1.next())
      {

        armis_attempts_count++
        var result = attemptGoldenMatch(rec1)
        var link_strength = 'GOLDEN'
        lap=now()
        debug.push(result.debug)

        if (result.match == false)
        {
          result = attemptMACMatch(rec1)
          link_strength = 'MAC ONLY'
          lap=now()
          debug.push(result.debug)
        }

        //By now we have exhausted all opportunities for matching.
        //If we have a match, store it, otherwise we're done.
        if(result.match == true)
        {
          armis_successes_count++
          rec1.setValue('linked_snow_computer',result.matched_device_sys_id)
          rec1.setValue('link_strength',link_strength)
          if (rec1.linked_snow_computer != result.matched_device_sys_id) { rec1.has_pushed_all_properties_to_armis = false }
          rec1.update()
          debug.push("Assigned matching SNOW computer.  "+lapReport(lap) + "\n");lap=now()
        }
        else { debug.push("No match found. "  +lapReport(lap)+"\n");lap=now() }
      }

      //All updates have been completed, set attempted flags.
      rec2.setValue('novel_link_attempted',true)
      rec2.updateMultiple()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }    
  
  outputs.debug = debug.join('\n')
  var report_string = error_message + "Attempted " + armis_attempts_count + " armis-to-snow links, " + armis_successes_count + " successful."
  if(armis_attempts_count &gt; 0) { writeToActionLog({id: execution_id, action_type: 'LINK_AttemptAllArmisLinks', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: report_string, debug_string: outputs.debug}) }
  
  outputs.debug = debug.join('\n')
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f8d91d0e1b9e18104be764e8bc4bcb59</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>41d91d0e1b9e18104be764e8bc4bcb6f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=f8d91d0e1b9e18104be764e8bc4bcb59"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>0dd91d0e1b9e18104be764e8bc4bcb6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_processing_seconds</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 19:33:33</sys_created_on>
        <sys_id>cce51e421b5658104be764e8bc4bcbf3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 19:33:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>parameter</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>81d91d0e1b9e18104be764e8bc4bcb70</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>f8d91d0e1b9e18104be764e8bc4bcb59</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_id>cdd91d0e1b9e18104be764e8bc4bcb6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=f8d91d0e1b9e18104be764e8bc4bcb59^sys_idNOT INbbd51e421b5658104be764e8bc4bcbdb"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f8d91d0e1b9e18104be764e8bc4bcb59</model>
        <model_id>f8d91d0e1b9e18104be764e8bc4bcb59</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_f8d91d0e1b9e18104be764e8bc4bcb59</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 19:33:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>bbd51e421b5658104be764e8bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 19:33:32</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=f8d91d0e1b9e18104be764e8bc4bcb59^sys_idNOT IN49d91d0e1b9e18104be764e8bc4bcb64"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=91766569-3b03-4ab7-8f9a-eea8717b5dfa</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f8d91d0e1b9e18104be764e8bc4bcb59</model>
        <model_id>f8d91d0e1b9e18104be764e8bc4bcb59</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_f8d91d0e1b9e18104be764e8bc4bcb59</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>49d91d0e1b9e18104be764e8bc4bcb64</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT INb0d91d0e1b9e18104be764e8bc4bcb57"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_processing_seconds</element>
        <help/>
        <hint/>
        <label>max_processing_seconds</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_6e6ef88e1bda18104be764e8bc4bcb87</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b0d91d0e1b9e18104be764e8bc4bcb57</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>max_processing_seconds</sys_name>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_documentation_var__m_sys_hub_action_input_6e6ef88e1bda18104be764e8bc4bcb87_max_processing_seconds_en</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:11</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_output_6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT IN0dd91d0e1b9e18104be764e8bc4bcb78"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>debug</element>
        <help/>
        <hint/>
        <label>debug</label>
        <language>en</language>
        <name>var__m_sys_hub_action_output_6e6ef88e1bda18104be764e8bc4bcb87</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 15:11:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0dd91d0e1b9e18104be764e8bc4bcb78</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>debug</sys_name>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_documentation_var__m_sys_hub_action_output_6e6ef88e1bda18104be764e8bc4bcb87_debug_en</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 15:11:12</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_hub_action_plan action="delete_multiple" query="action_id=6e6ef88e1bda18104be764e8bc4bcb87^sys_idNOT IN4135bac21b1a58104be764e8bc4bcbaf"/>
    <sys_hub_action_plan action="INSERT_OR_UPDATE">
        <action_id display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</action_id>
        <plan>{"persistor":{"@class":".ChunkingPlanPersistor","table":"sys_hub_action_plan","id":"4135bac21b1a58104be764e8bc4bcbaf","name":"plan"}}</plan>
        <snapshot>4e86c00c1be210104ca7edf9bc4bcbcc</snapshot>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>4135bac21b1a58104be764e8bc4bcbaf</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_overrides/>
        <sys_scope/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:10</sys_updated_on>
    </sys_hub_action_plan>
    <sys_hub_action_type_snapshot action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <internal_name>link_attemptallarmislinks_v21</internal_name>
        <label_cache>[{"name":"{{action.max_processing_seconds}}","label":"action➛max_processing_seconds","type":"action","ref":""},{"name":"{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <master>true</master>
        <name>LINK_AttemptAllArmisLinks (v2.1)</name>
        <natlang/>
        <outputs/>
        <outputs/>
        <parent_action display_value="LINK_AttemptAllArmisLinks (v2.1)">6e6ef88e1bda18104be764e8bc4bcb87</parent_action>
        <sys_class_name>sys_hub_action_type_snapshot</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>2035bac21b1a58104be764e8bc4bcb09</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_overrides/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_snapshot>
    <sys_variable_value action="delete_multiple" query="document_key=2035bac21b1a58104be764e8bc4bcb09"/>
    <sys_element_mapping action="delete_multiple" query="id=2035bac21b1a58104be764e8bc4bcb09"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>debug</field>
        <id>2035bac21b1a58104be764e8bc4bcb09</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:25</sys_created_on>
        <sys_id>7835bac21b1a58104be764e8bc4bcb59</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:25</sys_updated_on>
        <table>var__m_sys_hub_action_output_2035bac21b1a58104be764e8bc4bcb09</table>
        <value>{{step[6d4610d2-7aa0-423e-b15e-9c339aa0dd4c].debug}}</value>
    </sys_element_mapping>
    <sys_hub_step_instance action="delete_multiple" query="action=2035bac21b1a58104be764e8bc4bcb09^sys_idNOT INf035bac21b1a58104be764e8bc4bcb15"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="LINK_AttemptAllArmisLinks (v2.1)">2035bac21b1a58104be764e8bc4bcb09</action>
        <cid>6d4610d2-7aa0-423e-b15e-9c339aa0dd4c</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f035bac21b1a58104be764e8bc4bcb15</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:08</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=f035bac21b1a58104be764e8bc4bcb15"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f035bac21b1a58104be764e8bc4bcb15</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>7835bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:08</sys_updated_on>
        <value>/* This script attempts to link:

1. Any Armis Device Table devices that have not yet attempted to link to a SNOW device
2. Populate the "Armis Link Reference" table with any SNOW computers that are not already on it.
3. Use this table to attempt a link on SNOW devices that have not yet attempted to link to an Armis device.

Once an Armis device attempts to link, the column "Novel Link Attempted" will be set to true. Once a SNOW computer attempts to link, it gets tagged with "Attempted Armis Link"

*/


//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


//From the TABLE function library

function getPendingRecordsEndSysID(n,table,other_params)
{
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  while(q.next()) { if(q.hasNext() == false) { return q.getValue('sys_id') } } 
  return null
}

function getNumPendingRecords(n,table,end_sys_id,other_params)
{  
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}


// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//Gets all the MACs associated with a given SNOW computer. (The MAC field itself + all MACs on network adapters associated with the computer.)
function getMACs(snow_computer_query)
{
  var macs = []
  
  var smac = snow_computer_query.mac_address
  if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
  if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }
  
  var na = new GlideRecord('cmdb_ci_network_adapter')
  na.addQuery('cmdb_ci',snow_computer_query.sys_id)
  na.query()
  
  while(na.next()) {
    var smac = na.mac_address
    if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
    if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }  
  }
  
  return macs
}

//A golden match is one where a SNOW device is found that fits the following conditions:
// 1. Name matches
// 2. Model matches
// 3. At least one MAC associated with the SNOW computer is the Armis device's MAC.
function attemptGoldenMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  //If the name is '', we can't golden match.
  if(armis_computer_query.name == '') { ret.debug = "Name is empty, unable to attempt golden match.";return ret }
  var debug = []
  debug.push("Attempting golden link for link Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  
  //Model is tricky, so need to sanitize
  var armis_model = ''
  if( armis_computer_query.model != 'Unknown') { armis_model = armis_computer_query.model }
  
  //Golden match: Check for exact matches on the name and model.
  var snow_device = new GlideRecord('cmdb_ci_computer')
  snow_device.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
  snow_device.addQuery('name','=',armis_computer_query.name)
  snow_device.query()
  debug.push("--Matches found for name only: " + snow_device.getRowCount() + " "  +lapReport(lap));lap=now()
  
  while(snow_device.next())
  {
    debug.push("--Evaluating SNOW device: " + snow_device.name)
    var snow_model = ''
    if( snow_device.model_id != null ) { if( snow_device.model_id.name != null) { snow_model = snow_device.model_id.name } }
    
    //Golden match condition: model matches
    debug.push("--Comparing models: '" + snow_model + "' == '" + armis_model + "' " +lapReport(lap));lap=now()
    if(snow_model == armis_model)
    {
      //Golden match condition: at least one MAC matches.
      var macs = getMACs(snow_device)
      debug.push("--Evaluating MACs vs Armis MAC " + ('' + armis_computer_query.mac_address).toUpperCase() + " : [" + macs + "] " +lapReport(lap));lap=now()
      if(includes(macs,('' + armis_computer_query.mac_address).toUpperCase()))
      {
        debug.push("--Golden match found. " +lapReport(lap));lap=now()
        ret.matched_device_sys_id = '' + snow_device.sys_id
        ret.match = true
        break
      }
      else { debug.push("--Failed to find MAC in array. "  +lapReport(lap));lap=now() }
    }
    else { debug.push("--Failed model match. " +lapReport(lap));lap=now() }
  }
  
  ret.debug = debug.join('\n')
  return ret
}

//A MAC match occurs when:
// 1. The Armis device's MAC is not disqualified due to being a virtual MAC (it does not appear more than X times in the CMDB)
// 2. The Armis device's MAC appears on at least one computer as an associated MAC
//The match is whichever computer where the MAC appears most frequently.
function attemptMACMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  var debug = []
  debug.push("Attempting MAC link for Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  var vmac_threshold = parseInt(getConfigValue('vmac_threshold'))
  debug.push("--VMAC Threshold: " + vmac_threshold + " "  +lapReport(lap));lap=now()
  
  //Count number of time MAC occurs.
  var tables = ['cmdb_ci_network_adapter','cmdb_ci_computer']
  var mac_count = 0
  for (var j=0;j&lt;tables.length;j++)
  {
    var q = new GlideAggregate(tables[j])
    q.addAggregate('COUNT')
    q.addQuery('mac_address','=',('' + armis_computer_query.mac_address).toUpperCase())
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    if(q.next()) { mac_count += parseInt(q.getAggregate('COUNT')) }
  }
  debug.push("--Occurrences of MAC '" + armis_computer_query.mac_address + "': " + mac_count+ " "  +lapReport(lap));lap=now()
  
  //Only continue if we are under the vmac threshold.
  if (mac_count &lt; vmac_threshold)
  {
    //Start counting the computers by occurrence of the MAC.
    var counts = {}
    var debug_lookup = {}
    var top_count = 0
    var top_sys_id = ''
    var q = new GlideRecord('cmdb_ci_computer')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(counts[q.sys_id] == null) { counts[q.sys_id] = 0; debug_lookup[q.sys_id] = q.name }
      counts[q.sys_id]++
      if (counts[q.sys_id] &gt; top_count) { top_count = counts[q.sys_id]; top_sys_id = q.sys_id }
    }
    
    //Count network adapters by occurrence of the MAC.
    q = new GlideRecord('cmdb_ci_network_adapter')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(q.cmdb_ci == null) { continue } //If for some reason there's no attached CI, skip this entry.
      if(counts[q.cmdb_ci.sys_id] == null) { counts[q.cmdb_ci.sys_id] = 0; debug_lookup[q.cmdb_ci.sys_id] = q.cmdb_ci.name }
      counts[q.cmdb_ci.sys_id]++
      if (counts[q.cmdb_ci.sys_id] &gt; top_count) { top_count = counts[q.cmdb_ci.sys_id]; top_sys_id = q.cmdb_ci.sys_id }
    }
    debug.push("--Counts: " + JSON.stringify(counts) + " "  +lapReport(lap));lap=now()
    debug.push("--Top count: " + top_sys_id + " (" + debug_lookup[top_sys_id] + ")")
    
    if (top_sys_id != '')
    {
      debug.push("--MAC Match found.")
      ret.match = true
      ret.matched_device_sys_id = '' + top_sys_id
    }
  }
  
  ret.debug = debug.join("\n")
  return ret
}

// **********************
// *** IMPLEMENTATION ***
// **********************

(function execute(inputs, outputs) {

  
  var start_time = now()
  var report_string = ''
  var api_total = 0
  var heavy_total = 0
  var debug = ['BEGIN LINK_AttemptAllArmisLinks']
  var error_message = ''
  var lap = now()
  var execution_id = generateID()
  
  var armis_attempts_count = 0
  var armis_successes_count = 0
  
  //Loop until out of records or out of time.
  var end_loop_early = false
  var loop_counter = 0
  var max_processing_seconds = parseInt(inputs.max_processing_seconds)
  if(isNaN(max_processing_seconds)) { max_processing_seconds = 240 }
  
  try {

    while(end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_processing_seconds*1000)
    {
      loop_counter++
      debug.push("LOOP " + loop_counter + " "  +lapReport(lap));lap=now()
      //Pull 100 records.
      var n = 100
      var table = 'x_fmcna_armis_inte_armis_device_table'
      var other_params = {force_field: 'novel_link_attempted',force_pending: false}

      //See documentation for how this works.
      var end_sys_id = getPendingRecordsEndSysID(n,table,other_params)
      debug.push("End sys_id (for record pull): " + end_sys_id + " "  +lapReport(lap));lap=now()
      if (end_sys_id == null)
      {
        //No more records, this process is done.
        debug.push("No records remaining to attempt match. Ending routine. " +lapReport(lap));lap=now()
        break
      }

      var rec1 = getNumPendingRecords(n,table,end_sys_id,other_params)
      var rec2 = getNumPendingRecords(n,table,end_sys_id,other_params)

      while(rec1.next())
      {

        armis_attempts_count++
        var result = attemptGoldenMatch(rec1)
        var link_strength = 'GOLDEN'
        lap=now()
        debug.push(result.debug)

        if (result.match == false)
        {
          result = attemptMACMatch(rec1)
          link_strength = 'MAC ONLY'
          lap=now()
          debug.push(result.debug)
        }

        //By now we have exhausted all opportunities for matching.
        //If we have a match, store it, otherwise we're done.
        if(result.match == true)
        {
          armis_successes_count++
          rec1.setValue('linked_snow_computer',result.matched_device_sys_id)
          rec1.setValue('link_strength',link_strength)
          if (rec1.linked_snow_computer != result.matched_device_sys_id) { rec1.has_pushed_all_properties_to_armis = false }
          rec1.update()
          debug.push("Assigned matching SNOW computer.  "+lapReport(lap) + "\n");lap=now()
        }
        else { debug.push("No match found. "  +lapReport(lap)+"\n");lap=now() }
      }

      //All updates have been completed, set attempted flags.
      rec2.setValue('novel_link_attempted',true)
      rec2.updateMultiple()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }    
  
  outputs.debug = debug.join('\n')
  var report_string = error_message + "Attempted " + armis_attempts_count + " armis-to-snow links, " + armis_successes_count + " successful."
  if(armis_attempts_count &gt; 0) { writeToActionLog({id: execution_id, action_type: 'LINK_AttemptAllArmisLinks', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: report_string, debug_string: outputs.debug}) }
  
  outputs.debug = debug.join('\n')
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f035bac21b1a58104be764e8bc4bcb15</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>b435bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=f035bac21b1a58104be764e8bc4bcb15"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>7035bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_processing_seconds</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>f035bac21b1a58104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f035bac21b1a58104be764e8bc4bcb15</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>3435bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=f035bac21b1a58104be764e8bc4bcb15^sys_idNOT IN3035bac21b1a58104be764e8bc4bcb18"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_processing_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f035bac21b1a58104be764e8bc4bcb15</model>
        <model_id>f035bac21b1a58104be764e8bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_f035bac21b1a58104be764e8bc4bcb15</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3035bac21b1a58104be764e8bc4bcb18</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=f035bac21b1a58104be764e8bc4bcb15^sys_idNOT INf035bac21b1a58104be764e8bc4bcb1f"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=91766569-3b03-4ab7-8f9a-eea8717b5dfa</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f035bac21b1a58104be764e8bc4bcb15</model>
        <model_id>f035bac21b1a58104be764e8bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_f035bac21b1a58104be764e8bc4bcb15</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f035bac21b1a58104be764e8bc4bcb1f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=2035bac21b1a58104be764e8bc4bcb09^sys_idNOT IN6035bac21b1a58104be764e8bc4bcb0a"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=e0d81bd2-e4cc-4a80-b7d0-1c6ec44284f1</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>10</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_processing_seconds</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="LINK_AttemptAllArmisLinks (v2.1)">2035bac21b1a58104be764e8bc4bcb09</model>
        <model_id>2035bac21b1a58104be764e8bc4bcb09</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_2035bac21b1a58104be764e8bc4bcb09</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>6035bac21b1a58104be764e8bc4bcb0a</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_output action="delete_multiple" query="model=2035bac21b1a58104be764e8bc4bcb09^sys_idNOT IN3c35bac21b1a58104be764e8bc4bcb44"/>
    <sys_hub_action_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,pwd2droppable=true,uiType=string,uiTypeLabel=String,uiUniqueId=d52aeed6-1b50-46a1-ba1f-85305015187a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_prototype/>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_link/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>false</mandatory>
        <max_length>8000</max_length>
        <model display_value="LINK_AttemptAllArmisLinks (v2.1)">2035bac21b1a58104be764e8bc4bcb09</model>
        <model_id>2035bac21b1a58104be764e8bc4bcb09</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_output_2035bac21b1a58104be764e8bc4bcb09</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3c35bac21b1a58104be764e8bc4bcb44</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_output>
    <sys_hub_step_instance action="delete_multiple" query="action=2035bac21b1a58104be764e8bc4bcb09^sys_idNOT INf035bac21b1a58104be764e8bc4bcb15"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="LINK_AttemptAllArmisLinks (v2.1)">2035bac21b1a58104be764e8bc4bcb09</action>
        <cid>6d4610d2-7aa0-423e-b15e-9c339aa0dd4c</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f035bac21b1a58104be764e8bc4bcb15</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:08</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=f035bac21b1a58104be764e8bc4bcb15"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f035bac21b1a58104be764e8bc4bcb15</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>7835bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-05 14:15:08</sys_updated_on>
        <value>/* This script attempts to link:

1. Any Armis Device Table devices that have not yet attempted to link to a SNOW device
2. Populate the "Armis Link Reference" table with any SNOW computers that are not already on it.
3. Use this table to attempt a link on SNOW devices that have not yet attempted to link to an Armis device.

Once an Armis device attempts to link, the column "Novel Link Attempted" will be set to true. Once a SNOW computer attempts to link, it gets tagged with "Attempted Armis Link"

*/


//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


//From the TABLE function library

function getPendingRecordsEndSysID(n,table,other_params)
{
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  while(q.next()) { if(q.hasNext() == false) { return q.getValue('sys_id') } } 
  return null
}

function getNumPendingRecords(n,table,end_sys_id,other_params)
{  
  if(other_params == null) { other_params = {} }
  if(other_params.force_field == null) { other_params.force_field = 'status'}
  if(other_params.force_pending == null) { other_params.force_pending = 'PENDING'}
  var q = new GlideRecord(table)
  q.addQuery(other_params.force_field,other_params.force_pending)
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}


// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//Gets all the MACs associated with a given SNOW computer. (The MAC field itself + all MACs on network adapters associated with the computer.)
function getMACs(snow_computer_query)
{
  var macs = []
  
  var smac = snow_computer_query.mac_address
  if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
  if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }
  
  var na = new GlideRecord('cmdb_ci_network_adapter')
  na.addQuery('cmdb_ci',snow_computer_query.sys_id)
  na.query()
  
  while(na.next()) {
    var smac = na.mac_address
    if (smac == null) { smac = '' } else { smac = ('' + smac).trim().toUpperCase() }
    if(smac != '' &amp;&amp; !includes(macs,smac)) { macs.push(smac) }  
  }
  
  return macs
}

//A golden match is one where a SNOW device is found that fits the following conditions:
// 1. Name matches
// 2. Model matches
// 3. At least one MAC associated with the SNOW computer is the Armis device's MAC.
function attemptGoldenMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  //If the name is '', we can't golden match.
  if(armis_computer_query.name == '') { ret.debug = "Name is empty, unable to attempt golden match.";return ret }
  var debug = []
  debug.push("Attempting golden link for link Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  
  //Model is tricky, so need to sanitize
  var armis_model = ''
  if( armis_computer_query.model != 'Unknown') { armis_model = armis_computer_query.model }
  
  //Golden match: Check for exact matches on the name and model.
  var snow_device = new GlideRecord('cmdb_ci_computer')
  snow_device.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
  snow_device.addQuery('name','=',armis_computer_query.name)
  snow_device.query()
  debug.push("--Matches found for name only: " + snow_device.getRowCount() + " "  +lapReport(lap));lap=now()
  
  while(snow_device.next())
  {
    debug.push("--Evaluating SNOW device: " + snow_device.name)
    var snow_model = ''
    if( snow_device.model_id != null ) { if( snow_device.model_id.name != null) { snow_model = snow_device.model_id.name } }
    
    //Golden match condition: model matches
    debug.push("--Comparing models: '" + snow_model + "' == '" + armis_model + "' " +lapReport(lap));lap=now()
    if(snow_model == armis_model)
    {
      //Golden match condition: at least one MAC matches.
      var macs = getMACs(snow_device)
      debug.push("--Evaluating MACs vs Armis MAC " + ('' + armis_computer_query.mac_address).toUpperCase() + " : [" + macs + "] " +lapReport(lap));lap=now()
      if(includes(macs,('' + armis_computer_query.mac_address).toUpperCase()))
      {
        debug.push("--Golden match found. " +lapReport(lap));lap=now()
        ret.matched_device_sys_id = '' + snow_device.sys_id
        ret.match = true
        break
      }
      else { debug.push("--Failed to find MAC in array. "  +lapReport(lap));lap=now() }
    }
    else { debug.push("--Failed model match. " +lapReport(lap));lap=now() }
  }
  
  ret.debug = debug.join('\n')
  return ret
}

//A MAC match occurs when:
// 1. The Armis device's MAC is not disqualified due to being a virtual MAC (it does not appear more than X times in the CMDB)
// 2. The Armis device's MAC appears on at least one computer as an associated MAC
//The match is whichever computer where the MAC appears most frequently.
function attemptMACMatch(armis_computer_query)
{
  var ret = {}
  var lap = now()
  ret.match = false
  var debug = []
  debug.push("Attempting MAC link for Armis device '" + armis_computer_query.name + "' " +lapReport(lap));lap=now()
  
  var vmac_threshold = parseInt(getConfigValue('vmac_threshold'))
  debug.push("--VMAC Threshold: " + vmac_threshold + " "  +lapReport(lap));lap=now()
  
  //Count number of time MAC occurs.
  var tables = ['cmdb_ci_network_adapter','cmdb_ci_computer']
  var mac_count = 0
  for (var j=0;j&lt;tables.length;j++)
  {
    var q = new GlideAggregate(tables[j])
    q.addAggregate('COUNT')
    q.addQuery('mac_address','=',('' + armis_computer_query.mac_address).toUpperCase())
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    if(q.next()) { mac_count += parseInt(q.getAggregate('COUNT')) }
  }
  debug.push("--Occurrences of MAC '" + armis_computer_query.mac_address + "': " + mac_count+ " "  +lapReport(lap));lap=now()
  
  //Only continue if we are under the vmac threshold.
  if (mac_count &lt; vmac_threshold)
  {
    //Start counting the computers by occurrence of the MAC.
    var counts = {}
    var debug_lookup = {}
    var top_count = 0
    var top_sys_id = ''
    var q = new GlideRecord('cmdb_ci_computer')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(counts[q.sys_id] == null) { counts[q.sys_id] = 0; debug_lookup[q.sys_id] = q.name }
      counts[q.sys_id]++
      if (counts[q.sys_id] &gt; top_count) { top_count = counts[q.sys_id]; top_sys_id = q.sys_id }
    }
    
    //Count network adapters by occurrence of the MAC.
    q = new GlideRecord('cmdb_ci_network_adapter')
    q.addQuery('mac_address','=',armis_computer_query.mac_address)
    q.addQuery('sys_class_name','!=','u_cmdb_ci_computers_from_armis')
    q.query()
    while(q.next())
    {
      if(q.cmdb_ci == null) { continue } //If for some reason there's no attached CI, skip this entry.
      if(counts[q.cmdb_ci.sys_id] == null) { counts[q.cmdb_ci.sys_id] = 0; debug_lookup[q.cmdb_ci.sys_id] = q.cmdb_ci.name }
      counts[q.cmdb_ci.sys_id]++
      if (counts[q.cmdb_ci.sys_id] &gt; top_count) { top_count = counts[q.cmdb_ci.sys_id]; top_sys_id = q.cmdb_ci.sys_id }
    }
    debug.push("--Counts: " + JSON.stringify(counts) + " "  +lapReport(lap));lap=now()
    debug.push("--Top count: " + top_sys_id + " (" + debug_lookup[top_sys_id] + ")")
    
    if (top_sys_id != '')
    {
      debug.push("--MAC Match found.")
      ret.match = true
      ret.matched_device_sys_id = '' + top_sys_id
    }
  }
  
  ret.debug = debug.join("\n")
  return ret
}

// **********************
// *** IMPLEMENTATION ***
// **********************

(function execute(inputs, outputs) {

  
  var start_time = now()
  var report_string = ''
  var api_total = 0
  var heavy_total = 0
  var debug = ['BEGIN LINK_AttemptAllArmisLinks']
  var error_message = ''
  var lap = now()
  var execution_id = generateID()
  
  var armis_attempts_count = 0
  var armis_successes_count = 0
  
  //Loop until out of records or out of time.
  var end_loop_early = false
  var loop_counter = 0
  var max_processing_seconds = parseInt(inputs.max_processing_seconds)
  if(isNaN(max_processing_seconds)) { max_processing_seconds = 240 }
  
  try {

    while(end_loop_early == false &amp;&amp; (now() - start_time) &lt; max_processing_seconds*1000)
    {
      loop_counter++
      debug.push("LOOP " + loop_counter + " "  +lapReport(lap));lap=now()
      //Pull 100 records.
      var n = 100
      var table = 'x_fmcna_armis_inte_armis_device_table'
      var other_params = {force_field: 'novel_link_attempted',force_pending: false}

      //See documentation for how this works.
      var end_sys_id = getPendingRecordsEndSysID(n,table,other_params)
      debug.push("End sys_id (for record pull): " + end_sys_id + " "  +lapReport(lap));lap=now()
      if (end_sys_id == null)
      {
        //No more records, this process is done.
        debug.push("No records remaining to attempt match. Ending routine. " +lapReport(lap));lap=now()
        break
      }

      var rec1 = getNumPendingRecords(n,table,end_sys_id,other_params)
      var rec2 = getNumPendingRecords(n,table,end_sys_id,other_params)

      while(rec1.next())
      {

        armis_attempts_count++
        var result = attemptGoldenMatch(rec1)
        var link_strength = 'GOLDEN'
        lap=now()
        debug.push(result.debug)

        if (result.match == false)
        {
          result = attemptMACMatch(rec1)
          link_strength = 'MAC ONLY'
          lap=now()
          debug.push(result.debug)
        }

        //By now we have exhausted all opportunities for matching.
        //If we have a match, store it, otherwise we're done.
        if(result.match == true)
        {
          armis_successes_count++
          rec1.setValue('linked_snow_computer',result.matched_device_sys_id)
          rec1.setValue('link_strength',link_strength)
          if (rec1.linked_snow_computer != result.matched_device_sys_id) { rec1.has_pushed_all_properties_to_armis = false }
          rec1.update()
          debug.push("Assigned matching SNOW computer.  "+lapReport(lap) + "\n");lap=now()
        }
        else { debug.push("No match found. "  +lapReport(lap)+"\n");lap=now() }
      }

      //All updates have been completed, set attempted flags.
      rec2.setValue('novel_link_attempted',true)
      rec2.updateMultiple()
    }
  }
  catch(ex)
  {
    error_message = '[ERROR: ' + ex + '] '
    debug.push(error_message)
    writeToErrorLog({id: execution_id, error_message: ex, debug_string: debug.join('\n')})
  }    
  
  outputs.debug = debug.join('\n')
  var report_string = error_message + "Attempted " + armis_attempts_count + " armis-to-snow links, " + armis_successes_count + " successful."
  if(armis_attempts_count &gt; 0) { writeToActionLog({id: execution_id, action_type: 'LINK_AttemptAllArmisLinks', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: report_string, debug_string: outputs.debug}) }
  
  outputs.debug = debug.join('\n')
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>f035bac21b1a58104be764e8bc4bcb15</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>b435bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=f035bac21b1a58104be764e8bc4bcb15"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>7035bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_processing_seconds</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>f035bac21b1a58104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_f035bac21b1a58104be764e8bc4bcb15</table>
        <value>{{action.max_processing_seconds}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>f035bac21b1a58104be764e8bc4bcb15</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_id>3435bac21b1a58104be764e8bc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=f035bac21b1a58104be764e8bc4bcb15^sys_idNOT IN3035bac21b1a58104be764e8bc4bcb18"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_processing_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_processing_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f035bac21b1a58104be764e8bc4bcb15</model>
        <model_id>f035bac21b1a58104be764e8bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_f035bac21b1a58104be764e8bc4bcb15</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3035bac21b1a58104be764e8bc4bcb18</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=f035bac21b1a58104be764e8bc4bcb15^sys_idNOT INf035bac21b1a58104be764e8bc4bcb1f"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=91766569-3b03-4ab7-8f9a-eea8717b5dfa</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">f035bac21b1a58104be764e8bc4bcb15</model>
        <model_id>f035bac21b1a58104be764e8bc4bcb15</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_f035bac21b1a58104be764e8bc4bcb15</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f035bac21b1a58104be764e8bc4bcb1f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_2035bac21b1a58104be764e8bc4bcb09^sys_idNOT IN3c35bac21b1a58104be764e8bc4bcb12"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_processing_seconds</element>
        <help/>
        <hint/>
        <label>max_processing_seconds</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_2035bac21b1a58104be764e8bc4bcb09</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3c35bac21b1a58104be764e8bc4bcb12</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>max_processing_seconds</sys_name>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_documentation_var__m_sys_hub_action_input_2035bac21b1a58104be764e8bc4bcb09_max_processing_seconds_en</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:24</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_output_2035bac21b1a58104be764e8bc4bcb09^sys_idNOT IN7835bac21b1a58104be764e8bc4bcb56"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>debug</element>
        <help/>
        <hint/>
        <label>debug</label>
        <language>en</language>
        <name>var__m_sys_hub_action_output_2035bac21b1a58104be764e8bc4bcb09</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-30 21:50:25</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7835bac21b1a58104be764e8bc4bcb56</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>debug</sys_name>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_documentation_var__m_sys_hub_action_output_2035bac21b1a58104be764e8bc4bcb09_debug_en</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-30 21:50:25</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
</record_update>
