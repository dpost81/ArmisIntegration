<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>getd_getbulkarmisdata</internal_name>
        <label_cache>[{"name":"{{action.mode}}","label":"action➛mode","type":"action","ref":""},{"name":"{{action.max_runtime}}","label":"action➛max_runtime","type":"action","ref":""},{"name":"{{action.query}}","label":"action➛query","type":"action","ref":""},{"name":"{{action.tags_to_table}}","label":"action➛tags_to_table","type":"action","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug1}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug2}}","label":"step➛Script step➛debug2","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug3}}","label":"step➛Script step➛debug3","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].time_left_s}}","label":"step➛Script step➛time_left_s","type":"step","ref":""}]</label_cache>
        <latest_snapshot>7c0d6fca1b9e58104be764e8bc4bcb02</latest_snapshot>
        <master_snapshot>d4181bf61b8294104ca7edf9bc4bcb8f</master_snapshot>
        <name>GETD_GetBulkArmisData (v2.1)</name>
        <natlang/>
        <outputs/>
        <outputs/>
        <state>published</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 17:32:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>b25ad2f21b0a10104be764e8bc4bcbe8</sys_id>
        <sys_mod_count>190</sys_mod_count>
        <sys_name>GETD_GetBulkArmisData (v2.1)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_b25ad2f21b0a10104be764e8bc4bcbe8</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:18</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="delete_multiple" query="document_key=b25ad2f21b0a10104be764e8bc4bcbe8"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_action_type_definition</document>
        <document_key>b25ad2f21b0a10104be764e8bc4bcbe8</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:55</sys_created_on>
        <sys_id>b8a619771b4ad8104ca7edf9bc4bcbd4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:55</sys_updated_on>
        <value/>
        <variable display_value="">a4a619771b4ad8104ca7edf9bc4bcbcb</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=b25ad2f21b0a10104be764e8bc4bcbe8"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>time_left_s</field>
        <id>b25ad2f21b0a10104be764e8bc4bcbe8</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:55</sys_created_on>
        <sys_id>38a619771b4ad8104ca7edf9bc4bcbd4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:55</sys_updated_on>
        <table>var__m_sys_hub_action_output_b25ad2f21b0a10104be764e8bc4bcbe8</table>
        <value>{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].time_left_s}}</value>
    </sys_element_mapping>
    <sys_hub_step_instance action="delete_multiple" query="action=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>728266fe1b0a10104be764e8bc4bcb36</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:14</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3682e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3e82e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:14</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//UPDATE ARMIS DEVICE (v0.2)
//MINIFIED -- FIND THE FULL VERSION IN THE FUNCTION_LIBRARY ACTION
function updateArmisDevice(e,i){var s=(new GlideDateTime).getNumericValue(),a={},t=new GlideRecord("x_fmcna_armis_inte_armis_device_table"),r=digest(JSON.stringify(e));a.digest=r,t.addQuery("armis_device_id",e.id),t.query();var n=0==t.getRowCount();n?t.initialize():t.next(),a.is_insert=n;var d,_=!0;if(n||t.getValue("digest")!=r||(_=!1),a.perform=_,a.digest_existing=t.getValue("digest"),_){if(t.access_switch=e.accessSwitch,t.armis_device_id=e.id,t.armis_risk_level=e.riskLevel,t.category=e.category,t.first_seen=new GlideDateTime(e.firstSeen),t.ip_address=e.ipAddress,t.last_seen=new GlideDateTime(e.lastSeen),t.mac_address=e.macAddress,t.manufacturer=e.manufacturer,t.model=e.model,t.name=e.name,t.os=e.operatingSystem,t.os_version=e.operatingSystemVersion,null!=e.sensor&amp;&amp;(t.sensor_name=e.sensor.name),null!=e.sensor&amp;&amp;(t.sensor_type=e.sensor.type),null!=e.site&amp;&amp;(t.site=e.site.name),null!=e.site&amp;&amp;(t.site_location=e.site.location),t.armis_tags=JSON.stringify(e.tags),t.visibility=e.visibility,t.digest=r,n?(d=t.insert(),a.action="insert"):(d=t.update(),a.action="update"),a.record=d,i){null==e.tags&amp;&amp;(e.tags=[]);var l=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");l.addQuery("armis_device",d),l.query();for(var m=[];l.next();){var c=l.getValue("armis_tag");includes(m,l.getValue("armis_tag"))?m.push(c):l.deleteRecord()}for(var o=0;o&lt;e.tags.length;o++)if(!includes(m,e.tags[o])){var g=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");g.initialize(),g.armis_device=d,g.armis_tag=e.tags[o],g.insert()}}}else a.action="no_update_needed";return a.time_delta=(new GlideDateTime).getNumericValue()-s,a}

// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//This occurs if a refresh pass maxes out. When this occurs, a few things need to happen:
// 1. The n counter resets to 0
// 2. The time since the last reset is measured
// 3. We adjust the query to make sure we go over recent data X times, where X is set by the config value.
//The reason we adjust the query is because we want to make sure that we give several chances for a device to get updated, since we don't have a fixed
//set of data, the set of data will fluctuate as devices drop off and show up between queries, so if we only did a single pass we would definitely miss devices.
function recalculateRefreshHours()
  {
    //We always want to be able to do several (let's say 5) refresh runs before an updated device drops off of the query parameters,
    //to maximize the chance that we'll capture all devices. We want a minimum of 1 hour.
    //This value may fluctuate up and down, but we don't want it to be more than 24 hours. 
    var debug = []
    var last_refresh_str = getCacheValue('getd_refresh_last_reset','datetime')
    var last_refresh_time = new GlideDateTime(last_refresh_str)
    debug.push("last_refresh_time=" + last_refresh_time)
    
    var num_refreshes_for_query = getConfigValue('getd_refresh_passes')
    if (num_refreshes_for_query == '') { num_refreshes_for_query = 5 }
    debug.push("num_refreshes_for_query=" + num_refreshes_for_query)
    
    var elapsed_hours_since_last_reset = (now() - last_refresh_time.getNumericValue()) / 3600000
    debug.push("elapsed_hours_since_last_reset=" + elapsed_hours_since_last_reset)

    var new_query_hours = Math.ceil(num_refreshes_for_query * elapsed_hours_since_last_reset)
    if (new_query_hours &gt; 24) { new_query_hours = 24 }
    if (new_query_hours &lt; 1) { new_query_hours = 1 } 
    debug.push("new_query_hours=" + new_query_hours)

    //Set the new cache query hours and reset the timer.
    setCacheValue('getd_refresh_calculated_hours',new_query_hours,'int')
    setCacheValue('getd_refresh_last_reset',new GlideDateTime(),'datetime')
    return debug
  }
    

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  //Escape early
  if(inputs.mode == 'test') { return }
  if(inputs.max_runtime_seconds &lt;= 0) { outputs.time_left_s = inputs.max_runtime_seconds; return }
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop, as well as return back the leftover time (so a refresh run can be executed after a master run)
  var start_time = now()
  function calculateTimeLeft(inputs) { return inputs.max_runtime_seconds - ( now() - start_time)/1000 }
  outputs.time_left_s = 0 //Just in case
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')  
  //If we have ### in the query (refresh query), make sure to use the cached value.
  if (inputs.mode == 'refresh')
  {
    var cached_hours = getCacheValue('getd_refresh_calculated_hours','int')
    if (cached_hours == '' || cached_hours == null) { cached_hours = 1 }
    armis_query = armis_query.replace("###",cached_hours)
  }
  debug.push("QUERY= '" + armis_query + "'.")
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var num_records_skipped = 0
  var total_mode_records = 0
  var end_script_report = "";
  var original_getd_n = 0
  var num_refresh_threshold = -20 //The number of devices to go back compared to the "next" value, in order to ensure that we get some degree of overlap and catch missed devices
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; calculateTimeLeft(inputs) &gt; 0)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    if(original_getd_n == 0) { original_getd_n = getd_n} // used for reporting.
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',armis_query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, but sandwich .execute() with a time check to document how long it took.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog({id: execution_id, endpoint: 'get_search', payload: inputs.query, response_code: response.getStatusCode(), 
         response_body: response.getBody(), start_time: glide_start_time, time_delta_ms: api_time_delta})
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          total_mode_records = data.total
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Note that if we're at the end of the list of devices, next will be null.
          //What happens next depends on the mode:
          // - if mode==master, we want to just keep the current "next" at the total so that when we check again, we're checking for NEW devices.
          // - if mode==refresh, we want to loop back around to 0 and start again when we've finished the refresh stack.
          if (data.next == null) {
            switch (inputs.mode) {
              case 'master':
                setCacheValue(cache_key, data.total, 'int')
                break;
              case 'refresh':
                setCacheValue(cache_key, 0, 'int');
                end_script_report += '[MAXED,RESET TO 0] '
                //In addition, when we reset the refresh, we need to do an extra step: update the refresh query.
                //recalculateRefreshHours()
                break;
            }
          }
          else { 
            //Update the cache so the next run starts where we left off.
            //Note that for refresh, we want to go a few steps backward so that we can try to catch any new devices that may have been added since we last checked.
            //This won't be perfect but should go a long way toward improving consistency.
            switch (inputs.mode) {
              case 'master': setCacheValue(cache_key, data.next, 'int');break
              case 'refresh': setCacheValue(cache_key, data.next + num_refresh_threshold, 'int');break
            }
          }
          
          //Set the total too, just for reference.
          setCacheValue("getd_" + inputs.mode + "_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              //I've abstracted this functionality into the function library since I'll be using it in more than one action, see FUNCTION_LIBRARY documentation
              var results = updateArmisDevice(entry,inputs.tags_to_table)
              debug.push(results.action + ":" + entry.id + " (" + entry.name + "). (" + results.time_delta + "ms)")
              switch (results.action) {
                case 'insert': num_records_inserted += 1; break
                case 'update': num_records_updated += 1; break
                case 'no_update_needed': num_records_skipped += 1; break
              }
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query in MASTER mode, that means we're maxed out. We don't even want to log anything, just drop the script.
            
            if (num_api_calls == 1 &amp;&amp; inputs.mode == 'master') {
              outputs.debug = "0 records, killed script."
              outputs.time_left_s = calculateTimeLeft(inputs)
              return
            }
            //If we're in master mode, we still want to report, but we're done looping.
            //(We do want to set a flag in the cache that the master is maxed out, so triggers can start processing.)
            if (inputs.mode == 'master')
            {
              setCacheValue('master_complete', 1, 'int')
              end_loop_early = true
            }
            //Any other case (i.e. refresh mode), we have just reset the counter to 0 and we want to keep looping.
          }
          
          //Document our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  //Percentage reporting, to get a good idea of how far we've come along.
  var start_pct = ( 100 * (original_getd_n) / total_mode_records ).toFixed(1)
  var done_pct = ( 100 * (parseInt(num_armis_devices) + parseInt(original_getd_n)) / total_mode_records ).toFixed(1)
  var percentage_insert = " (" + start_pct + "%-&gt;" + done_pct + "%)"
    
  //Build and store the action's results to the action log.
  end_script_report += "[" + inputs.mode.toUpperCase() + "]" + percentage_insert + " From n=" + original_getd_n + ", made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (inserted:" + num_records_inserted + ",updated:" + num_records_updated + "skipped:" + num_records_skipped + "). Time left:" + Math.round(calculateTimeLeft(inputs)) + "s."
  total_time = now() - start_time
  var flattened_debug = debug.join('\n')
  writeToActionLog(
    {id: execution_id, action_type: 'GETD_GetBulkArmisData', total_time: total_time, api_time: api_time, 
     heavy_processing_time: heavy_processing_time, report: end_script_report, debug_string: flattened_debug})
  
  outputs.debug = flattened_debug
  outputs.time_left_s = calculateTimeLeft(inputs)
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>9f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <value/>
        <variable display_value="">3a794fb61b0e10104be764e8bc4bcbd7</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>fa82e6321b4a10104be764e8bc4bcbe6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>1f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:18:25</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>5b798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:47</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:13</sys_created_on>
        <sys_id>139744031bc694104ca7edf9bc4bcb89</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:22</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>b282e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:10</sys_created_on>
        <sys_id>e05c98971bcad4104ca7edf9bc4bcb7a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a794fb61b0e10104be764e8bc4bcbd7,985c98971bcad4104ca7edf9bc4bcb62,f2794fb61b0e10104be764e8bc4bcbdc"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a794fb61b0e10104be764e8bc4bcbd7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>985c98971bcad4104ca7edf9bc4bcb62</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:46</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f2794fb61b0e10104be764e8bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:46</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN28a619771b4ad8104ca7edf9bc4bcbbe,3a82e6321b4a10104be764e8bc4bcba5"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=b85eb28c-f4f2-4a1e-8bb8-87dea0101b6a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>true</mandatory>
        <max_length>40</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>28a619771b4ad8104ca7edf9bc4bcbbe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:54</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,co_type_name=FD7a794fb6de0e1010c7a6c28ff79e79e0,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a82e6321b4a10104be764e8bc4bcba5</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 21:28:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN62794fb61b0e10104be764e8bc4bcbc7,6ed67bfa1b4694104ca7edf9bc4bcb82,b34c98571bcad4104ca7edf9bc4bcbc1"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=choice,uiTypeLabel=Choice,uiUniqueId=d04d4a47-1548-4a43-bf7f-5ee652acf20f</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice>3</choice>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>master</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Choice">choice</internal_type>
        <label>mode</label>
        <mandatory>false</mandatory>
        <max_length>32</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>62794fb61b0e10104be764e8bc4bcbc7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=c0ab8d17-e3ea-4ba2-ae2f-1a989f9aa85a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>30</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_runtime</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:16:59</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>6ed67bfa1b4694104ca7edf9bc4bcb82</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=boolean,uiTypeLabel=True/False,uiUniqueId=6bbf9627-cd6d-4499-9545-7eee9febe293</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="">boolean</internal_type>
        <label>tags_to_table</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>3</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b34c98571bcad4104ca7edf9bc4bcbc1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_output action="delete_multiple" query="model=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT INa4a619771b4ad8104ca7edf9bc4bcbcb"/>
    <sys_hub_action_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=fa7ee6fc-64a5-4211-81f1-c572e469a138</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_prototype/>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_link/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_output_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:55</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>a4a619771b4ad8104ca7edf9bc4bcbcb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:55</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_output>
    <sys_hub_step_instance action="delete_multiple" query="action=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>728266fe1b0a10104be764e8bc4bcb36</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:14</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3682e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3e82e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:14</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//UPDATE ARMIS DEVICE (v0.2)
//MINIFIED -- FIND THE FULL VERSION IN THE FUNCTION_LIBRARY ACTION
function updateArmisDevice(e,i){var s=(new GlideDateTime).getNumericValue(),a={},t=new GlideRecord("x_fmcna_armis_inte_armis_device_table"),r=digest(JSON.stringify(e));a.digest=r,t.addQuery("armis_device_id",e.id),t.query();var n=0==t.getRowCount();n?t.initialize():t.next(),a.is_insert=n;var d,_=!0;if(n||t.getValue("digest")!=r||(_=!1),a.perform=_,a.digest_existing=t.getValue("digest"),_){if(t.access_switch=e.accessSwitch,t.armis_device_id=e.id,t.armis_risk_level=e.riskLevel,t.category=e.category,t.first_seen=new GlideDateTime(e.firstSeen),t.ip_address=e.ipAddress,t.last_seen=new GlideDateTime(e.lastSeen),t.mac_address=e.macAddress,t.manufacturer=e.manufacturer,t.model=e.model,t.name=e.name,t.os=e.operatingSystem,t.os_version=e.operatingSystemVersion,null!=e.sensor&amp;&amp;(t.sensor_name=e.sensor.name),null!=e.sensor&amp;&amp;(t.sensor_type=e.sensor.type),null!=e.site&amp;&amp;(t.site=e.site.name),null!=e.site&amp;&amp;(t.site_location=e.site.location),t.armis_tags=JSON.stringify(e.tags),t.visibility=e.visibility,t.digest=r,n?(d=t.insert(),a.action="insert"):(d=t.update(),a.action="update"),a.record=d,i){null==e.tags&amp;&amp;(e.tags=[]);var l=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");l.addQuery("armis_device",d),l.query();for(var m=[];l.next();){var c=l.getValue("armis_tag");includes(m,l.getValue("armis_tag"))?m.push(c):l.deleteRecord()}for(var o=0;o&lt;e.tags.length;o++)if(!includes(m,e.tags[o])){var g=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");g.initialize(),g.armis_device=d,g.armis_tag=e.tags[o],g.insert()}}}else a.action="no_update_needed";return a.time_delta=(new GlideDateTime).getNumericValue()-s,a}

// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//This occurs if a refresh pass maxes out. When this occurs, a few things need to happen:
// 1. The n counter resets to 0
// 2. The time since the last reset is measured
// 3. We adjust the query to make sure we go over recent data X times, where X is set by the config value.
//The reason we adjust the query is because we want to make sure that we give several chances for a device to get updated, since we don't have a fixed
//set of data, the set of data will fluctuate as devices drop off and show up between queries, so if we only did a single pass we would definitely miss devices.
function recalculateRefreshHours()
  {
    //We always want to be able to do several (let's say 5) refresh runs before an updated device drops off of the query parameters,
    //to maximize the chance that we'll capture all devices. We want a minimum of 1 hour.
    //This value may fluctuate up and down, but we don't want it to be more than 24 hours. 
    var debug = []
    var last_refresh_str = getCacheValue('getd_refresh_last_reset','datetime')
    var last_refresh_time = new GlideDateTime(last_refresh_str)
    debug.push("last_refresh_time=" + last_refresh_time)
    
    var num_refreshes_for_query = getConfigValue('getd_refresh_passes')
    if (num_refreshes_for_query == '') { num_refreshes_for_query = 5 }
    debug.push("num_refreshes_for_query=" + num_refreshes_for_query)
    
    var elapsed_hours_since_last_reset = (now() - last_refresh_time.getNumericValue()) / 3600000
    debug.push("elapsed_hours_since_last_reset=" + elapsed_hours_since_last_reset)

    var new_query_hours = Math.ceil(num_refreshes_for_query * elapsed_hours_since_last_reset)
    if (new_query_hours &gt; 24) { new_query_hours = 24 }
    if (new_query_hours &lt; 1) { new_query_hours = 1 } 
    debug.push("new_query_hours=" + new_query_hours)

    //Set the new cache query hours and reset the timer.
    setCacheValue('getd_refresh_calculated_hours',new_query_hours,'int')
    setCacheValue('getd_refresh_last_reset',new GlideDateTime(),'datetime')
    return debug
  }
    

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  //Escape early
  if(inputs.mode == 'test') { return }
  if(inputs.max_runtime_seconds &lt;= 0) { outputs.time_left_s = inputs.max_runtime_seconds; return }
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop, as well as return back the leftover time (so a refresh run can be executed after a master run)
  var start_time = now()
  function calculateTimeLeft(inputs) { return inputs.max_runtime_seconds - ( now() - start_time)/1000 }
  outputs.time_left_s = 0 //Just in case
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')  
  //If we have ### in the query (refresh query), make sure to use the cached value.
  if (inputs.mode == 'refresh')
  {
    var cached_hours = getCacheValue('getd_refresh_calculated_hours','int')
    if (cached_hours == '' || cached_hours == null) { cached_hours = 1 }
    armis_query = armis_query.replace("###",cached_hours)
  }
  debug.push("QUERY= '" + armis_query + "'.")
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var num_records_skipped = 0
  var total_mode_records = 0
  var end_script_report = "";
  var original_getd_n = 0
  var num_refresh_threshold = -20 //The number of devices to go back compared to the "next" value, in order to ensure that we get some degree of overlap and catch missed devices
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; calculateTimeLeft(inputs) &gt; 0)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    if(original_getd_n == 0) { original_getd_n = getd_n} // used for reporting.
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',armis_query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, but sandwich .execute() with a time check to document how long it took.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog({id: execution_id, endpoint: 'get_search', payload: inputs.query, response_code: response.getStatusCode(), 
         response_body: response.getBody(), start_time: glide_start_time, time_delta_ms: api_time_delta})
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          total_mode_records = data.total
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Note that if we're at the end of the list of devices, next will be null.
          //What happens next depends on the mode:
          // - if mode==master, we want to just keep the current "next" at the total so that when we check again, we're checking for NEW devices.
          // - if mode==refresh, we want to loop back around to 0 and start again when we've finished the refresh stack.
          if (data.next == null) {
            switch (inputs.mode) {
              case 'master':
                setCacheValue(cache_key, data.total, 'int')
                break;
              case 'refresh':
                setCacheValue(cache_key, 0, 'int');
                end_script_report += '[MAXED,RESET TO 0] '
                //In addition, when we reset the refresh, we need to do an extra step: update the refresh query.
                //recalculateRefreshHours()
                break;
            }
          }
          else { 
            //Update the cache so the next run starts where we left off.
            //Note that for refresh, we want to go a few steps backward so that we can try to catch any new devices that may have been added since we last checked.
            //This won't be perfect but should go a long way toward improving consistency.
            switch (inputs.mode) {
              case 'master': setCacheValue(cache_key, data.next, 'int');break
              case 'refresh': setCacheValue(cache_key, data.next + num_refresh_threshold, 'int');break
            }
          }
          
          //Set the total too, just for reference.
          setCacheValue("getd_" + inputs.mode + "_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              //I've abstracted this functionality into the function library since I'll be using it in more than one action, see FUNCTION_LIBRARY documentation
              var results = updateArmisDevice(entry,inputs.tags_to_table)
              debug.push(results.action + ":" + entry.id + " (" + entry.name + "). (" + results.time_delta + "ms)")
              switch (results.action) {
                case 'insert': num_records_inserted += 1; break
                case 'update': num_records_updated += 1; break
                case 'no_update_needed': num_records_skipped += 1; break
              }
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query in MASTER mode, that means we're maxed out. We don't even want to log anything, just drop the script.
            
            if (num_api_calls == 1 &amp;&amp; inputs.mode == 'master') {
              outputs.debug = "0 records, killed script."
              outputs.time_left_s = calculateTimeLeft(inputs)
              return
            }
            //If we're in master mode, we still want to report, but we're done looping.
            //(We do want to set a flag in the cache that the master is maxed out, so triggers can start processing.)
            if (inputs.mode == 'master')
            {
              setCacheValue('master_complete', 1, 'int')
              end_loop_early = true
            }
            //Any other case (i.e. refresh mode), we have just reset the counter to 0 and we want to keep looping.
          }
          
          //Document our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  //Percentage reporting, to get a good idea of how far we've come along.
  var start_pct = ( 100 * (original_getd_n) / total_mode_records ).toFixed(1)
  var done_pct = ( 100 * (parseInt(num_armis_devices) + parseInt(original_getd_n)) / total_mode_records ).toFixed(1)
  var percentage_insert = " (" + start_pct + "%-&gt;" + done_pct + "%)"
    
  //Build and store the action's results to the action log.
  end_script_report += "[" + inputs.mode.toUpperCase() + "]" + percentage_insert + " From n=" + original_getd_n + ", made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (inserted:" + num_records_inserted + ",updated:" + num_records_updated + "skipped:" + num_records_skipped + "). Time left:" + Math.round(calculateTimeLeft(inputs)) + "s."
  total_time = now() - start_time
  var flattened_debug = debug.join('\n')
  writeToActionLog(
    {id: execution_id, action_type: 'GETD_GetBulkArmisData', total_time: total_time, api_time: api_time, 
     heavy_processing_time: heavy_processing_time, report: end_script_report, debug_string: flattened_debug})
  
  outputs.debug = flattened_debug
  outputs.time_left_s = calculateTimeLeft(inputs)
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>9f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <value/>
        <variable display_value="">3a794fb61b0e10104be764e8bc4bcbd7</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>fa82e6321b4a10104be764e8bc4bcbe6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>1f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:18:25</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>5b798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:47</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:13</sys_created_on>
        <sys_id>139744031bc694104ca7edf9bc4bcb89</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:22</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>b282e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:10</sys_created_on>
        <sys_id>e05c98971bcad4104ca7edf9bc4bcb7a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a794fb61b0e10104be764e8bc4bcbd7,985c98971bcad4104ca7edf9bc4bcb62,f2794fb61b0e10104be764e8bc4bcbdc"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a794fb61b0e10104be764e8bc4bcbd7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>985c98971bcad4104ca7edf9bc4bcb62</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:46</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f2794fb61b0e10104be764e8bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:46</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN28a619771b4ad8104ca7edf9bc4bcbbe,3a82e6321b4a10104be764e8bc4bcba5"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=b85eb28c-f4f2-4a1e-8bb8-87dea0101b6a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>true</mandatory>
        <max_length>40</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>28a619771b4ad8104ca7edf9bc4bcbbe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:54</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,co_type_name=FD7a794fb6de0e1010c7a6c28ff79e79e0,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a82e6321b4a10104be764e8bc4bcba5</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 21:28:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN22d67bfa1b4694104ca7edf9bc4bcb8a,ea794fb61b0e10104be764e8bc4bcbd0,ff4c98971bcad4104ca7edf9bc4bcb22"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_runtime</element>
        <help/>
        <hint/>
        <label>max_runtime</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:16:59</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>22d67bfa1b4694104ca7edf9bc4bcb8a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>mode</element>
        <help/>
        <hint/>
        <label>mode</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ea794fb61b0e10104be764e8bc4bcbd0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>tags_to_table</element>
        <help/>
        <hint>Should we populate the Armis Tags table? (May substantially increase time, more SQL queries.)</hint>
        <label>tags_to_table</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ff4c98971bcad4104ca7edf9bc4bcb22</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:08</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_choice action="delete_multiple" query="name=var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN62794fb61b0e10104be764e8bc4bcbcb,ee794fb61b0e10104be764e8bc4bcbcb,f3a5c6231b42d0104be764e8bc4bcbe0"/>
    <sys_choice field="mode" table="var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8">
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>master</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
            <sequence>0</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 20:58:45</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>62794fb61b0e10104be764e8bc4bcbcb</sys_id>
            <sys_mod_count>1</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 21:25:13</sys_updated_on>
            <value>master</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>refresh</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
            <sequence>1</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 20:58:45</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>ee794fb61b0e10104be764e8bc4bcbcb</sys_id>
            <sys_mod_count>1</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 21:25:13</sys_updated_on>
            <value>refresh</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>test</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
            <sequence>2</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-22 23:58:00</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>f3a5c6231b42d0104be764e8bc4bcbe0</sys_id>
            <sys_mod_count>1</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-23 02:27:56</sys_updated_on>
            <value>test</value>
        </sys_choice>
    </sys_choice>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_output_b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN38a619771b4ad8104ca7edf9bc4bcbd1"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>time_left_s</element>
        <help/>
        <hint/>
        <label>time_left_s</label>
        <language>en</language>
        <name>var__m_sys_hub_action_output_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:10:55</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>38a619771b4ad8104ca7edf9bc4bcbd1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:10:55</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_hub_action_plan action="delete_multiple" query="action_id=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT INf8185bf61b8294104ca7edf9bc4bcb1d"/>
    <sys_hub_action_plan action="INSERT_OR_UPDATE">
        <action_id display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</action_id>
        <plan>{"persistor":{"@class":".ChunkingPlanPersistor","table":"sys_hub_action_plan","id":"f8185bf61b8294104ca7edf9bc4bcb1d","name":"plan"}}</plan>
        <snapshot>7c0d6fca1b9e58104be764e8bc4bcb02</snapshot>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>f8185bf61b8294104ca7edf9bc4bcb1d</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_overrides/>
        <sys_scope/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:19</sys_updated_on>
    </sys_hub_action_plan>
    <sys_hub_action_type_snapshot action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <internal_name>getd_getbulkarmisdata</internal_name>
        <label_cache>[{"name":"{{action.mode}}","label":"action➛mode","type":"action","ref":""},{"name":"{{action.max_runtime}}","label":"action➛max_runtime","type":"action","ref":""},{"name":"{{action.query}}","label":"action➛query","type":"action","ref":""},{"name":"{{action.tags_to_table}}","label":"action➛tags_to_table","type":"action","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug1}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug2}}","label":"step➛Script step➛debug2","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug3}}","label":"step➛Script step➛debug3","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].time_left_s}}","label":"step➛Script step➛time_left_s","type":"step","ref":""}]</label_cache>
        <master>true</master>
        <name>GETD_GetBulkArmisData (v2.1)</name>
        <natlang/>
        <outputs/>
        <outputs/>
        <parent_action display_value="GETD_GetBulkArmisData (v2.1)">b25ad2f21b0a10104be764e8bc4bcbe8</parent_action>
        <sys_class_name>sys_hub_action_type_snapshot</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>d4181bf61b8294104ca7edf9bc4bcb8f</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name/>
        <sys_overrides/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_snapshot>
    <sys_variable_value action="delete_multiple" query="document_key=d4181bf61b8294104ca7edf9bc4bcb8f"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_action_type_snapshot</document>
        <document_key>d4181bf61b8294104ca7edf9bc4bcb8f</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_id>7d88913b1b4ad8104ca7edf9bc4bcb5f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <value/>
        <variable display_value="">fd88913b1b4ad8104ca7edf9bc4bcb57</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=d4181bf61b8294104ca7edf9bc4bcb8f"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>time_left_s</field>
        <id>d4181bf61b8294104ca7edf9bc4bcb8f</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_id>f988913b1b4ad8104ca7edf9bc4bcb5f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <table>var__m_sys_hub_action_output_d4181bf61b8294104ca7edf9bc4bcb8f</table>
        <value>{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].time_left_s}}</value>
    </sys_element_mapping>
    <sys_hub_step_instance action="delete_multiple" query="action=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>60181bf61b8294104ca7edf9bc4bcb9d</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:18</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>20181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:18</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//UPDATE ARMIS DEVICE (v0.2)
//MINIFIED -- FIND THE FULL VERSION IN THE FUNCTION_LIBRARY ACTION
function updateArmisDevice(e,i){var s=(new GlideDateTime).getNumericValue(),a={},t=new GlideRecord("x_fmcna_armis_inte_armis_device_table"),r=digest(JSON.stringify(e));a.digest=r,t.addQuery("armis_device_id",e.id),t.query();var n=0==t.getRowCount();n?t.initialize():t.next(),a.is_insert=n;var d,_=!0;if(n||t.getValue("digest")!=r||(_=!1),a.perform=_,a.digest_existing=t.getValue("digest"),_){if(t.access_switch=e.accessSwitch,t.armis_device_id=e.id,t.armis_risk_level=e.riskLevel,t.category=e.category,t.first_seen=new GlideDateTime(e.firstSeen),t.ip_address=e.ipAddress,t.last_seen=new GlideDateTime(e.lastSeen),t.mac_address=e.macAddress,t.manufacturer=e.manufacturer,t.model=e.model,t.name=e.name,t.os=e.operatingSystem,t.os_version=e.operatingSystemVersion,null!=e.sensor&amp;&amp;(t.sensor_name=e.sensor.name),null!=e.sensor&amp;&amp;(t.sensor_type=e.sensor.type),null!=e.site&amp;&amp;(t.site=e.site.name),null!=e.site&amp;&amp;(t.site_location=e.site.location),t.armis_tags=JSON.stringify(e.tags),t.visibility=e.visibility,t.digest=r,n?(d=t.insert(),a.action="insert"):(d=t.update(),a.action="update"),a.record=d,i){null==e.tags&amp;&amp;(e.tags=[]);var l=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");l.addQuery("armis_device",d),l.query();for(var m=[];l.next();){var c=l.getValue("armis_tag");includes(m,l.getValue("armis_tag"))?m.push(c):l.deleteRecord()}for(var o=0;o&lt;e.tags.length;o++)if(!includes(m,e.tags[o])){var g=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");g.initialize(),g.armis_device=d,g.armis_tag=e.tags[o],g.insert()}}}else a.action="no_update_needed";return a.time_delta=(new GlideDateTime).getNumericValue()-s,a}

// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//This occurs if a refresh pass maxes out. When this occurs, a few things need to happen:
// 1. The n counter resets to 0
// 2. The time since the last reset is measured
// 3. We adjust the query to make sure we go over recent data X times, where X is set by the config value.
//The reason we adjust the query is because we want to make sure that we give several chances for a device to get updated, since we don't have a fixed
//set of data, the set of data will fluctuate as devices drop off and show up between queries, so if we only did a single pass we would definitely miss devices.
function recalculateRefreshHours()
  {
    //We always want to be able to do several (let's say 5) refresh runs before an updated device drops off of the query parameters,
    //to maximize the chance that we'll capture all devices. We want a minimum of 1 hour.
    //This value may fluctuate up and down, but we don't want it to be more than 24 hours. 
    var debug = []
    var last_refresh_str = getCacheValue('getd_refresh_last_reset','datetime')
    var last_refresh_time = new GlideDateTime(last_refresh_str)
    debug.push("last_refresh_time=" + last_refresh_time)
    
    var num_refreshes_for_query = getConfigValue('getd_refresh_passes')
    if (num_refreshes_for_query == '') { num_refreshes_for_query = 5 }
    debug.push("num_refreshes_for_query=" + num_refreshes_for_query)
    
    var elapsed_hours_since_last_reset = (now() - last_refresh_time.getNumericValue()) / 3600000
    debug.push("elapsed_hours_since_last_reset=" + elapsed_hours_since_last_reset)

    var new_query_hours = Math.ceil(num_refreshes_for_query * elapsed_hours_since_last_reset)
    if (new_query_hours &gt; 24) { new_query_hours = 24 }
    if (new_query_hours &lt; 1) { new_query_hours = 1 } 
    debug.push("new_query_hours=" + new_query_hours)

    //Set the new cache query hours and reset the timer.
    setCacheValue('getd_refresh_calculated_hours',new_query_hours,'int')
    setCacheValue('getd_refresh_last_reset',new GlideDateTime(),'datetime')
    return debug
  }
    

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  //Escape early
  if(inputs.mode == 'test') { return }
  if(inputs.max_runtime_seconds &lt;= 0) { outputs.time_left_s = inputs.max_runtime_seconds; return }
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop, as well as return back the leftover time (so a refresh run can be executed after a master run)
  var start_time = now()
  function calculateTimeLeft(inputs) { return inputs.max_runtime_seconds - ( now() - start_time)/1000 }
  outputs.time_left_s = 0 //Just in case
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')  
  //If we have ### in the query (refresh query), make sure to use the cached value.
  if (inputs.mode == 'refresh')
  {
    var cached_hours = getCacheValue('getd_refresh_calculated_hours','int')
    if (cached_hours == '' || cached_hours == null) { cached_hours = 1 }
    armis_query = armis_query.replace("###",cached_hours)
  }
  debug.push("QUERY= '" + armis_query + "'.")
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var num_records_skipped = 0
  var total_mode_records = 0
  var end_script_report = "";
  var original_getd_n = 0
  var num_refresh_threshold = -20 //The number of devices to go back compared to the "next" value, in order to ensure that we get some degree of overlap and catch missed devices
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; calculateTimeLeft(inputs) &gt; 0)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    if(original_getd_n == 0) { original_getd_n = getd_n} // used for reporting.
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',armis_query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, but sandwich .execute() with a time check to document how long it took.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog({id: execution_id, endpoint: 'get_search', payload: inputs.query, response_code: response.getStatusCode(), 
         response_body: response.getBody(), start_time: glide_start_time, time_delta_ms: api_time_delta})
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          total_mode_records = data.total
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Note that if we're at the end of the list of devices, next will be null.
          //What happens next depends on the mode:
          // - if mode==master, we want to just keep the current "next" at the total so that when we check again, we're checking for NEW devices.
          // - if mode==refresh, we want to loop back around to 0 and start again when we've finished the refresh stack.
          if (data.next == null) {
            switch (inputs.mode) {
              case 'master':
                setCacheValue(cache_key, data.total, 'int')
                break;
              case 'refresh':
                setCacheValue(cache_key, 0, 'int');
                end_script_report += '[MAXED,RESET TO 0] '
                //In addition, when we reset the refresh, we need to do an extra step: update the refresh query.
                //recalculateRefreshHours()
                break;
            }
          }
          else { 
            //Update the cache so the next run starts where we left off.
            //Note that for refresh, we want to go a few steps backward so that we can try to catch any new devices that may have been added since we last checked.
            //This won't be perfect but should go a long way toward improving consistency.
            switch (inputs.mode) {
              case 'master': setCacheValue(cache_key, data.next, 'int');break
              case 'refresh': setCacheValue(cache_key, data.next + num_refresh_threshold, 'int');break
            }
          }
          
          //Set the total too, just for reference.
          setCacheValue("getd_" + inputs.mode + "_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              //I've abstracted this functionality into the function library since I'll be using it in more than one action, see FUNCTION_LIBRARY documentation
              var results = updateArmisDevice(entry,inputs.tags_to_table)
              debug.push(results.action + ":" + entry.id + " (" + entry.name + "). (" + results.time_delta + "ms)")
              switch (results.action) {
                case 'insert': num_records_inserted += 1; break
                case 'update': num_records_updated += 1; break
                case 'no_update_needed': num_records_skipped += 1; break
              }
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query in MASTER mode, that means we're maxed out. We don't even want to log anything, just drop the script.
            
            if (num_api_calls == 1 &amp;&amp; inputs.mode == 'master') {
              outputs.debug = "0 records, killed script."
              outputs.time_left_s = calculateTimeLeft(inputs)
              return
            }
            //If we're in master mode, we still want to report, but we're done looping.
            //(We do want to set a flag in the cache that the master is maxed out, so triggers can start processing.)
            if (inputs.mode == 'master')
            {
              setCacheValue('master_complete', 1, 'int')
              end_loop_early = true
            }
            //Any other case (i.e. refresh mode), we have just reset the counter to 0 and we want to keep looping.
          }
          
          //Document our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  //Percentage reporting, to get a good idea of how far we've come along.
  var start_pct = ( 100 * (original_getd_n) / total_mode_records ).toFixed(1)
  var done_pct = ( 100 * (parseInt(num_armis_devices) + parseInt(original_getd_n)) / total_mode_records ).toFixed(1)
  var percentage_insert = " (" + start_pct + "%-&gt;" + done_pct + "%)"
    
  //Build and store the action's results to the action log.
  end_script_report += "[" + inputs.mode.toUpperCase() + "]" + percentage_insert + " From n=" + original_getd_n + ", made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (inserted:" + num_records_inserted + ",updated:" + num_records_updated + "skipped:" + num_records_skipped + "). Time left:" + Math.round(calculateTimeLeft(inputs)) + "s."
  total_time = now() - start_time
  var flattened_debug = debug.join('\n')
  writeToActionLog(
    {id: execution_id, action_type: 'GETD_GetBulkArmisData', total_time: total_time, api_time: api_time, 
     heavy_processing_time: heavy_processing_time, report: end_script_report, debug_string: flattened_debug})
  
  outputs.debug = flattened_debug
  outputs.time_left_s = calculateTimeLeft(inputs)
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>ec181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <value/>
        <variable display_value="">ac181bf61b8294104ca7edf9bc4bcb9f</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>28181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>a8181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>bb9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>e8181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:21</sys_created_on>
        <sys_id>7b45ce6f1b02d0104be764e8bc4bcbed</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:21</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN24181bf61b8294104ca7edf9bc4bcbbf,ac181bf61b8294104ca7edf9bc4bcb9f,af45ce6f1b02d0104be764e8bc4bcb7b"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>mode</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>24181bf61b8294104ca7edf9bc4bcbbf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_runtime_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ac181bf61b8294104ca7edf9bc4bcb9f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>tags_to_table</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:20</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>af45ce6f1b02d0104be764e8bc4bcb7b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:20</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN7988913b1b4ad8104ca7edf9bc4bcb4c,e0181bf61b8294104ca7edf9bc4bcbd2"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=b85eb28c-f4f2-4a1e-8bb8-87dea0101b6a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>true</mandatory>
        <max_length>40</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7988913b1b4ad8104ca7edf9bc4bcb4c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e0181bf61b8294104ca7edf9bc4bcbd2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN0745ce6f1b02d0104be764e8bc4bcb29,18181bf61b8294104ca7edf9bc4bcb90,eab93bfe1b4694104ca7edf9bc4bcb63"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=boolean,uiTypeLabel=True/False,uiUniqueId=6bbf9627-cd6d-4499-9545-7eee9febe293</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="">boolean</internal_type>
        <label>tags_to_table</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>3</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:18</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0745ce6f1b02d0104be764e8bc4bcb29</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:18</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=choice,uiTypeLabel=Choice,uiUniqueId=d04d4a47-1548-4a43-bf7f-5ee652acf20f</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice>3</choice>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>master</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Choice">choice</internal_type>
        <label>mode</label>
        <mandatory>false</mandatory>
        <max_length>32</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>18181bf61b8294104ca7edf9bc4bcb90</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=c0ab8d17-e3ea-4ba2-ae2f-1a989f9aa85a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>30</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_runtime</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:29:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>eab93bfe1b4694104ca7edf9bc4bcb63</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:32</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_output action="delete_multiple" query="model=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT INfd88913b1b4ad8104ca7edf9bc4bcb57"/>
    <sys_hub_action_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=fa7ee6fc-64a5-4211-81f1-c572e469a138</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_prototype/>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_link/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_output_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>fd88913b1b4ad8104ca7edf9bc4bcb57</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_output>
    <sys_hub_step_instance action="delete_multiple" query="action=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData (v2.1)">d4181bf61b8294104ca7edf9bc4bcb8f</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>60181bf61b8294104ca7edf9bc4bcb9d</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:18</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>20181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-31 01:54:18</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//UPDATE ARMIS DEVICE (v0.2)
//MINIFIED -- FIND THE FULL VERSION IN THE FUNCTION_LIBRARY ACTION
function updateArmisDevice(e,i){var s=(new GlideDateTime).getNumericValue(),a={},t=new GlideRecord("x_fmcna_armis_inte_armis_device_table"),r=digest(JSON.stringify(e));a.digest=r,t.addQuery("armis_device_id",e.id),t.query();var n=0==t.getRowCount();n?t.initialize():t.next(),a.is_insert=n;var d,_=!0;if(n||t.getValue("digest")!=r||(_=!1),a.perform=_,a.digest_existing=t.getValue("digest"),_){if(t.access_switch=e.accessSwitch,t.armis_device_id=e.id,t.armis_risk_level=e.riskLevel,t.category=e.category,t.first_seen=new GlideDateTime(e.firstSeen),t.ip_address=e.ipAddress,t.last_seen=new GlideDateTime(e.lastSeen),t.mac_address=e.macAddress,t.manufacturer=e.manufacturer,t.model=e.model,t.name=e.name,t.os=e.operatingSystem,t.os_version=e.operatingSystemVersion,null!=e.sensor&amp;&amp;(t.sensor_name=e.sensor.name),null!=e.sensor&amp;&amp;(t.sensor_type=e.sensor.type),null!=e.site&amp;&amp;(t.site=e.site.name),null!=e.site&amp;&amp;(t.site_location=e.site.location),t.armis_tags=JSON.stringify(e.tags),t.visibility=e.visibility,t.digest=r,n?(d=t.insert(),a.action="insert"):(d=t.update(),a.action="update"),a.record=d,i){null==e.tags&amp;&amp;(e.tags=[]);var l=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");l.addQuery("armis_device",d),l.query();for(var m=[];l.next();){var c=l.getValue("armis_tag");includes(m,l.getValue("armis_tag"))?m.push(c):l.deleteRecord()}for(var o=0;o&lt;e.tags.length;o++)if(!includes(m,e.tags[o])){var g=new GlideRecord("x_fmcna_armis_inte_armis_device_tags");g.initialize(),g.armis_device=d,g.armis_tag=e.tags[o],g.insert()}}}else a.action="no_update_needed";return a.time_delta=(new GlideDateTime).getNumericValue()-s,a}

// *********************************
// *** ACTION-SPECIFIC FUNCTIONS ***
// *********************************

//This occurs if a refresh pass maxes out. When this occurs, a few things need to happen:
// 1. The n counter resets to 0
// 2. The time since the last reset is measured
// 3. We adjust the query to make sure we go over recent data X times, where X is set by the config value.
//The reason we adjust the query is because we want to make sure that we give several chances for a device to get updated, since we don't have a fixed
//set of data, the set of data will fluctuate as devices drop off and show up between queries, so if we only did a single pass we would definitely miss devices.
function recalculateRefreshHours()
  {
    //We always want to be able to do several (let's say 5) refresh runs before an updated device drops off of the query parameters,
    //to maximize the chance that we'll capture all devices. We want a minimum of 1 hour.
    //This value may fluctuate up and down, but we don't want it to be more than 24 hours. 
    var debug = []
    var last_refresh_str = getCacheValue('getd_refresh_last_reset','datetime')
    var last_refresh_time = new GlideDateTime(last_refresh_str)
    debug.push("last_refresh_time=" + last_refresh_time)
    
    var num_refreshes_for_query = getConfigValue('getd_refresh_passes')
    if (num_refreshes_for_query == '') { num_refreshes_for_query = 5 }
    debug.push("num_refreshes_for_query=" + num_refreshes_for_query)
    
    var elapsed_hours_since_last_reset = (now() - last_refresh_time.getNumericValue()) / 3600000
    debug.push("elapsed_hours_since_last_reset=" + elapsed_hours_since_last_reset)

    var new_query_hours = Math.ceil(num_refreshes_for_query * elapsed_hours_since_last_reset)
    if (new_query_hours &gt; 24) { new_query_hours = 24 }
    if (new_query_hours &lt; 1) { new_query_hours = 1 } 
    debug.push("new_query_hours=" + new_query_hours)

    //Set the new cache query hours and reset the timer.
    setCacheValue('getd_refresh_calculated_hours',new_query_hours,'int')
    setCacheValue('getd_refresh_last_reset',new GlideDateTime(),'datetime')
    return debug
  }
    

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  //Escape early
  if(inputs.mode == 'test') { return }
  if(inputs.max_runtime_seconds &lt;= 0) { outputs.time_left_s = inputs.max_runtime_seconds; return }
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop, as well as return back the leftover time (so a refresh run can be executed after a master run)
  var start_time = now()
  function calculateTimeLeft(inputs) { return inputs.max_runtime_seconds - ( now() - start_time)/1000 }
  outputs.time_left_s = 0 //Just in case
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')  
  //If we have ### in the query (refresh query), make sure to use the cached value.
  if (inputs.mode == 'refresh')
  {
    var cached_hours = getCacheValue('getd_refresh_calculated_hours','int')
    if (cached_hours == '' || cached_hours == null) { cached_hours = 1 }
    armis_query = armis_query.replace("###",cached_hours)
  }
  debug.push("QUERY= '" + armis_query + "'.")
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var num_records_skipped = 0
  var total_mode_records = 0
  var end_script_report = "";
  var original_getd_n = 0
  var num_refresh_threshold = -20 //The number of devices to go back compared to the "next" value, in order to ensure that we get some degree of overlap and catch missed devices
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; calculateTimeLeft(inputs) &gt; 0)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    if(original_getd_n == 0) { original_getd_n = getd_n} // used for reporting.
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',armis_query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, but sandwich .execute() with a time check to document how long it took.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog({id: execution_id, endpoint: 'get_search', payload: inputs.query, response_code: response.getStatusCode(), 
         response_body: response.getBody(), start_time: glide_start_time, time_delta_ms: api_time_delta})
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          total_mode_records = data.total
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Note that if we're at the end of the list of devices, next will be null.
          //What happens next depends on the mode:
          // - if mode==master, we want to just keep the current "next" at the total so that when we check again, we're checking for NEW devices.
          // - if mode==refresh, we want to loop back around to 0 and start again when we've finished the refresh stack.
          if (data.next == null) {
            switch (inputs.mode) {
              case 'master':
                setCacheValue(cache_key, data.total, 'int')
                break;
              case 'refresh':
                setCacheValue(cache_key, 0, 'int');
                end_script_report += '[MAXED,RESET TO 0] '
                //In addition, when we reset the refresh, we need to do an extra step: update the refresh query.
                //recalculateRefreshHours()
                break;
            }
          }
          else { 
            //Update the cache so the next run starts where we left off.
            //Note that for refresh, we want to go a few steps backward so that we can try to catch any new devices that may have been added since we last checked.
            //This won't be perfect but should go a long way toward improving consistency.
            switch (inputs.mode) {
              case 'master': setCacheValue(cache_key, data.next, 'int');break
              case 'refresh': setCacheValue(cache_key, data.next + num_refresh_threshold, 'int');break
            }
          }
          
          //Set the total too, just for reference.
          setCacheValue("getd_" + inputs.mode + "_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              //I've abstracted this functionality into the function library since I'll be using it in more than one action, see FUNCTION_LIBRARY documentation
              var results = updateArmisDevice(entry,inputs.tags_to_table)
              debug.push(results.action + ":" + entry.id + " (" + entry.name + "). (" + results.time_delta + "ms)")
              switch (results.action) {
                case 'insert': num_records_inserted += 1; break
                case 'update': num_records_updated += 1; break
                case 'no_update_needed': num_records_skipped += 1; break
              }
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query in MASTER mode, that means we're maxed out. We don't even want to log anything, just drop the script.
            
            if (num_api_calls == 1 &amp;&amp; inputs.mode == 'master') {
              outputs.debug = "0 records, killed script."
              outputs.time_left_s = calculateTimeLeft(inputs)
              return
            }
            //If we're in master mode, we still want to report, but we're done looping.
            //(We do want to set a flag in the cache that the master is maxed out, so triggers can start processing.)
            if (inputs.mode == 'master')
            {
              setCacheValue('master_complete', 1, 'int')
              end_loop_early = true
            }
            //Any other case (i.e. refresh mode), we have just reset the counter to 0 and we want to keep looping.
          }
          
          //Document our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  //Percentage reporting, to get a good idea of how far we've come along.
  var start_pct = ( 100 * (original_getd_n) / total_mode_records ).toFixed(1)
  var done_pct = ( 100 * (parseInt(num_armis_devices) + parseInt(original_getd_n)) / total_mode_records ).toFixed(1)
  var percentage_insert = " (" + start_pct + "%-&gt;" + done_pct + "%)"
    
  //Build and store the action's results to the action log.
  end_script_report += "[" + inputs.mode.toUpperCase() + "]" + percentage_insert + " From n=" + original_getd_n + ", made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (inserted:" + num_records_inserted + ",updated:" + num_records_updated + "skipped:" + num_records_skipped + "). Time left:" + Math.round(calculateTimeLeft(inputs)) + "s."
  total_time = now() - start_time
  var flattened_debug = debug.join('\n')
  writeToActionLog(
    {id: execution_id, action_type: 'GETD_GetBulkArmisData', total_time: total_time, api_time: api_time, 
     heavy_processing_time: heavy_processing_time, report: end_script_report, debug_string: flattened_debug})
  
  outputs.debug = flattened_debug
  outputs.time_left_s = calculateTimeLeft(inputs)
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>ec181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <value/>
        <variable display_value="">ac181bf61b8294104ca7edf9bc4bcb9f</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>28181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>a8181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>bb9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>e8181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:21</sys_created_on>
        <sys_id>7b45ce6f1b02d0104be764e8bc4bcbed</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:21</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN24181bf61b8294104ca7edf9bc4bcbbf,ac181bf61b8294104ca7edf9bc4bcb9f,af45ce6f1b02d0104be764e8bc4bcb7b"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>mode</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>24181bf61b8294104ca7edf9bc4bcbbf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_runtime_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ac181bf61b8294104ca7edf9bc4bcb9f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>tags_to_table</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:20</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>af45ce6f1b02d0104be764e8bc4bcb7b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:20</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN7988913b1b4ad8104ca7edf9bc4bcb4c,e0181bf61b8294104ca7edf9bc4bcbd2"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=b85eb28c-f4f2-4a1e-8bb8-87dea0101b6a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>time_left_s</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>time_left_s</label>
        <mandatory>true</mandatory>
        <max_length>40</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7988913b1b4ad8104ca7edf9bc4bcb4c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e0181bf61b8294104ca7edf9bc4bcbd2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN18181bf61b8294104ca7edf9bc4bcb9a,aeb93bfe1b4694104ca7edf9bc4bcb6a,d345ce6f1b02d0104be764e8bc4bcb2e"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>mode</element>
        <help/>
        <hint/>
        <label>mode</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>18181bf61b8294104ca7edf9bc4bcb9a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_runtime</element>
        <help/>
        <hint/>
        <label>max_runtime</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:29:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>aeb93bfe1b4694104ca7edf9bc4bcb6a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:32</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>tags_to_table</element>
        <help/>
        <hint/>
        <label>tags_to_table</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-22 23:56:19</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>d345ce6f1b02d0104be764e8bc4bcb2e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-22 23:56:19</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_choice action="delete_multiple" query="name=var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN98181bf61b8294104ca7edf9bc4bcb94,18181bf61b8294104ca7edf9bc4bcb95,6cb54a231b42d0104be764e8bc4bcb2d"/>
    <sys_choice field="mode" table="var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f">
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>master</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
            <sequence>0</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 22:02:29</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>98181bf61b8294104ca7edf9bc4bcb94</sys_id>
            <sys_mod_count>0</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 22:02:29</sys_updated_on>
            <value>master</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>refresh</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
            <sequence>1</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 22:02:29</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>18181bf61b8294104ca7edf9bc4bcb95</sys_id>
            <sys_mod_count>0</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 22:02:29</sys_updated_on>
            <value>refresh</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>test</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
            <sequence>2</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-22 23:58:02</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>6cb54a231b42d0104be764e8bc4bcb2d</sys_id>
            <sys_mod_count>0</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-22 23:58:02</sys_updated_on>
            <value>test</value>
        </sys_choice>
    </sys_choice>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_output_d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN3d88913b1b4ad8104ca7edf9bc4bcb5c"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>time_left_s</element>
        <help/>
        <hint/>
        <label>time_left_s</label>
        <language>en</language>
        <name>var__m_sys_hub_action_output_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-23 15:19:11</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3d88913b1b4ad8104ca7edf9bc4bcb5c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-23 15:19:11</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
</record_update>
