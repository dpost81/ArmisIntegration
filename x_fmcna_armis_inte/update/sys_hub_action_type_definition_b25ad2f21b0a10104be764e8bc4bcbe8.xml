<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>getd_getbulkarmisdata</internal_name>
        <label_cache>[{"name":"{{action.mode}}","label":"action➛mode","type":"action","ref":""},{"name":"{{action.max_runtime}}","label":"action➛max_runtime","type":"action","ref":""},{"name":"{{action.query}}","label":"action➛query","type":"action","ref":""},{"name":"{{action.tags_to_table}}","label":"action➛tags_to_table","type":"action","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug1}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug2}}","label":"step➛Script step➛debug2","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug3}}","label":"step➛Script step➛debug3","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <latest_snapshot>f9d5be8f1bc2d4104ca7edf9bc4bcb1c</latest_snapshot>
        <master_snapshot>d4181bf61b8294104ca7edf9bc4bcb8f</master_snapshot>
        <name>(v2.1) GETD_GetBulkArmisData</name>
        <natlang/>
        <outputs/>
        <state>draft</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 17:32:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>b25ad2f21b0a10104be764e8bc4bcbe8</sys_id>
        <sys_mod_count>75</sys_mod_count>
        <sys_name>(v2.1) GETD_GetBulkArmisData</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_b25ad2f21b0a10104be764e8bc4bcbe8</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="delete_multiple" query="document_key=b25ad2f21b0a10104be764e8bc4bcbe8"/>
    <sys_hub_step_instance action="delete_multiple" query="action=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>728266fe1b0a10104be764e8bc4bcb36</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3682e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3e82e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */


// *******************************
// **** FUNCTION LIBRARY v0.2 ****
// *******************************

//GENERATE A RANDOM ID
//There is no accessible ID for a particular action from within a script step, so this value is used
//to cross reference between the debug log, the API log, operation log, etc. to uniquely identify this execution.
function generateID()
{ 
  var ans = '';
  arr = '0123456789abcdefghijklmnopqrstuvwxyz'
  for (var i = 16; i &gt; 0; i--) { ans += arr[Math.floor(Math.random() * arr.length)] } 
  return ans; 
} 

//WRITE TO API LOG
//Logs the data we're sending to Armis via the API, as well as the response from Armis.
//Param template: writeToAPILog({id: , endpoint: , payload: , response_code: , response_body: , start_time: , time_delta_ms: })
//EXAMPLE: writeToAPILog({id: generateID(), endpoint: "test", payload: "Sample Payload", response_code: 200, response_body: "Sample Response", start_time: new GlideDateTime(), time_delta_ms: 1000})

//Params:
//[str] id - action ID set by generateID() above.
//[choice] endpoint - must be found on the choice table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=cd79b5a01b8e9c904ca7edf9bc4bcb04
//[str(2000)] payload - contains the text of the CSV or parameter being sent to Armis
//[int] response_code - integer (e.g. 200 or 207 for success) representing the result of the API call
//[str(2000)] response_body - text returned from Armis
//[GlideDateTime] start_time - set before the call
//[int] time_delta_ms - ending now() - starting now()
function writeToAPILog(p)
{
  var api_log_query = new GlideRecord('x_fmcna_armis_inte_armis_rest_api_log')
  api_log_query.setValue('execution_id',p.id)
  api_log_query.setValue('api_endpoint',p.endpoint)
  if (p.payload != null) { api_log_query.setValue('payload',p.payload.substring(0,1999)) }
  api_log_query.setValue('response_code',p.response_code)
  if (p.response_body != null) { api_log_query.setValue('response_body',p.response_body.substring(0,1999)) }
  api_log_query.setValue('query_submitted_at',p.start_time)
  api_log_query.setValue('query_response_time_ms',p.time_delta_ms)
  api_log_query.insert()
}

//WRITE TO ACTION LOG
//Writes to the table "Armis Action Log", which is intended to be a mechanism to monitor the performance of this integration's actions.
//Param template: writeToActionLog({id: , action_type: , total_time: , api_time: , heavy_processing_time: , report: , debug_string: })
//EXAMPLE: writeToActionLog({id: generateID(), action_type: "TEST", total_time: 100000, api_time: 50000, heavy_processing_time: 30000, report: "Test report string", debug_string: "Test debug string"})

//Params:
//[str] id - action ID set by generateID() above
//[choice] action_type - must be found on the choice table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=3f7a1b761b8e10104be764e8bc4bcb9f
//[int] total_time - the total time in milliseconds ( ending now() - starting now() )
//[int] api_time - time spent waiting for the API (measure immediately before and after a REST)
//[int] heavy_processing_time - time spent doing something CPU/SQL intensive, such as breaking down a JSON and storing X records (measure immediately before and after)
//[str(200)] report - human readable summary of what the action did
//[str(2000)] debug_string - store the debug string for later diagnosis
function writeToActionLog(p)
{
  var alog = new GlideRecord('x_fmcna_armis_inte_armis_action_log')
  alog.setValue('execution_id',p.id)
  alog.query()
  var insert = alog.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (insert) { alog.initialize(); alog.execution_id = p.id } else { alog.next() } 
  alog.setValue('action_type',p.action_type)
  alog.setValue('api_time',p.api_time)
  alog.setValue('heavy_processing_time',p.heavy_processing_time)
  alog.setValue('total_time',p.total_time)
  alog.setValue('report',p.report.substring(0,199))
  alog.setValue('debug_string',p.debug_string.substring(0,1999))
  if (insert) { return alog.insert() } else { return alog.update()}
}

//CONFIGURATION MANIPULATION
//Grabs a set value from the Armis Integration Configuration table. The config table hould be treated as read-only except in specific cases.
//NOTE: ALL CONFIG VALUES ARE STRINGS. If there is no such value, returns "".
//Keys must be from this table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=458563461bed90104be764e8bc4bcbf0
function getConfigValue(key)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_integration_configuration')
  q.addQuery('key',key); q.query()
  if (q.getRowCount() == 0) { return "" }
  q.next(); return q.getValue('value')
}

//CACHE MANIPULATION
//getCacheValue, setCacheValue, and deleteCacheValue manipulate the "Armis Integration Cache".
//This table is used to store ("global") variables used between actions.
//The table discretely separates string values, int values, and datetime values, so for the "type" of value, you need to specify via one of the following strings: ['str','int','datetime']

function getCacheValue(/*str*/ key, /* ['str','int','datetime'] */ type)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  if (cache_query.getRowCount() == 0) { return null }
  cache_query.next()
  switch (type) {
    case 'str': return cache_query.getValue('value_string')
    case 'int': return cache_query.getValue('value_int')
    case 'datetime': return cache_query.getValue('value_datetime')
    default: return null
  }
}

function setCacheValue(/*str*/ key, value, /* ['str','int','datetime'] */ type)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  var insert = cache_query.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (insert) { cache_query.initialize(); cache_query.key = key } else { cache_query.next() }
  switch (type) {
    case 'str': cache_query.value_string = value
    case 'int': cache_query.value_int = value
    case 'datetime': cache_query.value_datetime = value
  }
  if (insert) { cache_query.insert() } else { cache_query.update()}
}

function deleteCacheValue(/*str*/ key)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  cache_query.deleteMultiple()
}

//MISC. FUNCTIONS

// returns milliseconds since epoch
function now() { return new GlideDateTime().getNumericValue() } 
// alias to use inline for token retrieval
function getCurrentToken() { return getCacheValue('token','str')}
//Apparently .includes() is not present in this version of javascript. I'll make my own .includes().
function includes(test_arr,test_var) { for (var i=0;i&lt;test_arr.length;i++) { if (test_arr[i] == test_var) { return true } }; return false }


// ***************************************
// *** GETD_GetBulkArmisData FUNCTIONS ***
// ***************************************

//UPDATE ARMIS DEVICE (v0.2)
// Interprets the JSON block and stores its values into the Armis Device Table. Also stores tags in the Armis Tags table.
// Parameter j is a JSON hash that represents a single device as returned from Armis.
// Example starting JSON format: {"accessSwitch":null,"category":"Medical Therapeutic","firstSeen":"2020-05-12T04:34:00","id":100188,"ipAddress":"10.25.170.184","lastSeen":"2020-06-27T10:54:37.220709","macAddress":"00:0e:8e:5b:18:e6","manufacturer":"Fresenius Medical Care","model":"2008T G2 Pri","name":"FMC_74FE480AA906","operatingSystem":"Linux","operatingSystemVersion":null,"riskLevel":2,"sensor":{"name":"SPAN 9153 eth7 (ITG Datacenter Waltham 1 )","type":"SPAN"},"site":{"location":"Waltham, MA","name":"ITG Waltham Datacenter"},"tags":["FDA","ServiceNow Import Prod","FKC Region Northeast","FKC Pennsylvania","FKC","ServiceNow"],"type":"Cart","user":"","visibility":"Full"}
// Parameter tags_to_table should be true if the tags on the import should be pushed to the "Armis Tags" table. This may substantially increase the time it takes to process.

//Returns a hash with the following keys:
// action - 'insert' or 'update' depending on which action was taken
// time_delta - value in milliseconds for how long this operation took
// record - sys_id of the record that was inserted or updated
function updateArmisDevice(/*obj from json*/ j,/*bool*/ tags_to_table)
{
  var start_time = new GlideDateTime().getNumericValue()
  var return_vals = {}
  var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  //Does this already exist?
  device.addQuery('armis_device_id',j.id)
  device.query()

  //Flag as an insert if it exists, otherwise it's an update.
  var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (is_insert) { device.initialize() } else { device.next() }

  //Set all values
  device.access_switch = j.accessSwitch
  device.armis_device_id = j.id
  device.armis_risk_level = j.riskLevel
  device.category = j.category
  device.first_seen = new GlideDateTime(j.firstSeen)
  device.ip_address = j.ipAddress
  device.last_seen = new GlideDateTime(j.lastSeen)
  device.mac_address = j.macAddress
  device.manufacturer = j.manufacturer
  device.model = j.model
  device.name = j.name
  device.os = j.operatingSystem
  device.os_version = j.operatingSystemVersion
  device.sensor_name = j.sensor.name
  device.sensor_type = j.sensor.type
  device.site = j.site.name
  device.site_location = j.site.location
  device.armis_tags = JSON.stringify(j.tags)

  //Either insert or update.
  var device_record;
  if (is_insert) { device_record = device.insert(); return_vals.action = 'insert' } else { device_record = device.update(); return_vals.action = 'update' }
  return_vals.record = device_record
  
  //Process tags (if the flag is set to do so). Delete old tags, insert new tags.
  if (tags_to_table)
  {
    if (j.tags == null) { j.tags = [] }
    var q_tags = new GlideRecord('x_fmcna_armis_inte_armis_device_tags')
    q_tags.addQuery('armis_device',device_record)
    q_tags.query()

    //Only delete tags that aren't in the current tag list. Document the ones that are to use when inserting.
    var already_have_these_tags = []
    while (q_tags.next()) {
      var tag = q_tags.getValue('armis_tag')
      if (includes(already_have_these_tags,q_tags.getValue('armis_tag'))) { already_have_these_tags.push(tag) } else { q_tags.deleteRecord() }
    }

    //Insert new tags.
    for(var i=0;i&lt;j.tags.length;i++)
    {
      //Skip if we already have this tag.
      if ( includes(already_have_these_tags,j.tags[i]) ) { continue }
      var q_tag = new GlideRecord('x_fmcna_armis_inte_armis_device_tags')
      q_tag.initialize()
      q_tag.armis_device = device_record
      q_tag.armis_tag = j.tags[i]
      q_tag.insert()
    }
  }
  return_vals.time_delta = new GlideDateTime().getNumericValue() - start_time
  return return_vals
}

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop.
  var start_time = now()
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')
  //If this is a "refresh" run, we want to query yesterday's data. We have manually placed a placeholder in the string.
  var today = new GlideDateTime()
  var yesterday = today
  armis_query = armis_query.replace("###YYYY-MM-DD###"
  
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var end_script_report = "";
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; (now() - start_time)/1000 &lt; inputs.max_runtime_seconds)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',inputs.query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, track the API time.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog(execution_id,'get_search',inputs.query,response.getStatusCode(),response.getBody(),glide_start_time,api_time_delta)
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Update the cache. Note that if we're at the end of the list of devices, next will be null.
          //If this occurs, set n to the total, so that the next time we query we start there.
          if (data.next == null) { setCacheValue(cache_key, data.total, 'int') }
          else { setCacheValue(cache_key, data.next, 'int') }
          
          //Set the total too, just for reference.
          setCacheValue("armis_device_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
              //Does this already exist?
              device.addQuery('armis_device_id',entry.id)
              device.query()
              
              //Flag as an insert if it exists, otherwise it's an update.
              var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
              if (is_insert) { device.initialize() } else { device.next() }
              
              //Set all values
              device.access_switch = entry.accessSwitch
              device.armis_device_id = entry.id
              device.armis_risk_level = entry.riskLevel
              device.armis_tags = JSON.stringify(entry.tags)
              device.category = entry.category
              device.first_seen = new GlideDateTime(entry.firstSeen)
              device.ip_address = entry.ipAddress
              device.last_seen = new GlideDateTime(entry.lastSeen)
              device.mac_address = entry.macAddress
              device.manufacturer = entry.manufacturer
              device.model = entry.model
              device.name = entry.name
              device.os = entry.operatingSystem
              device.os_version = entry.operatingSystemVersion
              device.sensor_name = entry.sensor.name
              device.sensor_type = entry.sensor.type
              device.site = entry.site.name
              device.site_location = entry.site.location
              
              //Either insert or update.
              if (is_insert) { device.insert(); num_records_inserted +=1 } else { device.update(); num_records_updated += 1}
              
              debug.push("Table record " + entry.id + " (" + entry.name + ") updated. (insert=" + is_insert + ")")
              
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query, that means we're maxed out. We don't even want to log anything, just drop the script.
            if (num_api_calls == 1) { outputs.debug = "0 records, killed script."; return }
            //Otherwise, we're done looping.
            end_loop_early = true
          }
          
          //Record our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  end_script_report += "[" + inputs.mode.toUpperCase() + "] Made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (" + num_records_inserted + " inserted, " + num_records_updated + " updated)."
  total_time = now() - start_time
  writeToActionLog(execution_id,'GETD_GetBulkArmisData', total_time,api_time,heavy_processing_time,end_script_report)
  
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>9f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <value/>
        <variable display_value="">3a794fb61b0e10104be764e8bc4bcbd7</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>fa82e6321b4a10104be764e8bc4bcbe6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>1f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:18:25</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>5b798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:47</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:13</sys_created_on>
        <sys_id>139744031bc694104ca7edf9bc4bcb89</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:22</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>b282e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:10</sys_created_on>
        <sys_id>e05c98971bcad4104ca7edf9bc4bcb7a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a794fb61b0e10104be764e8bc4bcbd7,985c98971bcad4104ca7edf9bc4bcb62,f2794fb61b0e10104be764e8bc4bcbdc"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a794fb61b0e10104be764e8bc4bcbd7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>985c98971bcad4104ca7edf9bc4bcb62</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:46</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f2794fb61b0e10104be764e8bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:46</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a82e6321b4a10104be764e8bc4bcba5"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,co_type_name=FD7a794fb6de0e1010c7a6c28ff79e79e0,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a82e6321b4a10104be764e8bc4bcba5</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 21:28:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN62794fb61b0e10104be764e8bc4bcbc7,6ed67bfa1b4694104ca7edf9bc4bcb82,b34c98571bcad4104ca7edf9bc4bcbc1"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=choice,uiTypeLabel=Choice,uiUniqueId=d04d4a47-1548-4a43-bf7f-5ee652acf20f</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice>3</choice>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>master</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Choice">choice</internal_type>
        <label>mode</label>
        <mandatory>false</mandatory>
        <max_length>32</max_length>
        <model display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>62794fb61b0e10104be764e8bc4bcbc7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=c0ab8d17-e3ea-4ba2-ae2f-1a989f9aa85a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>30</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_runtime</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:16:59</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>6ed67bfa1b4694104ca7edf9bc4bcb82</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=boolean,uiTypeLabel=True/False,uiUniqueId=6bbf9627-cd6d-4499-9545-7eee9febe293</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="">boolean</internal_type>
        <label>tags_to_table</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</model>
        <model_id>b25ad2f21b0a10104be764e8bc4bcbe8</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <next_element/>
        <order>3</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b34c98571bcad4104ca7edf9bc4bcbc1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_step_instance action="delete_multiple" query="action=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>728266fe1b0a10104be764e8bc4bcb36</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3682e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>3e82e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <value>  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */


// *******************************
// **** FUNCTION LIBRARY v0.2 ****
// *******************************

//GENERATE A RANDOM ID
//There is no accessible ID for a particular action from within a script step, so this value is used
//to cross reference between the debug log, the API log, operation log, etc. to uniquely identify this execution.
function generateID()
{ 
  var ans = '';
  arr = '0123456789abcdefghijklmnopqrstuvwxyz'
  for (var i = 16; i &gt; 0; i--) { ans += arr[Math.floor(Math.random() * arr.length)] } 
  return ans; 
} 

//WRITE TO API LOG
//Logs the data we're sending to Armis via the API, as well as the response from Armis.
//Param template: writeToAPILog({id: , endpoint: , payload: , response_code: , response_body: , start_time: , time_delta_ms: })
//EXAMPLE: writeToAPILog({id: generateID(), endpoint: "test", payload: "Sample Payload", response_code: 200, response_body: "Sample Response", start_time: new GlideDateTime(), time_delta_ms: 1000})

//Params:
//[str] id - action ID set by generateID() above.
//[choice] endpoint - must be found on the choice table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=cd79b5a01b8e9c904ca7edf9bc4bcb04
//[str(2000)] payload - contains the text of the CSV or parameter being sent to Armis
//[int] response_code - integer (e.g. 200 or 207 for success) representing the result of the API call
//[str(2000)] response_body - text returned from Armis
//[GlideDateTime] start_time - set before the call
//[int] time_delta_ms - ending now() - starting now()
function writeToAPILog(p)
{
  var api_log_query = new GlideRecord('x_fmcna_armis_inte_armis_rest_api_log')
  api_log_query.setValue('execution_id',p.id)
  api_log_query.setValue('api_endpoint',p.endpoint)
  if (p.payload != null) { api_log_query.setValue('payload',p.payload.substring(0,1999)) }
  api_log_query.setValue('response_code',p.response_code)
  if (p.response_body != null) { api_log_query.setValue('response_body',p.response_body.substring(0,1999)) }
  api_log_query.setValue('query_submitted_at',p.start_time)
  api_log_query.setValue('query_response_time_ms',p.time_delta_ms)
  api_log_query.insert()
}

//WRITE TO ACTION LOG
//Writes to the table "Armis Action Log", which is intended to be a mechanism to monitor the performance of this integration's actions.
//Param template: writeToActionLog({id: , action_type: , total_time: , api_time: , heavy_processing_time: , report: , debug_string: })
//EXAMPLE: writeToActionLog({id: generateID(), action_type: "TEST", total_time: 100000, api_time: 50000, heavy_processing_time: 30000, report: "Test report string", debug_string: "Test debug string"})

//Params:
//[str] id - action ID set by generateID() above
//[choice] action_type - must be found on the choice table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=3f7a1b761b8e10104be764e8bc4bcb9f
//[int] total_time - the total time in milliseconds ( ending now() - starting now() )
//[int] api_time - time spent waiting for the API (measure immediately before and after a REST)
//[int] heavy_processing_time - time spent doing something CPU/SQL intensive, such as breaking down a JSON and storing X records (measure immediately before and after)
//[str(200)] report - human readable summary of what the action did
//[str(2000)] debug_string - store the debug string for later diagnosis
function writeToActionLog(p)
{
  var alog = new GlideRecord('x_fmcna_armis_inte_armis_action_log')
  alog.setValue('execution_id',p.id)
  alog.query()
  var insert = alog.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (insert) { alog.initialize(); alog.execution_id = p.id } else { alog.next() } 
  alog.setValue('action_type',p.action_type)
  alog.setValue('api_time',p.api_time)
  alog.setValue('heavy_processing_time',p.heavy_processing_time)
  alog.setValue('total_time',p.total_time)
  alog.setValue('report',p.report.substring(0,199))
  alog.setValue('debug_string',p.debug_string.substring(0,1999))
  if (insert) { return alog.insert() } else { return alog.update()}
}

//CONFIGURATION MANIPULATION
//Grabs a set value from the Armis Integration Configuration table. The config table hould be treated as read-only except in specific cases.
//NOTE: ALL CONFIG VALUES ARE STRINGS. If there is no such value, returns "".
//Keys must be from this table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=458563461bed90104be764e8bc4bcbf0
function getConfigValue(key)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_integration_configuration')
  q.addQuery('key',key); q.query()
  if (q.getRowCount() == 0) { return "" }
  q.next(); return q.getValue('value')
}

//CACHE MANIPULATION
//getCacheValue, setCacheValue, and deleteCacheValue manipulate the "Armis Integration Cache".
//This table is used to store ("global") variables used between actions.
//The table discretely separates string values, int values, and datetime values, so for the "type" of value, you need to specify via one of the following strings: ['str','int','datetime']

function getCacheValue(/*str*/ key, /* ['str','int','datetime'] */ type)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  if (cache_query.getRowCount() == 0) { return null }
  cache_query.next()
  switch (type) {
    case 'str': return cache_query.getValue('value_string')
    case 'int': return cache_query.getValue('value_int')
    case 'datetime': return cache_query.getValue('value_datetime')
    default: return null
  }
}

function setCacheValue(/*str*/ key, value, /* ['str','int','datetime'] */ type)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  var insert = cache_query.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (insert) { cache_query.initialize(); cache_query.key = key } else { cache_query.next() }
  switch (type) {
    case 'str': cache_query.value_string = value
    case 'int': cache_query.value_int = value
    case 'datetime': cache_query.value_datetime = value
  }
  if (insert) { cache_query.insert() } else { cache_query.update()}
}

function deleteCacheValue(/*str*/ key)
{
  var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
  cache_query.addQuery('key',key)
  cache_query.query()
  cache_query.deleteMultiple()
}

//MISC. FUNCTIONS

// returns milliseconds since epoch
function now() { return new GlideDateTime().getNumericValue() } 
// alias to use inline for token retrieval
function getCurrentToken() { return getCacheValue('token','str')}
//Apparently .includes() is not present in this version of javascript. I'll make my own .includes().
function includes(test_arr,test_var) { for (var i=0;i&lt;test_arr.length;i++) { if (test_arr[i] == test_var) { return true } }; return false }


// ***************************************
// *** GETD_GetBulkArmisData FUNCTIONS ***
// ***************************************

//UPDATE ARMIS DEVICE (v0.2)
// Interprets the JSON block and stores its values into the Armis Device Table. Also stores tags in the Armis Tags table.
// Parameter j is a JSON hash that represents a single device as returned from Armis.
// Example starting JSON format: {"accessSwitch":null,"category":"Medical Therapeutic","firstSeen":"2020-05-12T04:34:00","id":100188,"ipAddress":"10.25.170.184","lastSeen":"2020-06-27T10:54:37.220709","macAddress":"00:0e:8e:5b:18:e6","manufacturer":"Fresenius Medical Care","model":"2008T G2 Pri","name":"FMC_74FE480AA906","operatingSystem":"Linux","operatingSystemVersion":null,"riskLevel":2,"sensor":{"name":"SPAN 9153 eth7 (ITG Datacenter Waltham 1 )","type":"SPAN"},"site":{"location":"Waltham, MA","name":"ITG Waltham Datacenter"},"tags":["FDA","ServiceNow Import Prod","FKC Region Northeast","FKC Pennsylvania","FKC","ServiceNow"],"type":"Cart","user":"","visibility":"Full"}
// Parameter tags_to_table should be true if the tags on the import should be pushed to the "Armis Tags" table. This may substantially increase the time it takes to process.

//Returns a hash with the following keys:
// action - 'insert' or 'update' depending on which action was taken
// time_delta - value in milliseconds for how long this operation took
// record - sys_id of the record that was inserted or updated
function updateArmisDevice(/*obj from json*/ j,/*bool*/ tags_to_table)
{
  var start_time = new GlideDateTime().getNumericValue()
  var return_vals = {}
  var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  //Does this already exist?
  device.addQuery('armis_device_id',j.id)
  device.query()

  //Flag as an insert if it exists, otherwise it's an update.
  var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
  if (is_insert) { device.initialize() } else { device.next() }

  //Set all values
  device.access_switch = j.accessSwitch
  device.armis_device_id = j.id
  device.armis_risk_level = j.riskLevel
  device.category = j.category
  device.first_seen = new GlideDateTime(j.firstSeen)
  device.ip_address = j.ipAddress
  device.last_seen = new GlideDateTime(j.lastSeen)
  device.mac_address = j.macAddress
  device.manufacturer = j.manufacturer
  device.model = j.model
  device.name = j.name
  device.os = j.operatingSystem
  device.os_version = j.operatingSystemVersion
  device.sensor_name = j.sensor.name
  device.sensor_type = j.sensor.type
  device.site = j.site.name
  device.site_location = j.site.location
  device.armis_tags = JSON.stringify(j.tags)

  //Either insert or update.
  var device_record;
  if (is_insert) { device_record = device.insert(); return_vals.action = 'insert' } else { device_record = device.update(); return_vals.action = 'update' }
  return_vals.record = device_record
  
  //Process tags (if the flag is set to do so). Delete old tags, insert new tags.
  if (tags_to_table)
  {
    if (j.tags == null) { j.tags = [] }
    var q_tags = new GlideRecord('x_fmcna_armis_inte_armis_device_tags')
    q_tags.addQuery('armis_device',device_record)
    q_tags.query()

    //Only delete tags that aren't in the current tag list. Document the ones that are to use when inserting.
    var already_have_these_tags = []
    while (q_tags.next()) {
      var tag = q_tags.getValue('armis_tag')
      if (includes(already_have_these_tags,q_tags.getValue('armis_tag'))) { already_have_these_tags.push(tag) } else { q_tags.deleteRecord() }
    }

    //Insert new tags.
    for(var i=0;i&lt;j.tags.length;i++)
    {
      //Skip if we already have this tag.
      if ( includes(already_have_these_tags,j.tags[i]) ) { continue }
      var q_tag = new GlideRecord('x_fmcna_armis_inte_armis_device_tags')
      q_tag.initialize()
      q_tag.armis_device = device_record
      q_tag.armis_tag = j.tags[i]
      q_tag.insert()
    }
  }
  return_vals.time_delta = new GlideDateTime().getNumericValue() - start_time
  return return_vals
}

// **********************
// *** IMPLEMENTATION ***
// **********************


(function execute(inputs, outputs) {

  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop.
  var start_time = now()
  
  //Set up query
  var armis_query = getConfigValue('armis_' + inputs.mode + '_query')
  //If this is a "refresh" run, we want to query yesterday's data. We have manually placed a placeholder in the string.
  var today = new GlideDateTime()
  var yesterday = today
  armis_query = armis_query.replace("###YYYY-MM-DD###"
  
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var end_script_report = "";
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; (now() - start_time)/1000 &lt; inputs.max_runtime_seconds)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',inputs.query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, track the API time.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog(execution_id,'get_search',inputs.query,response.getStatusCode(),response.getBody(),glide_start_time,api_time_delta)
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Update the cache. Note that if we're at the end of the list of devices, next will be null.
          //If this occurs, set n to the total, so that the next time we query we start there.
          if (data.next == null) { setCacheValue(cache_key, data.total, 'int') }
          else { setCacheValue(cache_key, data.next, 'int') }
          
          //Set the total too, just for reference.
          setCacheValue("armis_device_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
              //Does this already exist?
              device.addQuery('armis_device_id',entry.id)
              device.query()
              
              //Flag as an insert if it exists, otherwise it's an update.
              var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
              if (is_insert) { device.initialize() } else { device.next() }
              
              //Set all values
              device.access_switch = entry.accessSwitch
              device.armis_device_id = entry.id
              device.armis_risk_level = entry.riskLevel
              device.armis_tags = JSON.stringify(entry.tags)
              device.category = entry.category
              device.first_seen = new GlideDateTime(entry.firstSeen)
              device.ip_address = entry.ipAddress
              device.last_seen = new GlideDateTime(entry.lastSeen)
              device.mac_address = entry.macAddress
              device.manufacturer = entry.manufacturer
              device.model = entry.model
              device.name = entry.name
              device.os = entry.operatingSystem
              device.os_version = entry.operatingSystemVersion
              device.sensor_name = entry.sensor.name
              device.sensor_type = entry.sensor.type
              device.site = entry.site.name
              device.site_location = entry.site.location
              
              //Either insert or update.
              if (is_insert) { device.insert(); num_records_inserted +=1 } else { device.update(); num_records_updated += 1}
              
              debug.push("Table record " + entry.id + " (" + entry.name + ") updated. (insert=" + is_insert + ")")
              
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query, that means we're maxed out. We don't even want to log anything, just drop the script.
            if (num_api_calls == 1) { outputs.debug = "0 records, killed script."; return }
            //Otherwise, we're done looping.
            end_loop_early = true
          }
          
          //Record our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  end_script_report += "[" + inputs.mode.toUpperCase() + "] Made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (" + num_records_inserted + " inserted, " + num_records_updated + " updated)."
  total_time = now() - start_time
  writeToActionLog(execution_id,'GETD_GetBulkArmisData', total_time,api_time,heavy_processing_time,end_script_report)
  
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>728266fe1b0a10104be764e8bc4bcb36</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>9f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <value/>
        <variable display_value="">3a794fb61b0e10104be764e8bc4bcbd7</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=728266fe1b0a10104be764e8bc4bcb36"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>fa82e6321b4a10104be764e8bc4bcbe6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>1f798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:18:25</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:47</sys_created_on>
        <sys_id>5b798fb61b0e10104be764e8bc4bcb42</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:47</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:13</sys_created_on>
        <sys_id>139744031bc694104ca7edf9bc4bcb89</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:22</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:39</sys_created_on>
        <sys_id>b282e6321b4a10104be764e8bc4bcbe7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 18:08:39</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>tags_to_table</field>
        <id>728266fe1b0a10104be764e8bc4bcb36</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:10</sys_created_on>
        <sys_id>e05c98971bcad4104ca7edf9bc4bcb7a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:10</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</table>
        <value>{{action.tags_to_table}}</value>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a794fb61b0e10104be764e8bc4bcbd7,985c98971bcad4104ca7edf9bc4bcb62,f2794fb61b0e10104be764e8bc4bcbdc"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a794fb61b0e10104be764e8bc4bcbd7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>tags_to_table</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>985c98971bcad4104ca7edf9bc4bcb62</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:09</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label/>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:46</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f2794fb61b0e10104be764e8bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:46</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=728266fe1b0a10104be764e8bc4bcb36^sys_idNOT IN3a82e6321b4a10104be764e8bc4bcba5"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,co_type_name=FD7a794fb6de0e1010c7a6c28ff79e79e0,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">728266fe1b0a10104be764e8bc4bcb36</model>
        <model_id>728266fe1b0a10104be764e8bc4bcb36</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_728266fe1b0a10104be764e8bc4bcb36</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 18:08:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3a82e6321b4a10104be764e8bc4bcba5</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 21:28:07</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN22d67bfa1b4694104ca7edf9bc4bcb8a,ea794fb61b0e10104be764e8bc4bcbd0,ff4c98971bcad4104ca7edf9bc4bcb22"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_runtime</element>
        <help/>
        <hint/>
        <label>max_runtime</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:16:59</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>22d67bfa1b4694104ca7edf9bc4bcb8a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:16:59</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>mode</element>
        <help/>
        <hint/>
        <label>mode</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 20:58:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ea794fb61b0e10104be764e8bc4bcbd0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 20:58:45</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>tags_to_table</element>
        <help/>
        <hint>Should we populate the Armis Tags table? (May substantially increase time, more SQL queries.)</hint>
        <label>tags_to_table</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 21:39:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ff4c98971bcad4104ca7edf9bc4bcb22</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 21:39:08</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_choice action="delete_multiple" query="name=var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT IN62794fb61b0e10104be764e8bc4bcbcb,ee794fb61b0e10104be764e8bc4bcbcb"/>
    <sys_choice field="mode" table="var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8">
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>master</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
            <sequence>0</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 20:58:45</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>62794fb61b0e10104be764e8bc4bcbcb</sys_id>
            <sys_mod_count>1</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 21:25:13</sys_updated_on>
            <value>master</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>refresh</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_b25ad2f21b0a10104be764e8bc4bcbe8</name>
            <sequence>1</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 20:58:45</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>ee794fb61b0e10104be764e8bc4bcbcb</sys_id>
            <sys_mod_count>1</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 21:25:13</sys_updated_on>
            <value>refresh</value>
        </sys_choice>
    </sys_choice>
    <sys_hub_action_plan action="delete_multiple" query="action_id=b25ad2f21b0a10104be764e8bc4bcbe8^sys_idNOT INf8185bf61b8294104ca7edf9bc4bcb1d"/>
    <sys_hub_action_plan action="INSERT_OR_UPDATE">
        <action_id display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</action_id>
        <plan>{"persistor":{"@class":".ChunkingPlanPersistor","table":"sys_hub_action_plan","id":"f8185bf61b8294104ca7edf9bc4bcb1d","name":"plan"}}</plan>
        <snapshot>f9d5be8f1bc2d4104ca7edf9bc4bcb1c</snapshot>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>f8185bf61b8294104ca7edf9bc4bcb1d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_overrides/>
        <sys_scope/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 14:11:30</sys_updated_on>
    </sys_hub_action_plan>
    <sys_hub_action_type_snapshot action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <internal_name>getd_getbulkarmisdata</internal_name>
        <label_cache>[{"name":"{{action.mode}}","label":"action➛mode","type":"action","ref":""},{"name":"{{action.max_runtime}}","label":"action➛max_runtime","type":"action","ref":""},{"name":"{{action.query}}","label":"action➛query","type":"action","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug1}}","label":"step➛Script step➛debug","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug2}}","label":"step➛Script step➛debug2","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug3}}","label":"step➛Script step➛debug3","type":"step","ref":""},{"name":"{{step[96e130a7-3355-46a3-a045-f81383e2f7e3].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <master>true</master>
        <name>GETD_GetBulkArmisData</name>
        <natlang/>
        <outputs/>
        <parent_action display_value="(v2.1) GETD_GetBulkArmisData">b25ad2f21b0a10104be764e8bc4bcbe8</parent_action>
        <sys_class_name>sys_hub_action_type_snapshot</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>d4181bf61b8294104ca7edf9bc4bcb8f</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name/>
        <sys_overrides/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:25</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_snapshot>
    <sys_variable_value action="delete_multiple" query="document_key=d4181bf61b8294104ca7edf9bc4bcb8f"/>
    <sys_hub_step_instance action="delete_multiple" query="action=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData">d4181bf61b8294104ca7edf9bc4bcb8f</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>60181bf61b8294104ca7edf9bc4bcb9d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 14:11:28</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>20181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 14:11:28</sys_updated_on>
        <value>                  // **************************
                  // **** FUNCTION LIBRARY ****
                  // **************************

                  //GENERATE A RANDOM ID
                  //There is no accessible ID for a particular action from within a script step, so this value is used
                  //to cross reference between the debug log, the API log, operation log, etc. to uniquely identify this execution.
                  function generateID()
                  { 
                    var ans = '';
                    arr = '0123456789abcdefghijklmnopqrstuvwxyz'
                    for (var i = 16; i &gt; 0; i--) { ans += arr[Math.floor(Math.random() * arr.length)] } 
                    return ans; 
                  } 

                  //WRITE TO API LOG
                  //Logs the data we're sending to Armis via the API, as well as the response from Armis.
                  //Endpoint must be found on this table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=cd79b5a01b8e9c904ca7edf9bc4bcb04
                  function writeToAPILog(/*str*/ id,/*choice*/ endpoint, /*str*/ payload, /*int*/ response_code, /*str*/ response_body, /*GlideDateTime*/ start_time, /*int*/ time_delta_ms)
                  {
                    var api_log_query = new GlideRecord('x_fmcna_armis_inte_armis_rest_api_log')
                    api_log_query.setValue('execution_id',id)
                    api_log_query.setValue('api_endpoint',endpoint)
                    if (payload != null) { api_log_query.setValue('payload',payload.substring(0,1900)) }
                    api_log_query.setValue('response_code',response_code)
                    if (response_body != null) { api_log_query.setValue('response_body',response_body.substring(0,1900)) }
                    api_log_query.setValue('query_submitted_at',start_time)
                    api_log_query.setValue('query_response_time_ms',time_delta_ms)
                    api_log_query.insert()
                  }

                  //WRITE TO DEBUG LOG
                  function writeToDebugLog(/*str*/ id, /*str*/ text)
                  {
                    var log_query = new GlideRecord('x_fmcna_armis_inte_armis_debug_log')
                    log_query.setValue('execution_id',id)
                    log_query.setValue('log_text',text)
                    log_query.insert()
                  }
  
                  //WRITE TO ACTION LOG
                  //action_type must be chosen from:  https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=3f7a1b761b8e10104be764e8bc4bcb9f
                  function writeToActionLog(/*str*/ id, /*choice*/ action_type, /*int*/ total_time, /*int*/ api_time, /*int*/ heavy_processing_time, /*str*/ report)
                  {
                    var alog = new GlideRecord('x_fmcna_armis_inte_armis_action_log')
                    alog.setValue('execution_id',id)
                    alog.setValue('action_type',action_type)
                    alog.setValue('api_time',api_time)
                    alog.setValue('heavy_processing_time',heavy_processing_time)
                    alog.setValue('total_time',total_time)
                    alog.setValue('report',report)
                    alog.insert()
                  }

                  //GET CACHE VALUE
                  function getCacheValue(/*str*/ key, /* ['str','int','datetime'] */ type)
                  {
                    var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
                    cache_query.addQuery('key',key)
                    cache_query.query()
                    if (cache_query.getRowCount() == 0) { return null }
                    cache_query.next()
                    switch (type) {
                      case 'str': return cache_query.getValue('value_string')
                      case 'int': return cache_query.getValue('value_int')
                      case 'datetime': return cache_query.getValue('value_datetime')
                      default: return null
                    }
                  }

                  //SET CACHE VALUE
                  function setCacheValue(/*str*/ key, value, /* ['str','int','datetime'] */ type)
                  {
                    var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
                    cache_query.addQuery('key',key)
                    cache_query.query()
                    var force_insert = cache_query.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
                    if (force_insert) { cache_query.initialize(); cache_query.key = key } else { cache_query.next() }
                    switch (type) {
                      case 'str': cache_query.value_string = value
                      case 'int': cache_query.value_int = value
                      case 'datetime': cache_query.value_datetime = value
                    }
                    if (force_insert) { cache_query.insert() } else { cache_query.update()}
                  }

                  //MISC
                  function now() { return new GlideDateTime().getNumericValue() }
                  function getCurrentToken() { return getCacheValue('token','str')}



(function execute(inputs, outputs) {
  
  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

                  

  // ***************************************
  // *** GETD_GetBulkArmisData FUNCTIONS ***
  // ***************************************
  
  
  // **********************
  // *** IMPLEMENTATION ***
  // **********************
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop.
  var start_time = now()
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var end_script_report = "";
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; (now() - start_time)/1000 &lt; inputs.max_runtime_seconds)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',inputs.query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, track the API time.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog(execution_id,'get_search',inputs.query,response.getStatusCode(),response.getBody(),glide_start_time,api_time_delta)
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Update the cache. Note that if we're at the end of the list of devices, next will be null.
          //If this occurs, set n to the total, so that the next time we query we start there.
          if (data.next == null) { setCacheValue(cache_key, data.total, 'int') }
          else { setCacheValue(cache_key, data.next, 'int') }
          
          //Set the total too, just for reference.
          setCacheValue("armis_device_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
              //Does this already exist?
              device.addQuery('armis_device_id',entry.id)
              device.query()
              
              //Flag as an insert if it exists, otherwise it's an update.
              var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
              if (is_insert) { device.initialize() } else { device.next() }
              
              //Set all values
              device.access_switch = entry.accessSwitch
              device.armis_device_id = entry.id
              device.armis_risk_level = entry.riskLevel
              device.armis_tags = JSON.stringify(entry.tags)
              device.category = entry.category
              device.first_seen = new GlideDateTime(entry.firstSeen)
              device.ip_address = entry.ipAddress
              device.last_seen = new GlideDateTime(entry.lastSeen)
              device.mac_address = entry.macAddress
              device.manufacturer = entry.manufacturer
              device.model = entry.model
              device.name = entry.name
              device.os = entry.operatingSystem
              device.os_version = entry.operatingSystemVersion
              device.sensor_name = entry.sensor.name
              device.sensor_type = entry.sensor.type
              device.site = entry.site.name
              device.site_location = entry.site.location
              
              //Either insert or update.
              if (is_insert) { device.insert(); num_records_inserted +=1 } else { device.update(); num_records_updated += 1}
              
              debug.push("Table record " + entry.id + " (" + entry.name + ") updated. (insert=" + is_insert + ")")
              
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query, that means we're maxed out. We don't even want to log anything, just drop the script.
            if (num_api_calls == 1) { outputs.debug = "0 records, killed script."; return }
            //Otherwise, we're done looping.
            end_loop_early = true
          }
          
          //Record our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  end_script_report += "[" + inputs.mode.toUpperCase() + "] Made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (" + num_records_inserted + " inserted, " + num_records_updated + " updated)."
  total_time = now() - start_time
  writeToActionLog(execution_id,'GETD_GetBulkArmisData', total_time,api_time,heavy_processing_time,end_script_report)
  
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>3f9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <value/>
        <variable display_value="">3b9784031bc694104ca7edf9bc4bcb3c</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>ec181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <value/>
        <variable display_value="">ac181bf61b8294104ca7edf9bc4bcb9f</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>28181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>a8181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>bb9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>e8181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN24181bf61b8294104ca7edf9bc4bcbbf,3b9784031bc694104ca7edf9bc4bcb3c,ac181bf61b8294104ca7edf9bc4bcb9f"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>mode</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>24181bf61b8294104ca7edf9bc4bcbbf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>query</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>query</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3b9784031bc694104ca7edf9bc4bcb3c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:30:15</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_runtime_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ac181bf61b8294104ca7edf9bc4bcb9f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT INe0181bf61b8294104ca7edf9bc4bcbd2"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e0181bf61b8294104ca7edf9bc4bcbd2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_input action="delete_multiple" query="model=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN18181bf61b8294104ca7edf9bc4bcb90,abc880831bc694104ca7edf9bc4bcb38,eab93bfe1b4694104ca7edf9bc4bcb63"/>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=choice,uiTypeLabel=Choice,uiUniqueId=d04d4a47-1548-4a43-bf7f-5ee652acf20f</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice>3</choice>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>master</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Choice">choice</internal_type>
        <label>mode</label>
        <mandatory>false</mandatory>
        <max_length>32</max_length>
        <model display_value="GETD_GetBulkArmisData">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>18181bf61b8294104ca7edf9bc4bcb90</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=8cc57299-fe42-4d11-9d3c-4a4263ea5115</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>in:devices !tag:"Off Network"</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>query</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>query</label>
        <mandatory>false</mandatory>
        <max_length>8000</max_length>
        <model display_value="GETD_GetBulkArmisData">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>3</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:35:25</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>abc880831bc694104ca7edf9bc4bcb38</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:42:36</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_action_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=integer,uiTypeLabel=Integer,uiUniqueId=c0ab8d17-e3ea-4ba2-ae2f-1a989f9aa85a</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value>30</default_value>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="Integer">integer</internal_type>
        <label>max_runtime</label>
        <mandatory>false</mandatory>
        <max_length>40</max_length>
        <model display_value="GETD_GetBulkArmisData">d4181bf61b8294104ca7edf9bc4bcb8f</model>
        <model_id>d4181bf61b8294104ca7edf9bc4bcb8f</model_id>
        <model_table>sys_hub_action_type_snapshot</model_table>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <next_element/>
        <order>2</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:29:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>eab93bfe1b4694104ca7edf9bc4bcb63</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:32</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_input>
    <sys_hub_step_instance action="delete_multiple" query="action=d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="GETD_GetBulkArmisData">d4181bf61b8294104ca7edf9bc4bcb8f</action>
        <cid>96e130a7-3355-46a3-a045-f81383e2f7e3</cid>
        <extended_inputs/>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>60181bf61b8294104ca7edf9bc4bcb9d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 14:11:28</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>20181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 14:11:28</sys_updated_on>
        <value>                  // **************************
                  // **** FUNCTION LIBRARY ****
                  // **************************

                  //GENERATE A RANDOM ID
                  //There is no accessible ID for a particular action from within a script step, so this value is used
                  //to cross reference between the debug log, the API log, operation log, etc. to uniquely identify this execution.
                  function generateID()
                  { 
                    var ans = '';
                    arr = '0123456789abcdefghijklmnopqrstuvwxyz'
                    for (var i = 16; i &gt; 0; i--) { ans += arr[Math.floor(Math.random() * arr.length)] } 
                    return ans; 
                  } 

                  //WRITE TO API LOG
                  //Logs the data we're sending to Armis via the API, as well as the response from Armis.
                  //Endpoint must be found on this table: https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=cd79b5a01b8e9c904ca7edf9bc4bcb04
                  function writeToAPILog(/*str*/ id,/*choice*/ endpoint, /*str*/ payload, /*int*/ response_code, /*str*/ response_body, /*GlideDateTime*/ start_time, /*int*/ time_delta_ms)
                  {
                    var api_log_query = new GlideRecord('x_fmcna_armis_inte_armis_rest_api_log')
                    api_log_query.setValue('execution_id',id)
                    api_log_query.setValue('api_endpoint',endpoint)
                    if (payload != null) { api_log_query.setValue('payload',payload.substring(0,1900)) }
                    api_log_query.setValue('response_code',response_code)
                    if (response_body != null) { api_log_query.setValue('response_body',response_body.substring(0,1900)) }
                    api_log_query.setValue('query_submitted_at',start_time)
                    api_log_query.setValue('query_response_time_ms',time_delta_ms)
                    api_log_query.insert()
                  }

                  //WRITE TO DEBUG LOG
                  function writeToDebugLog(/*str*/ id, /*str*/ text)
                  {
                    var log_query = new GlideRecord('x_fmcna_armis_inte_armis_debug_log')
                    log_query.setValue('execution_id',id)
                    log_query.setValue('log_text',text)
                    log_query.insert()
                  }
  
                  //WRITE TO ACTION LOG
                  //action_type must be chosen from:  https://fmcnadev.service-now.com/sys_dictionary.do?sys_id=3f7a1b761b8e10104be764e8bc4bcb9f
                  function writeToActionLog(/*str*/ id, /*choice*/ action_type, /*int*/ total_time, /*int*/ api_time, /*int*/ heavy_processing_time, /*str*/ report)
                  {
                    var alog = new GlideRecord('x_fmcna_armis_inte_armis_action_log')
                    alog.setValue('execution_id',id)
                    alog.setValue('action_type',action_type)
                    alog.setValue('api_time',api_time)
                    alog.setValue('heavy_processing_time',heavy_processing_time)
                    alog.setValue('total_time',total_time)
                    alog.setValue('report',report)
                    alog.insert()
                  }

                  //GET CACHE VALUE
                  function getCacheValue(/*str*/ key, /* ['str','int','datetime'] */ type)
                  {
                    var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
                    cache_query.addQuery('key',key)
                    cache_query.query()
                    if (cache_query.getRowCount() == 0) { return null }
                    cache_query.next()
                    switch (type) {
                      case 'str': return cache_query.getValue('value_string')
                      case 'int': return cache_query.getValue('value_int')
                      case 'datetime': return cache_query.getValue('value_datetime')
                      default: return null
                    }
                  }

                  //SET CACHE VALUE
                  function setCacheValue(/*str*/ key, value, /* ['str','int','datetime'] */ type)
                  {
                    var cache_query = new GlideRecord('x_fmcna_armis_inte_armis_integration_cache')
                    cache_query.addQuery('key',key)
                    cache_query.query()
                    var force_insert = cache_query.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
                    if (force_insert) { cache_query.initialize(); cache_query.key = key } else { cache_query.next() }
                    switch (type) {
                      case 'str': cache_query.value_string = value
                      case 'int': cache_query.value_int = value
                      case 'datetime': cache_query.value_datetime = value
                    }
                    if (force_insert) { cache_query.insert() } else { cache_query.update()}
                  }

                  //MISC
                  function now() { return new GlideDateTime().getNumericValue() }
                  function getCurrentToken() { return getCacheValue('token','str')}



(function execute(inputs, outputs) {
  
  /*
  
  This script repeatedly queries Armis' "GET Devices" endpoint and records its entire database of devices to the Armis Device Table.
  
  It starts from record N, where N is  "getd_[mode]_current_n" on the cache table.
  
  Up to 100 records can be queried at a time, so it loops as long as it is allowed (specified by max_runtime_seconds). 
  
  The query returns with a "next" value and a "total" value that are recorded to the cache table. "next" is null if the end of the list has been reached.
  
  The script has two modes: "master" and "refresh".
  - "master" mode never resets. Its goal is to always keep the table updated with brand new devices, so it's always querying for the latest devices it can find. It should query for new devices every 5 minutes.
  - "refresh" mode's goal is to go through the entire Armis database and refresh the properties of all active devices. This should be reset on a cadence (once a day/week/etc.)
  
  */

                  

  // ***************************************
  // *** GETD_GetBulkArmisData FUNCTIONS ***
  // ***************************************
  
  
  // **********************
  // *** IMPLEMENTATION ***
  // **********************
  
  //Init
  var execution_id = generateID()
  var debug = []

  //Start overall timer. We will use this to find out when to stop the loop.
  var start_time = now()
  
  //Ending counters/report
  var total_time = 0
  var api_time = 0
  var heavy_processing_time = 0
  var num_api_calls = 0
  var num_armis_devices = 0
  var num_records_updated = 0
  var num_records_inserted = 0
  var end_script_report = "";
  
  //LOOP - until we are out of time.
  // [current time] - [start_time] is in milliseconds, divide to get seconds elapsed.
  var end_loop_early = false // Is flagged manually if the query fails outright
  while(end_loop_early == false &amp;&amp; (now() - start_time)/1000 &lt; inputs.max_runtime_seconds)
  {
    debug.push("LOOP " + num_api_calls + " BEGIN")
    
    //GET CURRENT ITERATION'S START PAGE (getd_n). This is in the cache table. If it doesn't exist, start at n=0
    var cache_key = "getd_" + inputs.mode + "_current_n"
    var getd_n = getCacheValue(cache_key,'int')
    if (getd_n == null) { getd_n = 0 }
    debug.push("getd_n: " + getd_n)
    
    //REST QUERY TO ARMIS FOR ALL APPLICABLE DATA
    try {
      
      //We want 100 devices, starting at device N
      //Using Armis API endpoint GET /api/v1/search/
      var request = new sn_ws.RESTMessageV2('Armis API','GET Search')
      request.setRequestHeader('Authorization',getCurrentToken())
      request.setQueryParameter('aql',inputs.query)
      request.setQueryParameter('from',getd_n)
      request.setQueryParameter('length',100)
      request.setQueryParameter('orderBy','id')

      //Execute query, track the API time.
      var glide_start_time = new GlideDateTime()
      var api_start_time = now()
      var response = request.execute()
      var api_time_delta = now() - api_start_time
      api_time += api_time_delta //Track the total for reporting purposes
      debug.push("Query time: " + api_time_delta + " ms, response " + response.getStatusCode())
      if (response.getStatusCode() != 200) { debug.push(response.getBody()) }
      
      //Log the query results
      writeToAPILog(execution_id,'get_search',inputs.query,response.getStatusCode(),response.getBody(),glide_start_time,api_time_delta)
      num_api_calls += 1
      
      //Extract data!
      switch(response.getStatusCode())
      {
        case 200: //Success
          
          //Parse!
          var data = JSON.parse(response.getBody()).data
          debug.push("DATA: count: " + data.count + ", next: " + data.next + ", total: " + data.total)
          
          num_armis_devices += data.count
          
          //Update the cache. Note that if we're at the end of the list of devices, next will be null.
          //If this occurs, set n to the total, so that the next time we query we start there.
          if (data.next == null) { setCacheValue(cache_key, data.total, 'int') }
          else { setCacheValue(cache_key, data.next, 'int') }
          
          //Set the total too, just for reference.
          setCacheValue("armis_device_total", data.total, 'int')
          
          //Next, loop through all 100-ish returns. First, we expect this will be heavy processing, so let's mark it out separately.
          var heavy_processing_start = now()
          
          if (data.count &gt; 0) {
            for (var i=0;i&lt;data.count;i++)
            {
              //Alllllll the fields in the query need to be pushed to the Armis Device Table.
              var entry = data.results[i]
              
              var device = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
              //Does this already exist?
              device.addQuery('armis_device_id',entry.id)
              device.query()
              
              //Flag as an insert if it exists, otherwise it's an update.
              var is_insert = device.getRowCount() == 0 //If we have no records, it's an insert, otherwise it's an update.
              if (is_insert) { device.initialize() } else { device.next() }
              
              //Set all values
              device.access_switch = entry.accessSwitch
              device.armis_device_id = entry.id
              device.armis_risk_level = entry.riskLevel
              device.armis_tags = JSON.stringify(entry.tags)
              device.category = entry.category
              device.first_seen = new GlideDateTime(entry.firstSeen)
              device.ip_address = entry.ipAddress
              device.last_seen = new GlideDateTime(entry.lastSeen)
              device.mac_address = entry.macAddress
              device.manufacturer = entry.manufacturer
              device.model = entry.model
              device.name = entry.name
              device.os = entry.operatingSystem
              device.os_version = entry.operatingSystemVersion
              device.sensor_name = entry.sensor.name
              device.sensor_type = entry.sensor.type
              device.site = entry.site.name
              device.site_location = entry.site.location
              
              //Either insert or update.
              if (is_insert) { device.insert(); num_records_inserted +=1 } else { device.update(); num_records_updated += 1}
              
              debug.push("Table record " + entry.id + " (" + entry.name + ") updated. (insert=" + is_insert + ")")
              
            }
          }
          else
          {
            //We have 0 records.
            //If this is our first query, that means we're maxed out. We don't even want to log anything, just drop the script.
            if (num_api_calls == 1) { outputs.debug = "0 records, killed script."; return }
            //Otherwise, we're done looping.
            end_loop_early = true
          }
          
          //Record our heavy processing time
          heavy_processing_time += now() - heavy_processing_start
          break
        default:
          //Not successful. Not really anything to be done, but end the loop--perhaps we had a bad token?
          end_script_report += "API failed: (" + response.getStatusCode() + ") " + response.getBody() + " "
          end_loop_early = true
      }
    
    }
    catch(ex) {
      debug.push("ERROR IN QUERY: " + ex)
      end_script_report += "Query error: " + ex + " "
      end_loop_early = true
    }
  }
  
  end_script_report += "[" + inputs.mode.toUpperCase() + "] Made " + num_api_calls + " API calls, total " + num_armis_devices + " devices (" + num_records_inserted + " inserted, " + num_records_updated + " updated)."
  total_time = now() - start_time
  writeToActionLog(execution_id,'GETD_GetBulkArmisData', total_time,api_time,heavy_processing_time,end_script_report)
  
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>3f9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <value/>
        <variable display_value="">3b9784031bc694104ca7edf9bc4bcb3c</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>60181bf61b8294104ca7edf9bc4bcb9d</document_key>
        <order>0</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>ec181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <value/>
        <variable display_value="">ac181bf61b8294104ca7edf9bc4bcb9f</variable>
    </sys_variable_value>
    <sys_element_mapping action="delete_multiple" query="id=60181bf61b8294104ca7edf9bc4bcb9d"/>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>application</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>28181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>max_runtime_seconds</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>6c181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:33</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.max_runtime}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>mode</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>a8181bf61b8294104ca7edf9bc4bcbdc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.mode}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>query</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_id>bb9784031bc694104ca7edf9bc4bcb48</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:26</sys_updated_on>
        <table>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</table>
        <value>{{action.query}}</value>
    </sys_element_mapping>
    <sys_element_mapping action="INSERT_OR_UPDATE">
        <field>script</field>
        <id>60181bf61b8294104ca7edf9bc4bcb9d</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_id>e8181bf61b8294104ca7edf9bc4bcbdb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table>var__m_sys_flow_step_definition_input_106afb6647032200b4fad7527c9a71e7</table>
        <value/>
    </sys_element_mapping>
    <sys_hub_step_ext_input action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT IN24181bf61b8294104ca7edf9bc4bcbbf,3b9784031bc694104ca7edf9bc4bcb3c,ac181bf61b8294104ca7edf9bc4bcb9f"/>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>mode</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>mode</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>100</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>24181bf61b8294104ca7edf9bc4bcbbf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>query</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>query</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>200</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:30:15</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3b9784031bc694104ca7edf9bc4bcb3c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:30:15</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_input action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>max_runtime_seconds</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>max_runtime_seconds</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_input_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>0</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_input</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ac181bf61b8294104ca7edf9bc4bcb9f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_input>
    <sys_hub_step_ext_output action="delete_multiple" query="model=60181bf61b8294104ca7edf9bc4bcb9d^sys_idNOT INe0181bf61b8294104ca7edf9bc4bcbd2"/>
    <sys_hub_step_ext_output action="INSERT_OR_UPDATE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>child_label=debug_child0,child_name=debug_child0,child_type=string,child_type_label=String,child_uiUniqueId=b2306af6-4515-4dc2-9b73-2f56b5d5b48a,element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=960763e0-b1e3-474c-82b7-ed7de9c24726</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">60181bf61b8294104ca7edf9bc4bcb9d</model>
        <model_id>60181bf61b8294104ca7edf9bc4bcb9d</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_60181bf61b8294104ca7edf9bc4bcb9d</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e0181bf61b8294104ca7edf9bc4bcbd2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN18181bf61b8294104ca7edf9bc4bcb9a,aeb93bfe1b4694104ca7edf9bc4bcb6a,e7c880831bc694104ca7edf9bc4bcb3d"/>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>mode</element>
        <help/>
        <hint/>
        <label>mode</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-20 22:02:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>18181bf61b8294104ca7edf9bc4bcb9a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-20 22:02:30</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>max_runtime</element>
        <help/>
        <hint/>
        <label>max_runtime</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 00:29:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>aeb93bfe1b4694104ca7edf9bc4bcb6a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 00:29:32</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_documentation action="INSERT_OR_UPDATE">
        <element>query</element>
        <help/>
        <hint/>
        <label>query</label>
        <language>en</language>
        <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-21 01:35:25</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e7c880831bc694104ca7edf9bc4bcb3d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-21 01:35:25</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_choice action="delete_multiple" query="name=var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f^sys_idNOT IN98181bf61b8294104ca7edf9bc4bcb94,18181bf61b8294104ca7edf9bc4bcb95"/>
    <sys_choice field="mode" table="var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f">
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>master</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
            <sequence>0</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 22:02:29</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>98181bf61b8294104ca7edf9bc4bcb94</sys_id>
            <sys_mod_count>0</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 22:02:29</sys_updated_on>
            <value>master</value>
        </sys_choice>
        <sys_choice action="INSERT_OR_UPDATE">
            <dependent_value/>
            <element>mode</element>
            <hint/>
            <inactive>false</inactive>
            <label>refresh</label>
            <language>en</language>
            <name>var__m_sys_hub_action_input_d4181bf61b8294104ca7edf9bc4bcb8f</name>
            <sequence>1</sequence>
            <sys_created_by>3244578</sys_created_by>
            <sys_created_on>2020-07-20 22:02:29</sys_created_on>
            <sys_domain>global</sys_domain>
            <sys_id>18181bf61b8294104ca7edf9bc4bcb95</sys_id>
            <sys_mod_count>0</sys_mod_count>
            <sys_updated_by>3244578</sys_updated_by>
            <sys_updated_on>2020-07-20 22:02:29</sys_updated_on>
            <value>refresh</value>
        </sys_choice>
    </sys_choice>
</record_update>
