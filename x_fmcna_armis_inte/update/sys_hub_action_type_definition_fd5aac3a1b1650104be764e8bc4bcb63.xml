<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>weeklyreset_v21</internal_name>
        <label_cache>[]</label_cache>
        <latest_snapshot>7ef626ecdbdf14107c8880430596199d</latest_snapshot>
        <master_snapshot>f6faacfa1b1650104be764e8bc4bcba8</master_snapshot>
        <name>WeeklyReset (v2.1)</name>
        <natlang/>
        <outputs/>
        <state>published</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 19:39:10</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>fd5aac3a1b1650104be764e8bc4bcb63</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>WeeklyReset (v2.1)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_fd5aac3a1b1650104be764e8bc4bcb63</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:21</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="delete_multiple" query="document_key=fd5aac3a1b1650104be764e8bc4bcb63"/>
    <sys_hub_step_instance action="delete_multiple" query="action=fd5aac3a1b1650104be764e8bc4bcb63^sys_idNOT INfa456df21b9e50104be764e8bc4bcbbb"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="WeeklyReset (v2.1)">fd5aac3a1b1650104be764e8bc4bcb63</action>
        <cid>3862f98c-4af9-465e-a4f1-4d69f2ebff8f</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>fa456df21b9e50104be764e8bc4bcbbb</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:20</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=fa456df21b9e50104be764e8bc4bcbbb"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>fa456df21b9e50104be764e8bc4bcbbb</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_id>b24529361b9e50104be764e8bc4bcb81</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 23:56:44</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>fa456df21b9e50104be764e8bc4bcbbb</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_id>ba4529361b9e50104be764e8bc4bcb81</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:20</sys_updated_on>
        <value>/* 

This script triggers a refresh that should be done on a weekly cadence. Tasks:
1. Reset all non-golden links and attempt to reestablish. This should lock golden links or give newly discovered links the opportunity to link as golden.
2. Reset the master value back to 0. This will force a ground-up refresh of all Armis devices to fill in any potentially missed items.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


(function execute(inputs, outputs) {
  
  var debug = []
  var start_time = now()
  var lap = now()
  debug.push["BEGIN WEEKLY REFRESH"]
  
  //Reset all novel_link_attempt values to false for any links that aren't golden
  //This forces relink attempts across the board to lock golden links or provide a golden link opportunity if it wasn't previously presented.
  var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  q.addQuery('link_strength','!=','GOLDEN')
  q.query()
  
  q.setValue('novel_link_attempted',false)
  q.updateMultiple()
  
  debug.push("Reset 'novel_link_attempted' to false for all non-golden-linked Armis devices. "+lapReport(lap));lap=now()
  
  //Reset the MASTER counter back to 0.
  setCacheValue('getd_master_current_n',0,'int')
  debug.push("Reset 'master' value for GETD background operation to 0 to force full database redownload. "+lapReport(lap));lap=now()
  
  debug = debug.join('\n')
  
  writeToActionLog({id: generateID(), action_type: 'weekly_refresh', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: "Performed weekly refresh.", debug_string: debug})
  outputs.debug = debug
  
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_hub_step_instance action="delete_multiple" query="action=fd5aac3a1b1650104be764e8bc4bcb63^sys_idNOT INfa456df21b9e50104be764e8bc4bcbbb"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="WeeklyReset (v2.1)">fd5aac3a1b1650104be764e8bc4bcb63</action>
        <cid>3862f98c-4af9-465e-a4f1-4d69f2ebff8f</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>fa456df21b9e50104be764e8bc4bcbbb</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:20</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=fa456df21b9e50104be764e8bc4bcbbb"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>fa456df21b9e50104be764e8bc4bcbbb</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_id>b24529361b9e50104be764e8bc4bcb81</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 23:56:44</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>fa456df21b9e50104be764e8bc4bcbbb</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:44</sys_created_on>
        <sys_id>ba4529361b9e50104be764e8bc4bcb81</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:20</sys_updated_on>
        <value>/* 

This script triggers a refresh that should be done on a weekly cadence. Tasks:
1. Reset all non-golden links and attempt to reestablish. This should lock golden links or give newly discovered links the opportunity to link as golden.
2. Reset the master value back to 0. This will force a ground-up refresh of all Armis devices to fill in any potentially missed items.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


(function execute(inputs, outputs) {
  
  var debug = []
  var start_time = now()
  var lap = now()
  debug.push["BEGIN WEEKLY REFRESH"]
  
  //Reset all novel_link_attempt values to false for any links that aren't golden
  //This forces relink attempts across the board to lock golden links or provide a golden link opportunity if it wasn't previously presented.
  var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  q.addQuery('link_strength','!=','GOLDEN')
  q.query()
  
  q.setValue('novel_link_attempted',false)
  q.updateMultiple()
  
  debug.push("Reset 'novel_link_attempted' to false for all non-golden-linked Armis devices. "+lapReport(lap));lap=now()
  
  //Reset the MASTER counter back to 0.
  setCacheValue('getd_master_current_n',0,'int')
  debug.push("Reset 'master' value for GETD background operation to 0 to force full database redownload. "+lapReport(lap));lap=now()
  
  debug = debug.join('\n')
  
  writeToActionLog({id: generateID(), action_type: 'weekly_refresh', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: "Performed weekly refresh.", debug_string: debug})
  outputs.debug = debug
  
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_hub_action_plan action="delete_multiple" query="action_id=fd5aac3a1b1650104be764e8bc4bcb63^sys_idNOT IN72faacfa1b1650104be764e8bc4bcbb6"/>
    <sys_hub_action_plan action="INSERT_OR_UPDATE">
        <action_id display_value="WeeklyReset (v2.1)">fd5aac3a1b1650104be764e8bc4bcb63</action_id>
        <plan>{"persistor":{"@class":".ChunkingPlanPersistor","table":"sys_hub_action_plan","id":"72faacfa1b1650104be764e8bc4bcbb6","name":"plan"}}</plan>
        <snapshot>b31621f61b9e50104be764e8bc4bcbbb</snapshot>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 19:41:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>72faacfa1b1650104be764e8bc4bcbb6</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_overrides/>
        <sys_scope/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:22</sys_updated_on>
    </sys_hub_action_plan>
    <sys_hub_action_type_snapshot action="INSERT_OR_UPDATE">
        <access>public</access>
        <acls/>
        <action_template/>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <internal_name>weeklyreset_v21</internal_name>
        <label_cache>[]</label_cache>
        <master>true</master>
        <name>WeeklyReset (v2.1)</name>
        <natlang/>
        <outputs/>
        <parent_action display_value="WeeklyReset (v2.1)">fd5aac3a1b1650104be764e8bc4bcb63</parent_action>
        <sys_class_name>sys_hub_action_type_snapshot</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 19:41:58</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>f6faacfa1b1650104be764e8bc4bcba8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_overrides/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 19:41:58</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_snapshot>
    <sys_variable_value action="delete_multiple" query="document_key=f6faacfa1b1650104be764e8bc4bcba8"/>
    <sys_hub_step_instance action="delete_multiple" query="action=f6faacfa1b1650104be764e8bc4bcba8^sys_idNOT INc74529361b9e50104be764e8bc4bcba5"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="WeeklyReset (v2.1)">f6faacfa1b1650104be764e8bc4bcba8</action>
        <cid>3862f98c-4af9-465e-a4f1-4d69f2ebff8f</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c74529361b9e50104be764e8bc4bcba5</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:21</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=c74529361b9e50104be764e8bc4bcba5"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>c74529361b9e50104be764e8bc4bcba5</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_id>834529361b9e50104be764e8bc4bcbab</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:21</sys_updated_on>
        <value>/* 

This script triggers a refresh that should be done on a weekly cadence. Tasks:
1. Reset all non-golden links and attempt to reestablish. This should lock golden links or give newly discovered links the opportunity to link as golden.
2. Reset the master value back to 0. This will force a ground-up refresh of all Armis devices to fill in any potentially missed items.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


(function execute(inputs, outputs) {
  
  var debug = []
  var start_time = now()
  var lap = now()
  debug.push["BEGIN WEEKLY REFRESH"]
  
  //Reset all novel_link_attempt values to false for any links that aren't golden
  //This forces relink attempts across the board to lock golden links or provide a golden link opportunity if it wasn't previously presented.
  var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  q.addQuery('link_strength','!=','GOLDEN')
  q.query()
  
  q.setValue('novel_link_attempted',false)
  q.updateMultiple()
  
  debug.push("Reset 'novel_link_attempted' to false for all non-golden-linked Armis devices. "+lapReport(lap));lap=now()
  
  //Reset the MASTER counter back to 0.
  setCacheValue('getd_master_current_n',0,'int')
  debug.push("Reset 'master' value for GETD background operation to 0 to force full database redownload. "+lapReport(lap));lap=now()
  
  debug = debug.join('\n')
  
  writeToActionLog({id: generateID(), action_type: 'weekly_refresh', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: "Performed weekly refresh.", debug_string: debug})
  outputs.debug = debug
  
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>c74529361b9e50104be764e8bc4bcba5</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_id>cf4529361b9e50104be764e8bc4bcbaa</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 23:56:45</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_hub_step_instance action="delete_multiple" query="action=f6faacfa1b1650104be764e8bc4bcba8^sys_idNOT INc74529361b9e50104be764e8bc4bcba5"/>
    <sys_hub_step_instance action="INSERT_OR_UPDATE">
        <action display_value="WeeklyReset (v2.1)">f6faacfa1b1650104be764e8bc4bcba8</action>
        <cid>3862f98c-4af9-465e-a4f1-4d69f2ebff8f</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c74529361b9e50104be764e8bc4bcba5</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:21</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="delete_multiple" query="document_key=c74529361b9e50104be764e8bc4bcba5"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>c74529361b9e50104be764e8bc4bcba5</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_id>834529361b9e50104be764e8bc4bcbab</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-02 00:00:21</sys_updated_on>
        <value>/* 

This script triggers a refresh that should be done on a weekly cadence. Tasks:
1. Reset all non-golden links and attempt to reestablish. This should lock golden links or give newly discovered links the opportunity to link as golden.
2. Reset the master value back to 0. This will force a ground-up refresh of all Armis devices to fill in any potentially missed items.

*/

//GENERAL FUNCTION LIBRARY v0.9 MINIFIED
//SEE FUNCTION_LIBRARY ACTION FOR DOCUMENTATION AND FULL VERSION
function now(){return(new GlideDateTime).getNumericValue()}function lapReport(e){var r="("+(now()-e)+"ms)";return e=now(),r}function includes(e,r){for(var t=0;t&lt;e.length;t++)if(e[t]==r)return!0;return!1}function digest(e){for(var r=5381,t=e.length;t;)r=33*r^e.charCodeAt(--t);return r&gt;&gt;&gt;0}function isValidIPAddress(e){return!!RegExp("^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$").test(e)||!!RegExp("^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$").test(e)}function isValidMACAddress(e){return RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$").test(e)}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var r=6;r&gt;0;r--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var r={},t=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),r.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),r.operation="update"}}catch(e){r.operation="error: "+e}return r.time_delta=now()-t,r}function writeToActionLog(e){var r={table:"x_fmcna_armis_inte_armis_action_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",(""+e.report).substring(0,199)],["debug_string",(""+e.debug_string).substring(0,1999)]],insertOrUpdate(r)}function writeToErrorLog(e){var r={table:"x_fmcna_armis_inte_armis_error_log"};return r.unique_pairs=[["execution_id",e.id]],r.update_pairs=[["error_message",e.error_message],["debug_string",e.debug_string]],insertOrUpdate(r)}function getConfigValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return r.addQuery("key",e),r.query(),0==r.getRowCount()?"":(r.next(),r.getValue("value"))}function getCacheValue(e,r){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(t.addQuery("key",e),t.query(),0==t.getRowCount())return null;switch(t.next(),r){case"str":return t.getValue("value_string");case"int":return t.getValue("value_int");case"datetime":return t.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,r,t){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],t){case"str":a.update_pairs=[["value_string",r]];break;case"int":a.update_pairs=[["value_int",r]];break;case"datetime":a.update_pairs=[["value_datetime",r]]}return insertOrUpdate(a)}function deleteCacheValue(e){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");r.addQuery("key",e),r.query(),r.deleteMultiple()}


(function execute(inputs, outputs) {
  
  var debug = []
  var start_time = now()
  var lap = now()
  debug.push["BEGIN WEEKLY REFRESH"]
  
  //Reset all novel_link_attempt values to false for any links that aren't golden
  //This forces relink attempts across the board to lock golden links or provide a golden link opportunity if it wasn't previously presented.
  var q = new GlideRecord('x_fmcna_armis_inte_armis_device_table')
  q.addQuery('link_strength','!=','GOLDEN')
  q.query()
  
  q.setValue('novel_link_attempted',false)
  q.updateMultiple()
  
  debug.push("Reset 'novel_link_attempted' to false for all non-golden-linked Armis devices. "+lapReport(lap));lap=now()
  
  //Reset the MASTER counter back to 0.
  setCacheValue('getd_master_current_n',0,'int')
  debug.push("Reset 'master' value for GETD background operation to 0 to force full database redownload. "+lapReport(lap));lap=now()
  
  debug = debug.join('\n')
  
  writeToActionLog({id: generateID(), action_type: 'weekly_refresh', total_time: (now() - start_time), api_time: 0, heavy_processing_time: (now() - start_time), report: "Performed weekly refresh.", debug_string: debug})
  outputs.debug = debug
  
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_hub_step_instance</document>
        <document_key>c74529361b9e50104be764e8bc4bcba5</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 23:56:45</sys_created_on>
        <sys_id>cf4529361b9e50104be764e8bc4bcbaa</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 23:56:45</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
</record_update>
