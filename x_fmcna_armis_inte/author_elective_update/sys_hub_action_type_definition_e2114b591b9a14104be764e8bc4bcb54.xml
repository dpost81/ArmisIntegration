<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_hub_action_type_definition">
    <sys_hub_action_type_definition action="DELETE">
        <access>public</access>
        <acls/>
        <action_template/>
        <active>true</active>
        <annotation/>
        <callable_by_client_api>false</callable_by_client_api>
        <category/>
        <copied_from/>
        <copied_from_name/>
        <description/>
        <ih_action>false</ih_action>
        <internal_name>ut_sandboxtestrecordefficiency</internal_name>
        <label_cache>[{"name":"{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]</label_cache>
        <latest_snapshot/>
        <master_snapshot/>
        <name>UT_SandboxTestRecordEfficiency</name>
        <natlang/>
        <outputs/>
        <outputs/>
        <state>draft</state>
        <sys_class_name>sys_hub_action_type_definition</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:46:57</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>e2114b591b9a14104be764e8bc4bcb54</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>UT_SandboxTestRecordEfficiency</sys_name>
        <sys_overrides/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name>sys_hub_action_type_definition_e2114b591b9a14104be764e8bc4bcb54</sys_update_name>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:17</sys_updated_on>
        <system_level>false</system_level>
        <type/>
    </sys_hub_action_type_definition>
    <sys_variable_value action="DELETE" query="document_key=e2114b591b9a14104be764e8bc4bcb54"/>
    <sys_element_mapping action="DELETE" query="id=e2114b591b9a14104be764e8bc4bcb54"/>
    <sys_element_mapping action="DELETE">
        <field>debug</field>
        <id>e2114b591b9a14104be764e8bc4bcb54</id>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:13</sys_created_on>
        <sys_id>46e3cb151bda14104be764e8bc4bcb3c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:13</sys_updated_on>
        <table>var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54</table>
        <value>{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].debug}}</value>
    </sys_element_mapping>
    <sys_hub_step_instance action="DELETE" query="action=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN3de347151bda14104be764e8bc4bcb8a"/>
    <sys_hub_step_instance action="DELETE">
        <action display_value="UT_SandboxTestRecordEfficiency">e2114b591b9a14104be764e8bc4bcb54</action>
        <cid>f10e72ff-305c-4571-bd52-e402ec3d1dc2</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3de347151bda14104be764e8bc4bcb8a</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:16</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="DELETE" query="document_key=3de347151bda14104be764e8bc4bcb8a"/>
    <sys_variable_value action="DELETE">
        <document>sys_hub_step_instance</document>
        <document_key>3de347151bda14104be764e8bc4bcb8a</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_id>35e3cb151bda14104be764e8bc4bcb30</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:12</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="DELETE">
        <document>sys_hub_step_instance</document>
        <document_key>3de347151bda14104be764e8bc4bcb8a</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_id>f5e3cb151bda14104be764e8bc4bcb30</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:17</sys_updated_on>
        <value>//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//GET PENDING RECORDS
//In order to efficiently update statuses for records, we need to use updatemultiple(). However, updatemultiple() conflicts with iteration.
//So, in order to iterate through records to get data from them, then update multiple to set all of them to complete,
function getPendingRecordsEndSysID(n,table)
{
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { return q.getValue('sys_id') } } 
}

function getNumPendingRecords(n,table,end_sys_id)
{  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}

function reset()
{
  var last_t = now()
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.setValue('status','PENDING')
  q.updateMultiple()
   
  return 'Reset all to PENDING (' +  (now() - last_t) + ')'
}

function reportAggregate()
{
  var last_t = now()
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PROCESSING')
  q.query()
  return "Num processing: " + q.getRowCount()
}

function test1(x,order_by)
{
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    q.setValue('status','PROCESSING')
    q.update()
    i++
  }
  return report_string + '\nTest 1, record by record (' +  (now() - last_t) + ')'
}

function test2(x,order_by)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    i++
  }
  
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==x) { last_id = q.getValue(order_by) } }
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.addQuery(order_by,'&lt;=',last_id)
  q.query()
  q.setValue('status','PROCESSING')
  q.updateMultiple()
  var diff = now() - last_t

  return report_string + '\nTest 2, threshold then updateMultiple (' +  diff + ')'
}

(function execute(inputs, outputs) {
  
  var debug = ['BEGIN']
  var last_t = now()
  var q = null;
  var n=1000
  var m='sys_created_on'
  var table = 'x_fmcna_armis_inte_armis_op_arp_table'
  
  
  /*q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.deleteMultiple()
  
  debug.push('Deleted records | ' + now() - last_t)
  last_t = now()*/
  
  /*for(var i=0;i&lt;900000;i++)
  {
    q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
    q.initialize()
    q.execution_id = generateID()
    q.ip = generateID()
    q.mac = generateID()
    q.status = 'PENDING'
    q.insert()
  } 
  debug.push('Inserted records | ' + now() - last_t)
  last_t = now()*/
  
  debug.push(reset())
  debug.push(reportAggregate())
  
  //debug.push(test1(n,m))
  //debug.push(reportAggregate())
  //debug.push(reset())
  
  //debug.push(test2(n,m))
  //debug.push(reportAggregate())
  
  last_t = now()
  
  /*var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { last_id = q.getValue('sys_id') } }
  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',last_id)
  q.query()*/
  
  var end_sys_id = getPendingRecordsEndSysID(n,table)
  var q = getNumPendingRecords(n,table,end_sys_id)
  var r = getNumPendingRecords(n,table,end_sys_id)
  var s = getNumPendingRecords(n,table,end_sys_id)
  
  debug.push("Queried records. Num records: " + q.getRowCount() + "(" + (now() - last_t) + ")")
  last_t = now()
  
  q.setValue('status','PROCESSING')
  //q.updateMultiple()
  debug.push("PROCESSING multiple. (" + (now() - last_t) + "," + q.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  
  var csv = ["ip,mac"]
  while(r.next()) { csv.push(r.getValue('ip') + "," + r.getValue('mac')); r.setValue('status','COMPLETE'); r.update() }
  debug.push("Iterated through multiple. (" + (now() - last_t) + "," + r.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  s.setValue('status','COMPLETE')
  s.updateMultiple()
  debug.push("Completed multiple. (" + (now() - last_t) + "," + s.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
             
             
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_hub_step_ext_output action="DELETE" query="model=3de347151bda14104be764e8bc4bcb8a^sys_idNOT IN7de347151bda14104be764e8bc4bcb8f"/>
    <sys_hub_step_ext_output action="DELETE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=a5fb7715-5ff0-4c05-b05e-dd585731af17</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">3de347151bda14104be764e8bc4bcb8a</model>
        <model_id>3de347151bda14104be764e8bc4bcb8a</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_3de347151bda14104be764e8bc4bcb8a</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7de347151bda14104be764e8bc4bcb8f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_hub_action_output action="DELETE" query="model=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT INb1e3cb151bda14104be764e8bc4bcb33"/>
    <sys_hub_action_output action="DELETE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,pwd2droppable=true,uiType=string,uiTypeLabel=String,uiUniqueId=feff7b50-58a9-4173-a145-f0ab35eb4334</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_prototype/>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_link/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>false</mandatory>
        <max_length>8000</max_length>
        <model display_value="UT_SandboxTestRecordEfficiency">e2114b591b9a14104be764e8bc4bcb54</model>
        <model_id>e2114b591b9a14104be764e8bc4bcb54</model_id>
        <model_table>sys_hub_action_type_definition</model_table>
        <name>var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_action_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b1e3cb151bda14104be764e8bc4bcb33</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_action_output>
    <sys_hub_step_instance action="DELETE" query="action=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN3de347151bda14104be764e8bc4bcb8a"/>
    <sys_hub_step_instance action="DELETE">
        <action display_value="UT_SandboxTestRecordEfficiency">e2114b591b9a14104be764e8bc4bcb54</action>
        <cid>f10e72ff-305c-4571-bd52-e402ec3d1dc2</cid>
        <extended_inputs/>
        <extended_outputs/>
        <icon/>
        <inputs/>
        <label>Script step</label>
        <order>1</order>
        <outputs/>
        <section/>
        <step_type display_value="Script">106afb6647032200b4fad7527c9a71e7</step_type>
        <sys_class_name>sys_hub_step_instance</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3de347151bda14104be764e8bc4bcb8a</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:16</sys_updated_on>
    </sys_hub_step_instance>
    <sys_variable_value action="DELETE" query="document_key=3de347151bda14104be764e8bc4bcb8a"/>
    <sys_variable_value action="DELETE">
        <document>sys_hub_step_instance</document>
        <document_key>3de347151bda14104be764e8bc4bcb8a</document_key>
        <order>400</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_id>35e3cb151bda14104be764e8bc4bcb30</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:12</sys_updated_on>
        <value>35aa573fd7802200bdbaee5b5e610375</value>
        <variable display_value="">f5e56d79b3101300176b051a16a8dce4</variable>
    </sys_variable_value>
    <sys_variable_value action="DELETE">
        <document>sys_hub_step_instance</document>
        <document_key>3de347151bda14104be764e8bc4bcb8a</document_key>
        <order>600</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_id>f5e3cb151bda14104be764e8bc4bcb30</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:17</sys_updated_on>
        <value>//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&gt;&gt;&gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;&amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;&amp;(e.payload=""),null==e.response_body&amp;&amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;&amp;""!=e.armis_id||null!=e.mac&amp;&amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//GET PENDING RECORDS
//In order to efficiently update statuses for records, we need to use updatemultiple(). However, updatemultiple() conflicts with iteration.
//So, in order to iterate through records to get data from them, then update multiple to set all of them to complete,
function getPendingRecordsEndSysID(n,table)
{
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { return q.getValue('sys_id') } } 
}

function getNumPendingRecords(n,table,end_sys_id)
{  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',end_sys_id)
  q.query()
  return q
}

function reset()
{
  var last_t = now()
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.setValue('status','PENDING')
  q.updateMultiple()
   
  return 'Reset all to PENDING (' +  (now() - last_t) + ')'
}

function reportAggregate()
{
  var last_t = now()
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PROCESSING')
  q.query()
  return "Num processing: " + q.getRowCount()
}

function test1(x,order_by)
{
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    q.setValue('status','PROCESSING')
    q.update()
    i++
  }
  return report_string + '\nTest 1, record by record (' +  (now() - last_t) + ')'
}

function test2(x,order_by)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    i++
  }
  
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==x) { last_id = q.getValue(order_by) } }
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.addQuery(order_by,'&lt;=',last_id)
  q.query()
  q.setValue('status','PROCESSING')
  q.updateMultiple()
  var diff = now() - last_t

  return report_string + '\nTest 2, threshold then updateMultiple (' +  diff + ')'
}

(function execute(inputs, outputs) {
  
  var debug = ['BEGIN']
  var last_t = now()
  var q = null;
  var n=1000
  var m='sys_created_on'
  var table = 'x_fmcna_armis_inte_armis_op_arp_table'
  
  
  /*q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.deleteMultiple()
  
  debug.push('Deleted records | ' + now() - last_t)
  last_t = now()*/
  
  /*for(var i=0;i&lt;900000;i++)
  {
    q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
    q.initialize()
    q.execution_id = generateID()
    q.ip = generateID()
    q.mac = generateID()
    q.status = 'PENDING'
    q.insert()
  } 
  debug.push('Inserted records | ' + now() - last_t)
  last_t = now()*/
  
  debug.push(reset())
  debug.push(reportAggregate())
  
  //debug.push(test1(n,m))
  //debug.push(reportAggregate())
  //debug.push(reset())
  
  //debug.push(test2(n,m))
  //debug.push(reportAggregate())
  
  last_t = now()
  
  /*var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { last_id = q.getValue('sys_id') } }
  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&lt;=',last_id)
  q.query()*/
  
  var end_sys_id = getPendingRecordsEndSysID(n,table)
  var q = getNumPendingRecords(n,table,end_sys_id)
  var r = getNumPendingRecords(n,table,end_sys_id)
  var s = getNumPendingRecords(n,table,end_sys_id)
  
  debug.push("Queried records. Num records: " + q.getRowCount() + "(" + (now() - last_t) + ")")
  last_t = now()
  
  q.setValue('status','PROCESSING')
  //q.updateMultiple()
  debug.push("PROCESSING multiple. (" + (now() - last_t) + "," + q.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  
  var csv = ["ip,mac"]
  while(r.next()) { csv.push(r.getValue('ip') + "," + r.getValue('mac')); r.setValue('status','COMPLETE'); r.update() }
  debug.push("Iterated through multiple. (" + (now() - last_t) + "," + r.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  s.setValue('status','COMPLETE')
  s.updateMultiple()
  debug.push("Completed multiple. (" + (now() - last_t) + "," + s.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
             
             
  outputs.debug = debug.join("\n")
})(inputs, outputs);
</value>
        <variable display_value="">71aa7f6647032200b4fad7527c9a719b</variable>
    </sys_variable_value>
    <sys_hub_step_ext_output action="DELETE" query="model=3de347151bda14104be764e8bc4bcb8a^sys_idNOT IN7de347151bda14104be764e8bc4bcb8f"/>
    <sys_hub_step_ext_output action="DELETE">
        <active>true</active>
        <array>false</array>
        <array_denormalized>false</array_denormalized>
        <attributes>element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=a5fb7715-5ff0-4c05-b05e-dd585731af17</attributes>
        <audit>false</audit>
        <calculation><![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]></calculation>
        <choice/>
        <choice_field/>
        <choice_table/>
        <column_label/>
        <comments/>
        <create_roles/>
        <default_value/>
        <defaultsort/>
        <delete_roles/>
        <dependent/>
        <dependent_on_field/>
        <display>false</display>
        <dynamic_creation>false</dynamic_creation>
        <dynamic_creation_script/>
        <dynamic_default_value/>
        <dynamic_ref_qual/>
        <element>debug</element>
        <element_reference>false</element_reference>
        <foreign_database/>
        <function_definition/>
        <function_field>false</function_field>
        <help/>
        <hint/>
        <internal_type display_value="String">string</internal_type>
        <label>debug</label>
        <mandatory>true</mandatory>
        <max_length>8000</max_length>
        <model display_value="Script step">3de347151bda14104be764e8bc4bcb8a</model>
        <model_id>3de347151bda14104be764e8bc4bcb8a</model_id>
        <model_table>sys_hub_step_instance</model_table>
        <name>var__m_sys_hub_step_ext_output_3de347151bda14104be764e8bc4bcb8a</name>
        <next_element/>
        <order>1</order>
        <primary>false</primary>
        <read_only>false</read_only>
        <read_roles/>
        <reference/>
        <reference_cascade_rule/>
        <reference_floats>false</reference_floats>
        <reference_key/>
        <reference_qual/>
        <reference_qual_condition/>
        <reference_type/>
        <sizeclass/>
        <spell_check>false</spell_check>
        <staged>false</staged>
        <sys_class_name>sys_hub_step_ext_output</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7de347151bda14104be764e8bc4bcb8f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:12</sys_updated_on>
        <table_reference>false</table_reference>
        <text_index>false</text_index>
        <unique>false</unique>
        <use_dependent_field>false</use_dependent_field>
        <use_dynamic_default>false</use_dynamic_default>
        <use_reference_qualifier>simple</use_reference_qualifier>
        <virtual>false</virtual>
        <widget/>
        <write_roles/>
        <xml_view>false</xml_view>
    </sys_hub_step_ext_output>
    <sys_documentation action="DELETE" query="name=var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN42e3cb151bda14104be764e8bc4bcb39"/>
    <sys_documentation action="DELETE">
        <element>debug</element>
        <help/>
        <hint/>
        <label>debug</label>
        <language>en</language>
        <name>var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54</name>
        <plural/>
        <sys_class_name>sys_documentation</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-28 14:59:13</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>42e3cb151bda14104be764e8bc4bcb39</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name/>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_update_name/>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-28 14:59:13</sys_updated_on>
        <url/>
        <url_target/>
    </sys_documentation>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</application>
        <file_path/>
        <instance_id>8c99a8bd4f849a40e17199701310c7b4</instance_id>
        <instance_name>fmcnadev</instance_name>
        <name>sys_hub_action_type_definition_e2114b591b9a14104be764e8bc4bcb54</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_hub_action_type_definition"&gt;&lt;sys_hub_action_type_definition action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;acls/&gt;&lt;action_template/&gt;&lt;active&gt;true&lt;/active&gt;&lt;annotation/&gt;&lt;callable_by_client_api&gt;false&lt;/callable_by_client_api&gt;&lt;category/&gt;&lt;copied_from/&gt;&lt;copied_from_name/&gt;&lt;description/&gt;&lt;ih_action&gt;false&lt;/ih_action&gt;&lt;internal_name&gt;ut_sandboxtestrecordefficiency&lt;/internal_name&gt;&lt;label_cache&gt;[{"name":"{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].variable}}","label":"step➛Script step➛variable","type":"step","ref":""},{"name":"{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].debug}}","label":"step➛Script step➛debug","type":"step","ref":""}]&lt;/label_cache&gt;&lt;latest_snapshot/&gt;&lt;master_snapshot/&gt;&lt;name&gt;UT_SandboxTestRecordEfficiency&lt;/name&gt;&lt;natlang/&gt;&lt;outputs/&gt;&lt;outputs/&gt;&lt;state&gt;draft&lt;/state&gt;&lt;sys_class_name&gt;sys_hub_action_type_definition&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:46:57&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_id&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;25&lt;/sys_mod_count&gt;&lt;sys_name&gt;UT_SandboxTestRecordEfficiency&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Armis Integration" source="x_fmcna_armis_inte"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_hub_action_type_definition_e2114b591b9a14104be764e8bc4bcb54&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-29 22:25:17&lt;/sys_updated_on&gt;&lt;system_level&gt;false&lt;/system_level&gt;&lt;type/&gt;&lt;/sys_hub_action_type_definition&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=e2114b591b9a14104be764e8bc4bcb54"/&gt;&lt;sys_element_mapping action="delete_multiple" query="id=e2114b591b9a14104be764e8bc4bcb54"/&gt;&lt;sys_element_mapping action="INSERT_OR_UPDATE"&gt;&lt;field&gt;debug&lt;/field&gt;&lt;id&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/id&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:13&lt;/sys_created_on&gt;&lt;sys_id&gt;46e3cb151bda14104be764e8bc4bcb3c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:13&lt;/sys_updated_on&gt;&lt;table&gt;var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54&lt;/table&gt;&lt;value&gt;{{step[f10e72ff-305c-4571-bd52-e402ec3d1dc2].debug}}&lt;/value&gt;&lt;/sys_element_mapping&gt;&lt;sys_hub_step_instance action="delete_multiple" query="action=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN3de347151bda14104be764e8bc4bcb8a"/&gt;&lt;sys_hub_step_instance action="INSERT_OR_UPDATE"&gt;&lt;action display_value="UT_SandboxTestRecordEfficiency"&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/action&gt;&lt;cid&gt;f10e72ff-305c-4571-bd52-e402ec3d1dc2&lt;/cid&gt;&lt;extended_inputs/&gt;&lt;extended_outputs/&gt;&lt;icon/&gt;&lt;inputs/&gt;&lt;label&gt;Script step&lt;/label&gt;&lt;order&gt;1&lt;/order&gt;&lt;outputs/&gt;&lt;section/&gt;&lt;step_type display_value="Script"&gt;106afb6647032200b4fad7527c9a71e7&lt;/step_type&gt;&lt;sys_class_name&gt;sys_hub_step_instance&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;3de347151bda14104be764e8bc4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package/&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-29 22:25:16&lt;/sys_updated_on&gt;&lt;/sys_hub_step_instance&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=3de347151bda14104be764e8bc4bcb8a"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;sys_hub_step_instance&lt;/document&gt;&lt;document_key&gt;3de347151bda14104be764e8bc4bcb8a&lt;/document_key&gt;&lt;order&gt;400&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_id&gt;35e3cb151bda14104be764e8bc4bcb30&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:12&lt;/sys_updated_on&gt;&lt;value&gt;35aa573fd7802200bdbaee5b5e610375&lt;/value&gt;&lt;variable display_value=""&gt;f5e56d79b3101300176b051a16a8dce4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;sys_hub_step_instance&lt;/document&gt;&lt;document_key&gt;3de347151bda14104be764e8bc4bcb8a&lt;/document_key&gt;&lt;order&gt;600&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_id&gt;f5e3cb151bda14104be764e8bc4bcb30&lt;/sys_id&gt;&lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-29 22:25:17&lt;/sys_updated_on&gt;&lt;value&gt;//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&amp;lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&amp;gt;&amp;gt;&amp;gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&amp;gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;amp;&amp;amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&amp;lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&amp;lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&amp;lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&amp;lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;amp;&amp;amp;(e.payload=""),null==e.response_body&amp;amp;&amp;amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;amp;&amp;amp;""!=e.armis_id||null!=e.mac&amp;amp;&amp;amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//GET PENDING RECORDS
//In order to efficiently update statuses for records, we need to use updatemultiple(). However, updatemultiple() conflicts with iteration.
//So, in order to iterate through records to get data from them, then update multiple to set all of them to complete,
function getPendingRecordsEndSysID(n,table)
{
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { return q.getValue('sys_id') } } 
}

function getNumPendingRecords(n,table,end_sys_id)
{  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&amp;lt;=',end_sys_id)
  q.query()
  return q
}

function reset()
{
  var last_t = now()
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.setValue('status','PENDING')
  q.updateMultiple()
   
  return 'Reset all to PENDING (' +  (now() - last_t) + ')'
}

function reportAggregate()
{
  var last_t = now()
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PROCESSING')
  q.query()
  return "Num processing: " + q.getRowCount()
}

function test1(x,order_by)
{
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    q.setValue('status','PROCESSING')
    q.update()
    i++
  }
  return report_string + '\nTest 1, record by record (' +  (now() - last_t) + ')'
}

function test2(x,order_by)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    i++
  }
  
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==x) { last_id = q.getValue(order_by) } }
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.addQuery(order_by,'&amp;lt;=',last_id)
  q.query()
  q.setValue('status','PROCESSING')
  q.updateMultiple()
  var diff = now() - last_t

  return report_string + '\nTest 2, threshold then updateMultiple (' +  diff + ')'
}

(function execute(inputs, outputs) {
  
  var debug = ['BEGIN']
  var last_t = now()
  var q = null;
  var n=1000
  var m='sys_created_on'
  var table = 'x_fmcna_armis_inte_armis_op_arp_table'
  
  
  /*q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.deleteMultiple()
  
  debug.push('Deleted records | ' + now() - last_t)
  last_t = now()*/
  
  /*for(var i=0;i&amp;lt;900000;i++)
  {
    q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
    q.initialize()
    q.execution_id = generateID()
    q.ip = generateID()
    q.mac = generateID()
    q.status = 'PENDING'
    q.insert()
  } 
  debug.push('Inserted records | ' + now() - last_t)
  last_t = now()*/
  
  debug.push(reset())
  debug.push(reportAggregate())
  
  //debug.push(test1(n,m))
  //debug.push(reportAggregate())
  //debug.push(reset())
  
  //debug.push(test2(n,m))
  //debug.push(reportAggregate())
  
  last_t = now()
  
  /*var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { last_id = q.getValue('sys_id') } }
  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&amp;lt;=',last_id)
  q.query()*/
  
  var end_sys_id = getPendingRecordsEndSysID(n,table)
  var q = getNumPendingRecords(n,table,end_sys_id)
  var r = getNumPendingRecords(n,table,end_sys_id)
  var s = getNumPendingRecords(n,table,end_sys_id)
  
  debug.push("Queried records. Num records: " + q.getRowCount() + "(" + (now() - last_t) + ")")
  last_t = now()
  
  q.setValue('status','PROCESSING')
  //q.updateMultiple()
  debug.push("PROCESSING multiple. (" + (now() - last_t) + "," + q.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  
  var csv = ["ip,mac"]
  while(r.next()) { csv.push(r.getValue('ip') + "," + r.getValue('mac')); r.setValue('status','COMPLETE'); r.update() }
  debug.push("Iterated through multiple. (" + (now() - last_t) + "," + r.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  s.setValue('status','COMPLETE')
  s.updateMultiple()
  debug.push("Completed multiple. (" + (now() - last_t) + "," + s.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
             
             
  outputs.debug = debug.join("\n")
})(inputs, outputs);
&lt;/value&gt;&lt;variable display_value=""&gt;71aa7f6647032200b4fad7527c9a719b&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_hub_step_ext_output action="delete_multiple" query="model=3de347151bda14104be764e8bc4bcb8a^sys_idNOT IN7de347151bda14104be764e8bc4bcb8f"/&gt;&lt;sys_hub_step_ext_output action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=a5fb7715-5ff0-4c05-b05e-dd585731af17&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;debug&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;help/&gt;&lt;hint/&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;label&gt;debug&lt;/label&gt;&lt;mandatory&gt;true&lt;/mandatory&gt;&lt;max_length&gt;8000&lt;/max_length&gt;&lt;model display_value="Script step"&gt;3de347151bda14104be764e8bc4bcb8a&lt;/model&gt;&lt;model_id&gt;3de347151bda14104be764e8bc4bcb8a&lt;/model_id&gt;&lt;model_table&gt;sys_hub_step_instance&lt;/model_table&gt;&lt;name&gt;var__m_sys_hub_step_ext_output_3de347151bda14104be764e8bc4bcb8a&lt;/name&gt;&lt;next_element/&gt;&lt;order&gt;1&lt;/order&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_hub_step_ext_output&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;7de347151bda14104be764e8bc4bcb8f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package/&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:12&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_hub_step_ext_output&gt;&lt;sys_hub_action_output action="delete_multiple" query="model=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT INb1e3cb151bda14104be764e8bc4bcb33"/&gt;&lt;sys_hub_action_output action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,pwd2droppable=true,uiType=string,uiTypeLabel=String,uiUniqueId=feff7b50-58a9-4173-a145-f0ab35eb4334&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;debug&lt;/element&gt;&lt;element_prototype/&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;help/&gt;&lt;hint/&gt;&lt;internal_link/&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;label&gt;debug&lt;/label&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;8000&lt;/max_length&gt;&lt;model display_value="UT_SandboxTestRecordEfficiency"&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/model&gt;&lt;model_id&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/model_id&gt;&lt;model_table&gt;sys_hub_action_type_definition&lt;/model_table&gt;&lt;name&gt;var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54&lt;/name&gt;&lt;next_element/&gt;&lt;order&gt;1&lt;/order&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_hub_action_output&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;b1e3cb151bda14104be764e8bc4bcb33&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package/&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:12&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_hub_action_output&gt;&lt;sys_hub_step_instance action="delete_multiple" query="action=e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN3de347151bda14104be764e8bc4bcb8a"/&gt;&lt;sys_hub_step_instance action="INSERT_OR_UPDATE"&gt;&lt;action display_value="UT_SandboxTestRecordEfficiency"&gt;e2114b591b9a14104be764e8bc4bcb54&lt;/action&gt;&lt;cid&gt;f10e72ff-305c-4571-bd52-e402ec3d1dc2&lt;/cid&gt;&lt;extended_inputs/&gt;&lt;extended_outputs/&gt;&lt;icon/&gt;&lt;inputs/&gt;&lt;label&gt;Script step&lt;/label&gt;&lt;order&gt;1&lt;/order&gt;&lt;outputs/&gt;&lt;section/&gt;&lt;step_type display_value="Script"&gt;106afb6647032200b4fad7527c9a71e7&lt;/step_type&gt;&lt;sys_class_name&gt;sys_hub_step_instance&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;3de347151bda14104be764e8bc4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package/&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-29 22:25:16&lt;/sys_updated_on&gt;&lt;/sys_hub_step_instance&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=3de347151bda14104be764e8bc4bcb8a"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;sys_hub_step_instance&lt;/document&gt;&lt;document_key&gt;3de347151bda14104be764e8bc4bcb8a&lt;/document_key&gt;&lt;order&gt;400&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_id&gt;35e3cb151bda14104be764e8bc4bcb30&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:12&lt;/sys_updated_on&gt;&lt;value&gt;35aa573fd7802200bdbaee5b5e610375&lt;/value&gt;&lt;variable display_value=""&gt;f5e56d79b3101300176b051a16a8dce4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;sys_hub_step_instance&lt;/document&gt;&lt;document_key&gt;3de347151bda14104be764e8bc4bcb8a&lt;/document_key&gt;&lt;order&gt;600&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_id&gt;f5e3cb151bda14104be764e8bc4bcb30&lt;/sys_id&gt;&lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-29 22:25:17&lt;/sys_updated_on&gt;&lt;value&gt;//FUNCTION LIBRARY (v0.4) -- THESE FUNCTIONS HAVE BEEN MINIFIED.
//FOR FULL DOCUMENTAITON AND A CURRENT COPY, SEE THE ACTION "(vX.X) FUNCTION_LIBRARY"
function now(){return(new GlideDateTime).getNumericValue()}function includes(e,t){for(var r=0;r&amp;lt;e.length;r++)if(e[r]==t)return!0;return!1}function digest(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t&amp;gt;&amp;gt;&amp;gt;0}function generateID(){var e="";arr="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var t=6;t&amp;gt;0;t--)e+=arr[Math.floor(Math.random()*arr.length)];return e}function insertOrUpdate(e){var t={},r=now();null==e.unique_pairs&amp;amp;&amp;amp;(e.unique_pairs=[]);try{var a=new GlideRecord(e.table);if(0!=e.unique_pairs.length){for(var i=0;i&amp;lt;e.unique_pairs.length;i++)a.addQuery(e.unique_pairs[i][0],e.unique_pairs[i][1]);a.query()}if(0==a.getRowCount()){a.initialize();for(i=0;i&amp;lt;e.unique_pairs.length;i++)a[e.unique_pairs[i][0]]=e.unique_pairs[i][1];for(i=0;i&amp;lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.insert(),t.operation="insert"}else{for(i=0;i&amp;lt;e.update_pairs.length;i++)a[e.update_pairs[i][0]]=e.update_pairs[i][1];a.updateMultiple(),t.operation="update"}}catch(e){t.operation="error: "+e}return t.time_delta=now()-r,t}function writeToAPILog(e){null==e.payload&amp;amp;&amp;amp;(e.payload=""),null==e.response_body&amp;amp;&amp;amp;(e.response_body="");var t={table:"x_fmcna_armis_inte_armis_rest_api_log"};return t.update_pairs=[["execution_id",e.id],["api_endpoint",e.endpoint],["payload",e.payload.substring(0,1999)],["response_code",e.response_code],["response_body",e.response_body.substring(0,1999)],["query_submitted_at",e.start_time],["query_response_time_ms",e.time_delta_ms]],insertOrUpdate(t)}function queueProperty(e){if(null==e.name||""==e.name)return{operation:"error: empty name",time_delta:0};if(null==e.value||""==e.value)return{operation:"error: empty value",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_property_upload"};return t.update_pairs=[["armis_device_id",e.armis_id],["property_name",e.name],["property_value",e.value],["execution_id",e.execution_id],["status","PENDING"]],insertOrUpdate(t)}function queueARP(e){if(null==e.mac||""==e.mac)return{operation:"error: empty mac",time_delta:0};if(null==e.ip||""==e.ip)return{operation:"error: empty ip",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_arp_table"};return t.update_pairs=[["execution_id",e.execution_id],["mac",e.mac],["ip",e.ip],["status","PENDING"]],insertOrUpdate(t)}function queueKeyAttribute(e){if(!(null!=e.armis_id&amp;amp;&amp;amp;""!=e.armis_id||null!=e.mac&amp;amp;&amp;amp;""!=e.mac))return{operation:"error: must have either a MAC or an Armis ID",time_delta:0};if(allowed_attributes=["CATEGORY","IP","LAST_SEEN","MODEL","NAME","OS","OS_VERSION","TAG","TYPE","USER"],0==includes(allowed_attributes,e.attribute))return{operation:"error: attribute '"+e.attribute+"' is not valid.",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_key_attribute"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["armis_mac",e.mac],["attribute",e.attribute],["value",e.value],["status","PENDING"]],insertOrUpdate(t)}function queueApplication(e){if(null==e.armis_id||""==e.armis_id)return{operation:"error: Armis ID cannot be empty",time_delta:0};if(null==e.name||""==e.name)return{operation:"error: Software name cannot be empty",time_delta:0};var t={table:"x_fmcna_armis_inte_armis_op_application_upload"};return t.update_pairs=[["execution_id",e.execution_id],["armis_device_id",e.mac],["application_name",e.name],["application_version",e.version],["status","PENDING"]],insertOrUpdate(t)}function writeToActionLog(e){var t={table:"x_fmcna_armis_inte_armis_action_log"};return t.unique_pairs=[["execution_id",e.id]],t.update_pairs=[["action_type",e.action_type],["api_time",e.api_time],["heavy_processing_time",e.heavy_processing_time],["total_time",e.total_time],["report",e.report.substring(0,199)],["debug_string",e.debug_string.substring(0,1999)]],insertOrUpdate(t)}function getConfigValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_configuration");return t.addQuery("key",e),t.query(),0==t.getRowCount()?"":(t.next(),t.getValue("value"))}function getCacheValue(e,t){var r=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");if(r.addQuery("key",e),r.query(),0==r.getRowCount())return null;switch(r.next(),t){case"str":return r.getValue("value_string");case"int":return r.getValue("value_int");case"datetime":return r.getValue("value_datetime")}}function getCurrentToken(){return getCacheValue("token","str")}function setCacheValue(e,t,r){var a={table:"x_fmcna_armis_inte_armis_integration_cache"};switch(a.unique_pairs=[["key",e]],r){case"str":a.update_pairs=[["value_string",t]];break;case"int":a.update_pairs=[["value_int",t]];break;case"datetime":a.update_pairs=[["value_datetime",t]]}return insertOrUpdate(a)}function deleteCacheValue(e){var t=new GlideRecord("x_fmcna_armis_inte_armis_integration_cache");t.addQuery("key",e),t.query(),t.deleteMultiple()}

//GET PENDING RECORDS
//In order to efficiently update statuses for records, we need to use updatemultiple(). However, updatemultiple() conflicts with iteration.
//So, in order to iterate through records to get data from them, then update multiple to set all of them to complete,
function getPendingRecordsEndSysID(n,table)
{
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { return q.getValue('sys_id') } } 
}

function getNumPendingRecords(n,table,end_sys_id)
{  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&amp;lt;=',end_sys_id)
  q.query()
  return q
}

function reset()
{
  var last_t = now()
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.setValue('status','PENDING')
  q.updateMultiple()
   
  return 'Reset all to PENDING (' +  (now() - last_t) + ')'
}

function reportAggregate()
{
  var last_t = now()
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PROCESSING')
  q.query()
  return "Num processing: " + q.getRowCount()
}

function test1(x,order_by)
{
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    q.setValue('status','PROCESSING')
    q.update()
    i++
  }
  return report_string + '\nTest 1, record by record (' +  (now() - last_t) + ')'
}

function test2(x,order_by)
{
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var i=0
  var report_string = "["
  while(q.next())
  {
    switch(i)
    {
      case 0:
      case 1:
        report_string += q.getValue('execution_id') + ",";break;
      case 2:
        report_string += q.getValue('execution_id') + "...";break;
      case x-3:
      case x-2:
        report_string += q.getValue('execution_id') + ",";break;
      case x-1:
        report_string += q.getValue('execution_id') + "]";break;
    }
    i++
  }
  
  var last_t = now()
  debug = []
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==x) { last_id = q.getValue(order_by) } }
  
  var q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.addQuery('status','PENDING')
  q.setLimit(x)
  q.orderBy(order_by)
  q.addQuery(order_by,'&amp;lt;=',last_id)
  q.query()
  q.setValue('status','PROCESSING')
  q.updateMultiple()
  var diff = now() - last_t

  return report_string + '\nTest 2, threshold then updateMultiple (' +  diff + ')'
}

(function execute(inputs, outputs) {
  
  var debug = ['BEGIN']
  var last_t = now()
  var q = null;
  var n=1000
  var m='sys_created_on'
  var table = 'x_fmcna_armis_inte_armis_op_arp_table'
  
  
  /*q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
  q.query()
  q.deleteMultiple()
  
  debug.push('Deleted records | ' + now() - last_t)
  last_t = now()*/
  
  /*for(var i=0;i&amp;lt;900000;i++)
  {
    q = new GlideRecord('x_fmcna_armis_inte_armis_op_arp_table')
    q.initialize()
    q.execution_id = generateID()
    q.ip = generateID()
    q.mac = generateID()
    q.status = 'PENDING'
    q.insert()
  } 
  debug.push('Inserted records | ' + now() - last_t)
  last_t = now()*/
  
  debug.push(reset())
  debug.push(reportAggregate())
  
  //debug.push(test1(n,m))
  //debug.push(reportAggregate())
  //debug.push(reset())
  
  //debug.push(test2(n,m))
  //debug.push(reportAggregate())
  
  last_t = now()
  
  /*var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.query()
  var last_id;
  i = 0;
  while(q.next()) { i++; if(i==n) { last_id = q.getValue('sys_id') } }
  
  var q = new GlideRecord(table)
  q.addQuery('status','PENDING')
  q.setLimit(n)
  q.orderBy('sys_id')
  q.addQuery('sys_id','&amp;lt;=',last_id)
  q.query()*/
  
  var end_sys_id = getPendingRecordsEndSysID(n,table)
  var q = getNumPendingRecords(n,table,end_sys_id)
  var r = getNumPendingRecords(n,table,end_sys_id)
  var s = getNumPendingRecords(n,table,end_sys_id)
  
  debug.push("Queried records. Num records: " + q.getRowCount() + "(" + (now() - last_t) + ")")
  last_t = now()
  
  q.setValue('status','PROCESSING')
  //q.updateMultiple()
  debug.push("PROCESSING multiple. (" + (now() - last_t) + "," + q.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  
  var csv = ["ip,mac"]
  while(r.next()) { csv.push(r.getValue('ip') + "," + r.getValue('mac')); r.setValue('status','COMPLETE'); r.update() }
  debug.push("Iterated through multiple. (" + (now() - last_t) + "," + r.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
  s.setValue('status','COMPLETE')
  s.updateMultiple()
  debug.push("Completed multiple. (" + (now() - last_t) + "," + s.getRowCount() + ")")
  debug.push(reportAggregate())
  last_t = now()
  
             
             
  outputs.debug = debug.join("\n")
})(inputs, outputs);
&lt;/value&gt;&lt;variable display_value=""&gt;71aa7f6647032200b4fad7527c9a719b&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_hub_step_ext_output action="delete_multiple" query="model=3de347151bda14104be764e8bc4bcb8a^sys_idNOT IN7de347151bda14104be764e8bc4bcb8f"/&gt;&lt;sys_hub_step_ext_output action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;element_mapping_provider=com.glide.flow_design.action.data.FlowDesignVariableMapper,uiType=string,uiTypeLabel=String,uiUniqueId=a5fb7715-5ff0-4c05-b05e-dd585731af17&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label/&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;debug&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;help/&gt;&lt;hint/&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;label&gt;debug&lt;/label&gt;&lt;mandatory&gt;true&lt;/mandatory&gt;&lt;max_length&gt;8000&lt;/max_length&gt;&lt;model display_value="Script step"&gt;3de347151bda14104be764e8bc4bcb8a&lt;/model&gt;&lt;model_id&gt;3de347151bda14104be764e8bc4bcb8a&lt;/model_id&gt;&lt;model_table&gt;sys_hub_step_instance&lt;/model_table&gt;&lt;name&gt;var__m_sys_hub_step_ext_output_3de347151bda14104be764e8bc4bcb8a&lt;/name&gt;&lt;next_element/&gt;&lt;order&gt;1&lt;/order&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_hub_step_ext_output&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:12&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;7de347151bda14104be764e8bc4bcb8f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package/&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:12&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_hub_step_ext_output&gt;&lt;sys_documentation action="delete_multiple" query="name=var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54^sys_idNOT IN42e3cb151bda14104be764e8bc4bcb39"/&gt;&lt;sys_documentation action="INSERT_OR_UPDATE"&gt;&lt;element&gt;debug&lt;/element&gt;&lt;help/&gt;&lt;hint/&gt;&lt;label&gt;debug&lt;/label&gt;&lt;language&gt;en&lt;/language&gt;&lt;name&gt;var__m_sys_hub_action_output_e2114b591b9a14104be764e8bc4bcb54&lt;/name&gt;&lt;plural/&gt;&lt;sys_class_name&gt;sys_documentation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;3244578&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-07-28 14:59:13&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;42e3cb151bda14104be764e8bc4bcb39&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name/&gt;&lt;sys_package display_value="Armis Integration" source="x_fmcna_armis_inte"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Armis Integration"&gt;7574b5e3dbf4d050cb24431e13961986&lt;/sys_scope&gt;&lt;sys_update_name/&gt;&lt;sys_updated_by&gt;3244578&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-07-28 14:59:13&lt;/sys_updated_on&gt;&lt;url/&gt;&lt;url_target/&gt;&lt;/sys_documentation&gt;&lt;/record_update&gt;</payload>
        <payload_hash>802383211</payload_hash>
        <record_name>UT_SandboxTestRecordEfficiency</record_name>
        <reverted_from/>
        <source>79da1a891b5690104be764e8bc4bcba7</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-07-29 22:25:17</sys_created_on>
        <sys_id>8a93f17d1b96d4104be764e8bc4bcb4b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1739cae065a0000001</sys_recorded_at>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-07-29 22:25:17</sys_updated_on>
        <type>Action Type</type>
        <update_guid>8e93f17ddd96d410b98d9da713e6be4a</update_guid>
        <update_guid_history>8e93f17ddd96d410b98d9da713e6be4a:802383211,9038a7d51cde1410a90414009197a665:-1193442307,ad076355e2de14109d5cb41d91695f16:584083183,50a667153cde1410c7131bd3f73d8335:1123792431,2dd5e3d117de14101644e96608f91a02:-2091892181,a0c3a71112de14108493b70afe3d1456:652192047,cd41af1da29e1410194b653228aa9fc7:586707339,5aa02fd92e9e14104964d4b2af5c99df:468557067,149f9399269e1410ee2f5322a6c456b1:-1834862433,ffca53d1599e141051ddc933efb3e469:493068553,81aa9b91d89e141022ad1233ce19ccce:818398067,275a5391159e14100f8d7d4b275befd0:-1473070287,7f4a9f51b69e1410a3dca51abfca9ba5:678802827,f187535df25e14108441bbe3b4ea4bda:-298963429,81469f59dd5e1410dd2d7544f46e3279:-1016587431,d9239f1dd81e1410024872876a306d92:760025419,8712d7d9671e14105928f9378983d6fb:-1287798125,39815b99071e14103f6e5e1a4787dad0:-1928716243,b380df19861e141029775ebd21ae9bf0:-531721621,4d5f8f95081e1410b97fbe4b3accf331:1783771443,9bed87557c1e14102babafb719e4cba9:84941323,6d9d0355d71e14108f60627cd5d84ed8:-97024981,8a7d8f15ad1e1410dcc86afa4ae35dd3:-1006716533,8ae3cb1532da141063f317a21d06d04e:51983787,ee114b59ed9a1410fb1d483ac1e1e157:-599525884</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>3244578</sys_created_by>
        <sys_created_on>2020-08-01 19:05:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_db_object display_value="" name="sys_hub_action_type_definition">sys_hub_action_type_definition</sys_db_object>
        <sys_id>04944d16f8b0465380762bce24294939</sys_id>
        <sys_metadata>e2114b591b9a14104be764e8bc4bcb54</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UT_SandboxTestRecordEfficiency</sys_name>
        <sys_package display_value="Armis Integration" source="x_fmcna_armis_inte">7574b5e3dbf4d050cb24431e13961986</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Armis Integration">7574b5e3dbf4d050cb24431e13961986</sys_scope>
        <sys_scope_delete display_value="">3a020304c1d3401c8f291ed84d9cc110</sys_scope_delete>
        <sys_update_name>sys_hub_action_type_definition_e2114b591b9a14104be764e8bc4bcb54</sys_update_name>
        <sys_update_version display_value="sys_hub_action_type_definition_e2114b591b9a14104be764e8bc4bcb54">8a93f17d1b96d4104be764e8bc4bcb4b</sys_update_version>
        <sys_updated_by>3244578</sys_updated_by>
        <sys_updated_on>2020-08-01 19:05:24</sys_updated_on>
    </sys_metadata_delete>
</record_update>
